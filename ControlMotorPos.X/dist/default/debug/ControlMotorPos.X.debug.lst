

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Nov 01 18:35:00 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4431 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   108                           DFLTCON equ 0F60h ;# 
   109  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   110                           CAP3CON equ 0F61h ;# 
   111  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   112                           CAP2CON equ 0F62h ;# 
   113  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   114                           CAP1CON equ 0F63h ;# 
   115  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   116                           CAP3BUFL equ 0F64h ;# 
   117  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   118                           MAXCNTL equ 0F64h ;# 
   119  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   120                           CAP3BUFH equ 0F65h ;# 
   121  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   122                           MAXCNTH equ 0F65h ;# 
   123  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   124                           CAP2BUFL equ 0F66h ;# 
   125  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   126                           POSCNTL equ 0F66h ;# 
   127  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   128                           CAP2BUFH equ 0F67h ;# 
   129  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   130                           POSCNTH equ 0F67h ;# 
   131  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   132                           CAP1BUFL equ 0F68h ;# 
   133  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   134                           VELRL equ 0F68h ;# 
   135  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   136                           CAP1BUFH equ 0F69h ;# 
   137  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   138                           VELRH equ 0F69h ;# 
   139  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   140                           OVDCONS equ 0F6Ah ;# 
   141  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   142                           OVDCOND equ 0F6Bh ;# 
   143  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   144                           FLTCONFIG equ 0F6Ch ;# 
   145  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   146                           DTCON equ 0F6Dh ;# 
   147  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   148                           PWMCON1 equ 0F6Eh ;# 
   149  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   150                           PWMCON0 equ 0F6Fh ;# 
   151  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   152                           SEVTCMPH equ 0F70h ;# 
   153  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   154                           SEVTCMPL equ 0F71h ;# 
   155  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   156                           PDC3H equ 0F72h ;# 
   157  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   158                           PDC3L equ 0F73h ;# 
   159  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   160                           PDC2H equ 0F74h ;# 
   161  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   162                           PDC2L equ 0F75h ;# 
   163  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   164                           PDC1H equ 0F76h ;# 
   165  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   166                           PDC1L equ 0F77h ;# 
   167  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   168                           PDC0H equ 0F78h ;# 
   169  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   170                           PDC0L equ 0F79h ;# 
   171  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   172                           PTPERH equ 0F7Ah ;# 
   173  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   174                           PTPERL equ 0F7Bh ;# 
   175  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   176                           PTMRH equ 0F7Ch ;# 
   177  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   178                           PTMRL equ 0F7Dh ;# 
   179  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   180                           PTCON1 equ 0F7Eh ;# 
   181  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   182                           PTCON0 equ 0F7Fh ;# 
   183  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   184                           PORTA equ 0F80h ;# 
   185  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   186                           PORTB equ 0F81h ;# 
   187  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   188                           PORTC equ 0F82h ;# 
   189  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   190                           PORTD equ 0F83h ;# 
   191  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   192                           PORTE equ 0F84h ;# 
   193  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   194                           TMR5 equ 0F87h ;# 
   195  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   196                           TMR5L equ 0F87h ;# 
   197  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   198                           TMR5H equ 0F88h ;# 
   199  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   200                           LATA equ 0F89h ;# 
   201  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   202                           LATB equ 0F8Ah ;# 
   203  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   204                           LATC equ 0F8Bh ;# 
   205  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   206                           LATD equ 0F8Ch ;# 
   207  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   208                           LATE equ 0F8Dh ;# 
   209  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   210                           PR5 equ 0F90h ;# 
   211  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   212                           PR5L equ 0F90h ;# 
   213  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   214                           PR5H equ 0F91h ;# 
   215  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   216                           TRISA equ 0F92h ;# 
   217  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   218                           DDRA equ 0F92h ;# 
   219  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   220                           TRISB equ 0F93h ;# 
   221  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   222                           DDRB equ 0F93h ;# 
   223  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   224                           TRISC equ 0F94h ;# 
   225  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   226                           DDRC equ 0F94h ;# 
   227  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   228                           TRISD equ 0F95h ;# 
   229  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   230                           DDRD equ 0F95h ;# 
   231  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   232                           TRISE equ 0F96h ;# 
   233  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   234                           DDRE equ 0F96h ;# 
   235  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   236                           ADCHS equ 0F99h ;# 
   237  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   238                           ADCON3 equ 0F9Ah ;# 
   239  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   240                           OSCTUNE equ 0F9Bh ;# 
   241  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   242                           PIE1 equ 0F9Dh ;# 
   243  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   244                           PIR1 equ 0F9Eh ;# 
   245  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   246                           IPR1 equ 0F9Fh ;# 
   247  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   248                           PIE2 equ 0FA0h ;# 
   249  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   250                           PIR2 equ 0FA1h ;# 
   251  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   252                           IPR2 equ 0FA2h ;# 
   253  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   254                           PIE3 equ 0FA3h ;# 
   255  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   256                           PIR3 equ 0FA4h ;# 
   257  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   258                           IPR3 equ 0FA5h ;# 
   259  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   260                           EECON1 equ 0FA6h ;# 
   261  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   262                           EECON2 equ 0FA7h ;# 
   263  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   264                           EEDATA equ 0FA8h ;# 
   265  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   266                           EEADR equ 0FA9h ;# 
   267  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   268                           BAUDCON equ 0FAAh ;# 
   269  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   270                           BAUDCTL equ 0FAAh ;# 
   271  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   272                           RCSTA equ 0FABh ;# 
   273  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   274                           RCSTA1 equ 0FABh ;# 
   275  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   276                           TXSTA equ 0FACh ;# 
   277  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   278                           TXSTA1 equ 0FACh ;# 
   279  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   280                           TXREG equ 0FADh ;# 
   281  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   282                           TXREG1 equ 0FADh ;# 
   283  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   284                           RCREG equ 0FAEh ;# 
   285  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   286                           RCREG1 equ 0FAEh ;# 
   287  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   288                           SPBRG equ 0FAFh ;# 
   289  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   290                           SPBRG1 equ 0FAFh ;# 
   291  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   292                           SPBRGH equ 0FB0h ;# 
   293  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   294                           QEICON equ 0FB6h ;# 
   295  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   296                           T5CON equ 0FB7h ;# 
   297  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   298                           ANSEL0 equ 0FB8h ;# 
   299  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   300                           ANSEL1 equ 0FB9h ;# 
   301  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   302                           CCP2CON equ 0FBAh ;# 
   303  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   304                           CCPR2 equ 0FBBh ;# 
   305  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   306                           CCPR2L equ 0FBBh ;# 
   307  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   308                           CCPR2H equ 0FBCh ;# 
   309  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   310                           CCP1CON equ 0FBDh ;# 
   311  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   312                           CCPR1 equ 0FBEh ;# 
   313  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   314                           CCPR1L equ 0FBEh ;# 
   315  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   316                           CCPR1H equ 0FBFh ;# 
   317  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   318                           ADCON2 equ 0FC0h ;# 
   319  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   320                           ADCON1 equ 0FC1h ;# 
   321  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   322                           ADCON0 equ 0FC2h ;# 
   323  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   324                           ADRES equ 0FC3h ;# 
   325  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   326                           ADRESL equ 0FC3h ;# 
   327  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   328                           ADRESH equ 0FC4h ;# 
   329  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   330                           SSPCON equ 0FC6h ;# 
   331  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   332                           SSPCON1 equ 0FC6h ;# 
   333  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   334                           SSPSTAT equ 0FC7h ;# 
   335  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   336                           SSPADD equ 0FC8h ;# 
   337  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   338                           SSPBUF equ 0FC9h ;# 
   339  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   340                           T2CON equ 0FCAh ;# 
   341  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   342                           PR2 equ 0FCBh ;# 
   343  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   344                           MEMCON equ 0FCBh ;# 
   345  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   346                           TMR2 equ 0FCCh ;# 
   347  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   348                           T1CON equ 0FCDh ;# 
   349  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   350                           TMR1 equ 0FCEh ;# 
   351  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   352                           TMR1L equ 0FCEh ;# 
   353  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   354                           TMR1H equ 0FCFh ;# 
   355  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   356                           RCON equ 0FD0h ;# 
   357  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   358                           WDTCON equ 0FD1h ;# 
   359  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   360                           LVDCON equ 0FD2h ;# 
   361  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   362                           OSCCON equ 0FD3h ;# 
   363  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   364                           T0CON equ 0FD5h ;# 
   365  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   366                           TMR0 equ 0FD6h ;# 
   367  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   368                           TMR0L equ 0FD6h ;# 
   369  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   370                           TMR0H equ 0FD7h ;# 
   371  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   372                           STATUS equ 0FD8h ;# 
   373  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   374                           FSR2 equ 0FD9h ;# 
   375  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   376                           FSR2L equ 0FD9h ;# 
   377  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   378                           FSR2H equ 0FDAh ;# 
   379  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   380                           PLUSW2 equ 0FDBh ;# 
   381  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   382                           PREINC2 equ 0FDCh ;# 
   383  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   384                           POSTDEC2 equ 0FDDh ;# 
   385  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   386                           POSTINC2 equ 0FDEh ;# 
   387  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   388                           INDF2 equ 0FDFh ;# 
   389  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   390                           BSR equ 0FE0h ;# 
   391  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   392                           FSR1 equ 0FE1h ;# 
   393  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   394                           FSR1L equ 0FE1h ;# 
   395  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   396                           FSR1H equ 0FE2h ;# 
   397  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   398                           PLUSW1 equ 0FE3h ;# 
   399  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   400                           PREINC1 equ 0FE4h ;# 
   401  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   402                           POSTDEC1 equ 0FE5h ;# 
   403  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   404                           POSTINC1 equ 0FE6h ;# 
   405  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   406                           INDF1 equ 0FE7h ;# 
   407  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   408                           WREG equ 0FE8h ;# 
   409  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   410                           FSR0 equ 0FE9h ;# 
   411  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   412                           FSR0L equ 0FE9h ;# 
   413  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   414                           FSR0H equ 0FEAh ;# 
   415  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   416                           PLUSW0 equ 0FEBh ;# 
   417  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   418                           PREINC0 equ 0FECh ;# 
   419  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   420                           POSTDEC0 equ 0FEDh ;# 
   421  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   422                           POSTINC0 equ 0FEEh ;# 
   423  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   424                           INDF0 equ 0FEFh ;# 
   425  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   426                           INTCON3 equ 0FF0h ;# 
   427  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   428                           INTCON2 equ 0FF1h ;# 
   429  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   430                           INTCON equ 0FF2h ;# 
   431  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   432                           PROD equ 0FF3h ;# 
   433  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   434                           PRODL equ 0FF3h ;# 
   435  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   436                           PRODH equ 0FF4h ;# 
   437  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   438                           TABLAT equ 0FF5h ;# 
   439  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   440                           TBLPTR equ 0FF6h ;# 
   441  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   442                           TBLPTRL equ 0FF6h ;# 
   443  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   444                           TBLPTRH equ 0FF7h ;# 
   445  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   446                           TBLPTRU equ 0FF8h ;# 
   447  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   448                           PCLAT equ 0FF9h ;# 
   449  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   450                           PC equ 0FF9h ;# 
   451  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   452                           PCL equ 0FF9h ;# 
   453  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   454                           PCLATH equ 0FFAh ;# 
   455  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   456                           PCLATU equ 0FFBh ;# 
   457  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   458                           STKPTR equ 0FFCh ;# 
   459  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   460                           TOS equ 0FFDh ;# 
   461  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   462                           TOSL equ 0FFDh ;# 
   463  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   464                           TOSH equ 0FFEh ;# 
   465  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   466                           TOSU equ 0FFFh ;# 
   467  0000                     	FNCALL	_main,_calculatePWM
   468                           	FNCALL	_main,_init_ISR
   469                           	FNCALL	_main,_init_PWM
   470                           	FNCALL	_main,_init_QEI
   471                           	FNCALL	_main,_init_TMR1
   472                           	FNCALL	_main,_init_UART
   473                           	FNCALL	_main,_init_VNHIO
   474                           	FNCALL	_main,_int2char
   475                           	FNCALL	_main,_write_PWM
   476                           	FNCALL	_int2char,___lwdiv
   477                           	FNCALL	_int2char,___lwmod
   478                           	FNCALL	_init_PWM,_write_PWM
   479                           	FNCALL	_calculatePWM,___aldiv
   480                           	FNCALL	_calculatePWM,___lmul
   481                           	FNCALL	_calculatePWM,___wmul
   482                           	FNROOT	_main
   483                           	FNCALL	intlevel2,_ISR_high
   484                           	global	intlevel2
   485                           	FNROOT	intlevel2
   486                           	global	_ref_pos
   487                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   488                           global __pidataCOMRAM
   489                           __pidataCOMRAM:
   490  000862                     	file	"main.c"
   491                           	line	49
   492                           
   493                           ;initializer for _input
   494                           	dw	(03FEh)&0ffffh
   495  000862  03FE               	line	48
   496                           
   497                           ;initializer for _ref_pos
   498                           	dw	(014B4h)&0ffffh
   499  000864  14B4               	global	_PID
   500                           	global	_velocity
   501                           	global	_volt
   502                           	global	_suma_error
   503                           	global	_string_pos
   504                           	global	_error_ant
   505                           	global	_error
   506                           	global	_cursor
   507                           	global	_GPREG
   508                           	global	int2char@string
   509                           	global	_pos
   510                           psect	nvCOMRAM,class=COMRAM,space=1,noexec
   511                           global __pnvCOMRAM
   512                           __pnvCOMRAM:
   513  000059                     	global	_pos
   514                           _pos:
   515  000059                            ds      2
   516  000059                     	global	_MAXCNTH
   517                           _MAXCNTH	set	0xF65
   518  0000                     	global	_MAXCNTL
   519                           _MAXCNTL	set	0xF64
   520  0000                     	global	_POSCNTL
   521                           _POSCNTL	set	0xF66
   522  0000                     	global	_POSCNTH
   523                           _POSCNTH	set	0xF67
   524  0000                     	global	_TRISC6
   525                           _TRISC6	set	0x7CA6
   526  0000                     	global	_TRISA5
   527                           _TRISA5	set	0x7C95
   528  0000                     	global	_TRISA4
   529                           _TRISA4	set	0x7C94
   530  0000                     	global	_LATC2
   531                           _LATC2	set	0x7C5A
   532  0000                     	global	_TRISC2
   533                           _TRISC2	set	0x7CA2
   534  0000                     	global	_TRISA1
   535                           _TRISA1	set	0x7C91
   536  0000                     	global	_TRISA0
   537                           _TRISA0	set	0x7C90
   538  0000                     	global	_LATA1
   539                           _LATA1	set	0x7C49
   540  0000                     	global	_LATA0
   541                           _LATA0	set	0x7C48
   542  0000                     	global	_TMR1
   543                           _TMR1	set	0xFCE
   544  0000                     	global	_SPBRG
   545                           _SPBRG	set	0xFAF
   546  0000                     	global	_BAUDCON
   547                           _BAUDCON	set	0xFAA
   548  0000                     	global	_RCSTA
   549                           _RCSTA	set	0xFAB
   550  0000                     	global	_TXSTA
   551                           _TXSTA	set	0xFAC
   552  0000                     	global	_QEICON
   553                           _QEICON	set	0xFB6
   554  0000                     	global	_CCPR1L
   555                           _CCPR1L	set	0xFBE
   556  0000                     	global	_CCP1CONbits
   557                           _CCP1CONbits	set	0xFBD
   558  0000                     	global	_PR2
   559                           _PR2	set	0xFCB
   560  0000                     	global	_T2CON
   561                           _T2CON	set	0xFCA
   562  0000                     	global	_CCP1CON
   563                           _CCP1CON	set	0xFBD
   564  0000                     	global	_ANSEL1
   565                           _ANSEL1	set	0xFB9
   566  0000                     	global	_ANSEL0
   567                           _ANSEL0	set	0xFB8
   568  0000                     	global	_T1CON
   569                           _T1CON	set	0xFCD
   570  0000                     	global	_OSCCON
   571                           _OSCCON	set	0xFD3
   572  0000                     	global	_TXREG
   573                           _TXREG	set	0xFAD
   574  0000                     	global	_IPEN
   575                           _IPEN	set	0x7E87
   576  0000                     	global	_TXIP
   577                           _TXIP	set	0x7CFC
   578  0000                     	global	_TMR1IP
   579                           _TMR1IP	set	0x7CF8
   580  0000                     	global	_TXIF
   581                           _TXIF	set	0x7CF4
   582  0000                     	global	_TXIE
   583                           _TXIE	set	0x7CEC
   584  0000                     	global	_TMR1ON
   585                           _TMR1ON	set	0x7E68
   586  0000                     	global	_TMR1IF
   587                           _TMR1IF	set	0x7CF0
   588  0000                     	global	_TMR1IE
   589                           _TMR1IE	set	0x7CE8
   590  0000                     	global	_GIE
   591                           _GIE	set	0x7F97
   592  0000                     ; #config settings
   593                           global __CFG_OSC$RC
   594                           __CFG_OSC$RC equ 0x0
   595  0000                     global __CFG_FCMEN$ON
   596                           __CFG_FCMEN$ON equ 0x0
   597  0000                     global __CFG_IESO$ON
   598                           __CFG_IESO$ON equ 0x0
   599  0000                     global __CFG_PWRTEN$OFF
   600                           __CFG_PWRTEN$OFF equ 0x0
   601  0000                     global __CFG_BOREN$ON
   602                           __CFG_BOREN$ON equ 0x0
   603  0000                     global __CFG_WDTEN$OFF
   604                           __CFG_WDTEN$OFF equ 0x0
   605  0000                     global __CFG_WDPS$32768
   606                           __CFG_WDPS$32768 equ 0x0
   607  0000                     global __CFG_WINEN$OFF
   608                           __CFG_WINEN$OFF equ 0x0
   609  0000                     global __CFG_PWMPIN$OFF
   610                           __CFG_PWMPIN$OFF equ 0x0
   611  0000                     global __CFG_LPOL$HIGH
   612                           __CFG_LPOL$HIGH equ 0x0
   613  0000                     global __CFG_HPOL$HIGH
   614                           __CFG_HPOL$HIGH equ 0x0
   615  0000                     global __CFG_T1OSCMX$ON
   616                           __CFG_T1OSCMX$ON equ 0x0
   617  0000                     global __CFG_FLTAMX$RC1
   618                           __CFG_FLTAMX$RC1 equ 0x0
   619  0000                     global __CFG_SSPMX$RC7
   620                           __CFG_SSPMX$RC7 equ 0x0
   621  0000                     global __CFG_PWM4MX$RB5
   622                           __CFG_PWM4MX$RB5 equ 0x0
   623  0000                     global __CFG_EXCLKMX$RC3
   624                           __CFG_EXCLKMX$RC3 equ 0x0
   625  0000                     global __CFG_MCLRE$ON
   626                           __CFG_MCLRE$ON equ 0x0
   627  0000                     global __CFG_STVREN$ON
   628                           __CFG_STVREN$ON equ 0x0
   629  0000                     global __CFG_LVP$OFF
   630                           __CFG_LVP$OFF equ 0x0
   631  0000                     global __CFG_CP0$OFF
   632                           __CFG_CP0$OFF equ 0x0
   633  0000                     global __CFG_CP1$OFF
   634                           __CFG_CP1$OFF equ 0x0
   635  0000                     global __CFG_CP2$OFF
   636                           __CFG_CP2$OFF equ 0x0
   637  0000                     global __CFG_CP3$OFF
   638                           __CFG_CP3$OFF equ 0x0
   639  0000                     global __CFG_CPB$OFF
   640                           __CFG_CPB$OFF equ 0x0
   641  0000                     global __CFG_CPD$OFF
   642                           __CFG_CPD$OFF equ 0x0
   643  0000                     global __CFG_WRT0$OFF
   644                           __CFG_WRT0$OFF equ 0x0
   645  0000                     global __CFG_WRT1$OFF
   646                           __CFG_WRT1$OFF equ 0x0
   647  0000                     global __CFG_WRT2$OFF
   648                           __CFG_WRT2$OFF equ 0x0
   649  0000                     global __CFG_WRT3$OFF
   650                           __CFG_WRT3$OFF equ 0x0
   651  0000                     global __CFG_WRTC$OFF
   652                           __CFG_WRTC$OFF equ 0x0
   653  0000                     global __CFG_WRTB$OFF
   654                           __CFG_WRTB$OFF equ 0x0
   655  0000                     global __CFG_WRTD$OFF
   656                           __CFG_WRTD$OFF equ 0x0
   657  0000                     global __CFG_EBTR0$OFF
   658                           __CFG_EBTR0$OFF equ 0x0
   659  0000                     global __CFG_EBTR1$OFF
   660                           __CFG_EBTR1$OFF equ 0x0
   661  0000                     global __CFG_EBTR2$OFF
   662                           __CFG_EBTR2$OFF equ 0x0
   663  0000                     global __CFG_EBTR3$OFF
   664                           __CFG_EBTR3$OFF equ 0x0
   665  0000                     global __CFG_EBTRB$OFF
   666                           __CFG_EBTRB$OFF equ 0x0
   667  0000                     	file	"C:\Users\MarioVL\AppData\Local\Temp\samk."
   668                           	line	#
   669                           psect	cinit,class=CODE,delta=1,reloc=2
   670                           global __pcinit
   671                           __pcinit:
   672  000754                     global start_initialization
   673                           start_initialization:
   674  000754                     
   675                           global __initialization
   676                           __initialization:
   677  000754                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   678                           global __pbssCOMRAM
   679                           __pbssCOMRAM:
   680  00002D                     	global	_PID
   681                           _PID:
   682  00002D                            ds      12
   683  00002D                     	global	_velocity
   684                           _velocity:
   685  000039                            ds      4
   686  000039                     	global	_volt
   687                           _volt:
   688  00003D                            ds      4
   689  00003D                     	global	_suma_error
   690                           _suma_error:
   691  000041                            ds      4
   692  000041                     	global	_string_pos
   693                           _string_pos:
   694  000045                            ds      2
   695  000045                     	global	_pos_ant
   696                           	global	_pos_ant
   697                           _pos_ant:
   698  000047                            ds      2
   699  000047                     	global	_error_ant
   700                           _error_ant:
   701  000049                            ds      2
   702  000049                     	global	_error
   703                           _error:
   704  00004B                            ds      2
   705  00004B                     	global	_cursor
   706                           _cursor:
   707  00004D                            ds      1
   708  00004D                     	global	_pos_degree
   709                           	global	_pos_degree
   710                           _pos_degree:
   711  00004E                            ds      1
   712  00004E                     	global	_GPREG
   713                           _GPREG:
   714  00004F                            ds      1
   715  00004F                     int2char@string:
   716  000050                            ds      5
   717  000050                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   718                           global __pdataCOMRAM
   719                           __pdataCOMRAM:
   720  000055                     	file	"main.c"
   721                           	line	49
   722                           	global	_input
   723                           	global	_input
   724                           _input:
   725  000055                            ds      2
   726  000055                     psect	dataCOMRAM
   727                           	file	"main.c"
   728                           	line	48
   729                           	global	_ref_pos
   730                           _ref_pos:
   731  000057                            ds      2
   732  000057                     	file	"C:\Users\MarioVL\AppData\Local\Temp\samk."
   733                           	line	#
   734                           psect	cinit
   735                           ; Initialize objects allocated to COMRAM (4 bytes)
   736                           	global __pidataCOMRAM
   737                           	; load TBLPTR registers with __pidataCOMRAM
   738                           	movlw	low (__pidataCOMRAM)
   739  000754  0E62               	movwf	tblptrl
   740  000756  6EF6               	movlw	high(__pidataCOMRAM)
   741  000758  0E08               	movwf	tblptrh
   742  00075A  6EF7               	movlw	low highword(__pidataCOMRAM)
   743  00075C  0E00               	movwf	tblptru
   744  00075E  6EF8               	lfsr	0,__pdataCOMRAM
   745  000760  EE00  F055         	lfsr	1,4
   746  000764  EE10 F004          	copy_data0:
   747  000768                     	tblrd	*+
   748  000768  0009               	movff	tablat, postinc0
   749  00076A  CFF5 FFEE          	movf	postdec1,w
   750  00076E  50E5               	movf	fsr1l,w
   751  000770  50E1               	bnz	copy_data0
   752  000772  E1FA               	line	#
   753                           ; Clear objects allocated to COMRAM (40 bytes)
   754                           	global __pbssCOMRAM
   755                           lfsr	0,__pbssCOMRAM
   756  000774  EE00  F02D         movlw	40
   757  000778  0E28               clear_0:
   758  00077A                     clrf	postinc0,c
   759  00077A  6AEE               decf	wreg
   760  00077C  06E8               bnz	clear_0
   761  00077E  E1FD               psect cinit,class=CODE,delta=1
   762                           global end_of_initialization,__end_of__initialization
   763                           
   764                           ;End of C runtime variable initialization code
   765                           
   766                           end_of_initialization:
   767  000780                     __end_of__initialization:
   768  000780                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   769  000780  905B               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   770  000782  925B               movlb 0
   771  000784  0100               goto _main	;jump to C main() function
   772  000786  EF53  F002         psect	cstackBANK0,class=BANK0,space=1,noexec
   773                           global __pcstackBANK0
   774                           __pcstackBANK0:
   775  000060                     ??_write_PWM:	; 1 bytes @ 0x0
   776  000060                     	ds   1
   777  000060                     	global	main@counter
   778                           main@counter:	; 1 bytes @ 0x1
   779  000061                     	ds   1
   780  000061                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   781                           global __pcstackCOMRAM
   782                           __pcstackCOMRAM:
   783  000001                     ?_init_VNHIO:	; 1 bytes @ 0x0
   784  000001                     ?_init_TMR1:	; 1 bytes @ 0x0
   785  000001                     ?_init_PWM:	; 1 bytes @ 0x0
   786  000001                     ?_init_QEI:	; 1 bytes @ 0x0
   787  000001                     ?_init_UART:	; 1 bytes @ 0x0
   788  000001                     ?_init_ISR:	; 1 bytes @ 0x0
   789  000001                     ?_ISR_high:	; 1 bytes @ 0x0
   790  000001                     ??_ISR_high:	; 1 bytes @ 0x0
   791  000001                     ?_main:	; 1 bytes @ 0x0
   792  000001                     calculatePWM@setpoint:	; 1 bytes @ 0x0
   793  000001                     	ds   4
   794  000001                     ??_init_VNHIO:	; 1 bytes @ 0x4
   795  000005                     ??_init_TMR1:	; 1 bytes @ 0x4
   796  000005                     ??_init_QEI:	; 1 bytes @ 0x4
   797  000005                     ??_init_UART:	; 1 bytes @ 0x4
   798  000005                     ??_init_ISR:	; 1 bytes @ 0x4
   799  000005                     	global	?___wmul
   800                           ?___wmul:	; 2 bytes @ 0x4
   801  000005                     	global	?___lwdiv
   802                           ?___lwdiv:	; 2 bytes @ 0x4
   803  000005                     	global	?___lwmod
   804                           ?___lwmod:	; 2 bytes @ 0x4
   805  000005                     	global	?___lmul
   806                           ?___lmul:	; 4 bytes @ 0x4
   807  000005                     	global	___wmul@multiplier
   808                           ___wmul@multiplier:	; 2 bytes @ 0x4
   809  000005                     	global	___lwdiv@dividend
   810                           ___lwdiv@dividend:	; 2 bytes @ 0x4
   811  000005                     	global	___lwmod@dividend
   812                           ___lwmod@dividend:	; 2 bytes @ 0x4
   813  000005                     	global	___lmul@multiplier
   814                           ___lmul@multiplier:	; 4 bytes @ 0x4
   815  000005                     	ds   2
   816  000005                     	global	___wmul@multiplicand
   817                           ___wmul@multiplicand:	; 2 bytes @ 0x6
   818  000007                     	global	___lwdiv@divisor
   819                           ___lwdiv@divisor:	; 2 bytes @ 0x6
   820  000007                     	global	___lwmod@divisor
   821                           ___lwmod@divisor:	; 2 bytes @ 0x6
   822  000007                     	ds   2
   823  000007                     ??___wmul:	; 1 bytes @ 0x8
   824  000009                     ??___lwdiv:	; 1 bytes @ 0x8
   825  000009                     ??___lwmod:	; 1 bytes @ 0x8
   826  000009                     	global	___lwdiv@counter
   827                           ___lwdiv@counter:	; 1 bytes @ 0x8
   828  000009                     	global	___lwmod@counter
   829                           ___lwmod@counter:	; 1 bytes @ 0x8
   830  000009                     	global	___wmul@product
   831                           ___wmul@product:	; 2 bytes @ 0x8
   832  000009                     	global	___lmul@multiplicand
   833                           ___lmul@multiplicand:	; 4 bytes @ 0x8
   834  000009                     	ds   1
   835  000009                     	global	___lwdiv@quotient
   836                           ___lwdiv@quotient:	; 2 bytes @ 0x9
   837  00000A                     	ds   2
   838  00000A                     	global	?_int2char
   839                           ?_int2char:	; 2 bytes @ 0xB
   840  00000C                     	global	int2char@number
   841                           int2char@number:	; 2 bytes @ 0xB
   842  00000C                     	ds   1
   843  00000C                     ??___lmul:	; 1 bytes @ 0xC
   844  00000D                     	global	___lmul@product
   845                           ___lmul@product:	; 4 bytes @ 0xC
   846  00000D                     	ds   1
   847  00000D                     ??_int2char:	; 1 bytes @ 0xD
   848  00000E                     	global	int2char@num
   849                           int2char@num:	; 2 bytes @ 0xD
   850  00000E                     	ds   2
   851  00000E                     	global	int2char@digit
   852                           int2char@digit:	; 1 bytes @ 0xF
   853  000010                     	ds   1
   854  000010                     	global	?___aldiv
   855                           ?___aldiv:	; 4 bytes @ 0x10
   856  000011                     	global	___aldiv@dividend
   857                           ___aldiv@dividend:	; 4 bytes @ 0x10
   858  000011                     	ds   4
   859  000011                     	global	___aldiv@divisor
   860                           ___aldiv@divisor:	; 4 bytes @ 0x14
   861  000015                     	ds   4
   862  000015                     ??___aldiv:	; 1 bytes @ 0x18
   863  000019                     	global	___aldiv@counter
   864                           ___aldiv@counter:	; 1 bytes @ 0x18
   865  000019                     	ds   1
   866  000019                     	global	___aldiv@sign
   867                           ___aldiv@sign:	; 1 bytes @ 0x19
   868  00001A                     	ds   1
   869  00001A                     	global	___aldiv@quotient
   870                           ___aldiv@quotient:	; 4 bytes @ 0x1A
   871  00001B                     	ds   4
   872  00001B                     	global	?_calculatePWM
   873                           ?_calculatePWM:	; 4 bytes @ 0x1E
   874  00001F                     	ds   4
   875  00001F                     ??_calculatePWM:	; 1 bytes @ 0x22
   876  000023                     	ds   8
   877  000023                     ?_write_PWM:	; 1 bytes @ 0x2A
   878  00002B                     	global	write_PWM@dutyCycle
   879                           write_PWM@dutyCycle:	; 2 bytes @ 0x2A
   880  00002B                     	ds   2
   881  00002B                     ??_init_PWM:	; 1 bytes @ 0x2C
   882  00002D                     ??_main:	; 1 bytes @ 0x2C
   883  00002D                     ;!
   884                           ;!Data Sizes:
   885                           ;!    Strings     0
   886                           ;!    Constant    0
   887                           ;!    Data        4
   888                           ;!    BSS         40
   889                           ;!    Persistent  2
   890                           ;!    Stack       0
   891                           ;!
   892                           ;!Auto Spaces:
   893                           ;!    Space          Size  Autos    Used
   894                           ;!    COMRAM           94     44      90
   895                           ;!    BANK0           160      2       2
   896                           ;!    BANK1           256      0       0
   897                           ;!    BANK2           244      0       0
   898                           
   899                           ;!
   900                           ;!Pointer List with Targets:
   901                           ;!
   902                           ;!    sp__int2char	PTR unsigned char  size(2) Largest target is 5
   903                           ;!		 -> int2char@string(COMRAM[5]), 
   904                           ;!
   905                           ;!    string_pos	PTR unsigned char  size(2) Largest target is 5
   906                           ;!		 -> NULL(NULL[0]), int2char@string(COMRAM[5]), 
   907                           ;!
   908                           
   909                           
   910                           ;!
   911                           ;!Critical Paths under _main in COMRAM
   912                           ;!
   913                           ;!    _main->_write_PWM
   914                           ;!    _int2char->___lwdiv
   915                           ;!    _init_PWM->_write_PWM
   916                           ;!    _write_PWM->_calculatePWM
   917                           ;!    _calculatePWM->___aldiv
   918                           ;!    ___aldiv->___lmul
   919                           ;!
   920                           ;!Critical Paths under _ISR_high in COMRAM
   921                           ;!
   922                           ;!    None.
   923                           ;!
   924                           ;!Critical Paths under _main in BANK0
   925                           ;!
   926                           ;!    _main->_write_PWM
   927                           ;!    _init_PWM->_write_PWM
   928                           ;!
   929                           ;!Critical Paths under _ISR_high in BANK0
   930                           ;!
   931                           ;!    None.
   932                           ;!
   933                           ;!Critical Paths under _main in BANK1
   934                           ;!
   935                           ;!    None.
   936                           ;!
   937                           ;!Critical Paths under _ISR_high in BANK1
   938                           ;!
   939                           ;!    None.
   940                           ;!
   941                           ;!Critical Paths under _main in BANK2
   942                           ;!
   943                           ;!    None.
   944                           ;!
   945                           ;!Critical Paths under _ISR_high in BANK2
   946                           ;!
   947                           ;!    None.
   948                           
   949 ;;
   950 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   951 ;;
   952                           
   953                           ;!
   954                           ;!Call Graph Tables:
   955                           ;!
   956                           ;! ---------------------------------------------------------------------------------
   957                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   958                           ;! ---------------------------------------------------------------------------------
   959                           ;! (0) _main                                                 1     1      0    4156
   960                           ;!                                              1 BANK0      1     1      0
   961                           ;!                       _calculatePWM
   962                           ;!                           _init_ISR
   963                           ;!                           _init_PWM
   964                           ;!                           _init_QEI
   965                           ;!                          _init_TMR1
   966                           ;!                          _init_UART
   967                           ;!                         _init_VNHIO
   968                           ;!                           _int2char
   969                           ;!                          _write_PWM
   970                           ;! ---------------------------------------------------------------------------------
   971                           ;! (1) _int2char                                             5     3      2    1090
   972                           ;!                                             11 COMRAM     5     3      2
   973                           ;!                            ___lwdiv
   974                           ;!                            ___lwmod
   975                           ;! ---------------------------------------------------------------------------------
   976                           ;! (2) ___lwmod                                              5     1      4     412
   977                           ;!                                              4 COMRAM     5     1      4
   978                           ;! ---------------------------------------------------------------------------------
   979                           ;! (2) ___lwdiv                                              7     3      4     421
   980                           ;!                                              4 COMRAM     7     3      4
   981                           ;! ---------------------------------------------------------------------------------
   982                           ;! (1) _init_VNHIO                                           0     0      0       0
   983                           ;! ---------------------------------------------------------------------------------
   984                           ;! (1) _init_UART                                            0     0      0       0
   985                           ;! ---------------------------------------------------------------------------------
   986                           ;! (1) _init_TMR1                                            0     0      0       0
   987                           ;! ---------------------------------------------------------------------------------
   988                           ;! (1) _init_QEI                                             0     0      0       0
   989                           ;! ---------------------------------------------------------------------------------
   990                           ;! (1) _init_PWM                                             0     0      0     245
   991                           ;!                          _write_PWM
   992                           ;! ---------------------------------------------------------------------------------
   993                           ;! (1) _write_PWM                                            3     1      2     245
   994                           ;!                                             42 COMRAM     2     0      2
   995                           ;!                                              0 BANK0      1     1      0
   996                           ;!                       _calculatePWM (ARG)
   997                           ;! ---------------------------------------------------------------------------------
   998                           ;! (1) _init_ISR                                             0     0      0       0
   999                           ;! ---------------------------------------------------------------------------------
  1000                           ;! (1) _calculatePWM                                        13     9      4    2573
  1001                           ;!                                             30 COMRAM    12     8      4
  1002                           ;!                            ___aldiv
  1003                           ;!                             ___lmul
  1004                           ;!                             ___wmul
  1005                           ;! ---------------------------------------------------------------------------------
  1006                           ;! (2) ___wmul                                               6     2      4     412
  1007                           ;!                                              4 COMRAM     6     2      4
  1008                           ;! ---------------------------------------------------------------------------------
  1009                           ;! (2) ___lmul                                              12     4      8    1176
  1010                           ;!                                              4 COMRAM    12     4      8
  1011                           ;! ---------------------------------------------------------------------------------
  1012                           ;! (2) ___aldiv                                             14     6      8     985
  1013                           ;!                                             16 COMRAM    14     6      8
  1014                           ;!                             ___lmul (ARG)
  1015                           ;! ---------------------------------------------------------------------------------
  1016                           ;! Estimated maximum stack depth 2
  1017                           ;! ---------------------------------------------------------------------------------
  1018                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1019                           ;! ---------------------------------------------------------------------------------
  1020                           ;! (3) _ISR_high                                             4     4      0       0
  1021                           ;!                                              0 COMRAM     4     4      0
  1022                           ;! ---------------------------------------------------------------------------------
  1023                           ;! Estimated maximum stack depth 3
  1024                           ;! ---------------------------------------------------------------------------------
  1025                           ;!
  1026                           ;! Call Graph Graphs:
  1027                           ;!
  1028                           ;! _main (ROOT)
  1029                           ;!   _calculatePWM
  1030                           ;!     ___aldiv
  1031                           ;!       ___lmul (ARG)
  1032                           ;!     ___lmul
  1033                           ;!     ___wmul
  1034                           ;!   _init_ISR
  1035                           ;!   _init_PWM
  1036                           ;!     _write_PWM
  1037                           ;!       _calculatePWM (ARG)
  1038                           ;!         ___aldiv
  1039                           ;!           ___lmul (ARG)
  1040                           ;!         ___lmul
  1041                           ;!         ___wmul
  1042                           ;!   _init_QEI
  1043                           ;!   _init_TMR1
  1044                           ;!   _init_UART
  1045                           ;!   _init_VNHIO
  1046                           ;!   _int2char
  1047                           ;!     ___lwdiv
  1048                           ;!     ___lwmod
  1049                           ;!   _write_PWM
  1050                           ;!     _calculatePWM (ARG)
  1051                           ;!       ___aldiv
  1052                           ;!         ___lmul (ARG)
  1053                           ;!       ___lmul
  1054                           ;!       ___wmul
  1055                           ;!
  1056                           ;! _ISR_high (ROOT)
  1057                           ;!
  1058                           
  1059                           ;! Address spaces:
  1060                           
  1061                           ;!Name               Size   Autos  Total    Cost      Usage
  1062                           ;!BIGRAM             2F3      0       0      10        0.0%
  1063                           ;!EEDATA             100      0       0       0        0.0%
  1064                           ;!BITBANK1           100      0       0       6        0.0%
  1065                           ;!BANK1              100      0       0       7        0.0%
  1066                           ;!BITBANK2            F4      0       0       8        0.0%
  1067                           ;!BANK2               F4      0       0       9        0.0%
  1068                           ;!BITBANK0            A0      0       0       3        0.0%
  1069                           ;!BANK0               A0      2       2       4        1.3%
  1070                           ;!BITCOMRAM           5E      0       0       0        0.0%
  1071                           ;!COMRAM              5E     2C      5A       1       95.7%
  1072                           ;!BITSFR_5             0      0       0     200        0.0%
  1073                           ;!SFR_5                0      0       0     200        0.0%
  1074                           ;!BITSFR_4             0      0       0     200        0.0%
  1075                           ;!SFR_4                0      0       0     200        0.0%
  1076                           ;!BITSFR_3             0      0       0     200        0.0%
  1077                           ;!SFR_3                0      0       0     200        0.0%
  1078                           ;!BITSFR_2             0      0       0     200        0.0%
  1079                           ;!SFR_2                0      0       0     200        0.0%
  1080                           ;!BITSFR_1             0      0       0     200        0.0%
  1081                           ;!SFR_1                0      0       0     200        0.0%
  1082                           ;!BITSFR               0      0       0     200        0.0%
  1083                           ;!SFR                  0      0       0     200        0.0%
  1084                           ;!STACK                0      0       0       2        0.0%
  1085                           ;!NULL                 0      0       0       0        0.0%
  1086                           ;!ABS                  0      0      5C       5        0.0%
  1087                           ;!DATA                 0      0      5C      11        0.0%
  1088                           ;!CODE                 0      0       0       0        0.0%
  1089                           
  1090                           	global	_main
  1091                           
  1092 ;; *************** function _main *****************
  1093 ;; Defined at:
  1094 ;;		line 91 in file "main.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  counter         1    1[BANK0 ] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1108 ;;      Params:         0       0       0       0
  1109 ;;      Locals:         0       1       0       0
  1110 ;;      Temps:          0       0       0       0
  1111 ;;      Totals:         0       1       0       0
  1112 ;;Total ram usage:        1 bytes
  1113 ;; Hardware stack levels required when called:    3
  1114 ;; This function calls:
  1115 ;;		_calculatePWM
  1116 ;;		_init_ISR
  1117 ;;		_init_PWM
  1118 ;;		_init_QEI
  1119 ;;		_init_TMR1
  1120 ;;		_init_UART
  1121 ;;		_init_VNHIO
  1122 ;;		_int2char
  1123 ;;		_write_PWM
  1124 ;; This function is called by:
  1125 ;;		Startup code after reset
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1129                           	file	"main.c"
  1130                           	line	91
  1131                           global __ptext0
  1132                           __ptext0:
  1133  0004A6                     psect	text0
  1134                           	file	"main.c"
  1135                           	line	91
  1136                           	global	__size_of_main
  1137                           	__size_of_main	equ	__end_of_main-_main
  1138  0000                     	
  1139                           _main:
  1140  0004A6                     ;incstack = 0
  1141                           	opt	stack 28
  1142                           	line	93
  1143                           	
  1144                           l1484:
  1145  0004A6                     ;main.c: 93:     OSCCON = 0x70;
  1146                           	movlw	low(070h)
  1147  0004A6  0E70               	movwf	((c:4051)),c	;volatile
  1148  0004A8  6ED3               	line	95
  1149                           ;main.c: 95:     PID.Kp = 5310;
  1150                           	movlw	low(014BEh)
  1151  0004AA  0EBE               	movwf	((c:_PID)),c
  1152  0004AC  6E2D               	movlw	high(014BEh)
  1153  0004AE  0E14               	movwf	((c:_PID+1)),c
  1154  0004B0  6E2E               	movlw	low highword(014BEh)
  1155  0004B2  0E00               	movwf	((c:_PID+2)),c
  1156  0004B4  6E2F               	movlw	high highword(014BEh)
  1157  0004B6  0E00               	movwf	((c:_PID+3)),c
  1158  0004B8  6E30               	line	96
  1159                           ;main.c: 96:     PID.Ki = 2655;
  1160                           	movlw	low(0A5Fh)
  1161  0004BA  0E5F               	movwf	(0+((c:_PID)+04h)),c
  1162  0004BC  6E31               	movlw	high(0A5Fh)
  1163  0004BE  0E0A               	movwf	(1+((c:_PID)+04h)),c
  1164  0004C0  6E32               	movlw	low highword(0A5Fh)
  1165  0004C2  0E00               	movwf	(2+((c:_PID)+04h)),c
  1166  0004C4  6E33               	movlw	high highword(0A5Fh)
  1167  0004C6  0E00               	movwf	(3+((c:_PID)+04h)),c
  1168  0004C8  6E34               	line	97
  1169                           ;main.c: 97:     PID.Kd = 2664;
  1170                           	movlw	low(0A68h)
  1171  0004CA  0E68               	movwf	(0+((c:_PID)+08h)),c
  1172  0004CC  6E35               	movlw	high(0A68h)
  1173  0004CE  0E0A               	movwf	(1+((c:_PID)+08h)),c
  1174  0004D0  6E36               	movlw	low highword(0A68h)
  1175  0004D2  0E00               	movwf	(2+((c:_PID)+08h)),c
  1176  0004D4  6E37               	movlw	high highword(0A68h)
  1177  0004D6  0E00               	movwf	(3+((c:_PID)+08h)),c
  1178  0004D8  6E38               	line	99
  1179                           	
  1180                           l1486:
  1181  0004DA                     ;main.c: 99:     init_VNHIO();
  1182                           	call	_init_VNHIO	;wreg free
  1183  0004DA  EC18  F004         	line	100
  1184                           	
  1185                           l1488:
  1186  0004DE                     ;main.c: 100:     init_TMR1();
  1187                           	call	_init_TMR1	;wreg free
  1188  0004DE  EC2A  F004         	line	101
  1189                           	
  1190                           l1490:
  1191  0004E2                     ;main.c: 101:     init_PWM();
  1192                           	call	_init_PWM	;wreg free
  1193  0004E2  ECFF  F003         	line	102
  1194                           	
  1195                           l1492:
  1196  0004E6                     ;main.c: 102:     init_QEI();
  1197                           	call	_init_QEI	;wreg free
  1198  0004E6  ECEE  F003         	line	103
  1199                           	
  1200                           l1494:
  1201  0004EA                     ;main.c: 103:     init_UART();
  1202                           	call	_init_UART	;wreg free
  1203  0004EA  EC0D  F004         	line	104
  1204                           	
  1205                           l1496:
  1206  0004EE                     ;main.c: 104:     init_ISR();
  1207                           	call	_init_ISR	;wreg free
  1208  0004EE  EC21  F004         	line	105
  1209                           	
  1210                           l1498:
  1211  0004F2                     ;main.c: 105:     GPREG.DIRCTRL = 1;
  1212                           	bsf	((c:_GPREG)),c,0
  1213  0004F2  804F               	line	107
  1214                           	
  1215                           l1500:
  1216  0004F4                     ;main.c: 107:     uint8_t counter = 0;
  1217                           	movlw	low(0)
  1218  0004F4  0E00               	movlb	0	; () banked
  1219  0004F6  0100               	movwf	((main@counter))&0ffh
  1220  0004F8  6F61               	goto	l1502
  1221  0004FA  EF7F  F002         	line	109
  1222                           ;main.c: 109:     while(1)
  1223                           	
  1224                           l137:; BSR set to: 0
  1225  0004FE                     
  1226                           	line	111
  1227                           	
  1228                           l1502:
  1229  0004FE                     ;main.c: 110:     {;main.c: 111:         if(1 == GPREG.STCTRL)
  1230                           	btfss	((c:_GPREG)),c,1
  1231  0004FE  A24F               	goto	u621
  1232  000500  EF84  F002         	goto	u620
  1233  000504  EF86  F002         u621:
  1234  000508                     	goto	l1502
  1235  000508  EF7F  F002         u620:
  1236  00050C                     	line	113
  1237                           	
  1238                           l1504:
  1239  00050C                     ;main.c: 112:         {;main.c: 113:             write_PWM(calculatePWM(ref_pos));
  1240                           	movf	((c:_ref_pos)),c,w
  1241  00050C  5057               	
  1242                           	call	_calculatePWM
  1243  00050E  EC65  F000         	movff	0+?_calculatePWM,(c:write_PWM@dutyCycle)
  1244  000512  C01F  F02B         	movff	1+?_calculatePWM,(c:write_PWM@dutyCycle+1)
  1245  000516  C020  F02C         	call	_write_PWM	;wreg free
  1246  00051A  ECDA  F003         	line	115
  1247                           	
  1248                           l1506:
  1249  00051E                     ;main.c: 115:             if(1 == GPREG.DIRCTRL)
  1250                           	btfss	((c:_GPREG)),c,0
  1251  00051E  A04F               	goto	u631
  1252  000520  EF94  F002         	goto	u630
  1253  000524  EF96  F002         u631:
  1254  000528                     	goto	l139
  1255  000528  EF9A  F002         u630:
  1256  00052C                     	line	118
  1257                           	
  1258                           l1508:
  1259  00052C                     ;main.c: 116:             {;main.c: 118:                 LATA0 = 0;
  1260                           	bcf	c:(31816/8),(31816)&7	;volatile
  1261  00052C  9089               	line	119
  1262                           ;main.c: 119:                 LATA1 = 1;
  1263                           	bsf	c:(31817/8),(31817)&7	;volatile
  1264  00052E  8289               	line	120
  1265                           ;main.c: 120:             } else {
  1266                           	goto	l1510
  1267  000530  EF9E  F002         	
  1268                           l139:
  1269  000534                     	line	122
  1270                           ;main.c: 122:                 LATA0 = 1;
  1271                           	bsf	c:(31816/8),(31816)&7	;volatile
  1272  000534  8089               	line	123
  1273                           ;main.c: 123:                 LATA1 = 0;
  1274                           	bcf	c:(31817/8),(31817)&7	;volatile
  1275  000536  9289               	goto	l1510
  1276  000538  EF9E  F002         	line	124
  1277                           ;main.c: 124:             }
  1278                           	
  1279                           l140:
  1280  00053C                     	line	126
  1281                           	
  1282                           l1510:
  1283  00053C                     ;main.c: 126:             string_pos = int2char(pos);
  1284                           	movff	(c:_pos),(c:int2char@number)
  1285  00053C  C059  F00C         	movff	(c:_pos+1),(c:int2char@number+1)
  1286  000540  C05A  F00D         	call	_int2char	;wreg free
  1287  000544  ECF7  F002         	movff	0+?_int2char,(c:_string_pos)
  1288  000548  C00C  F045         	movff	1+?_int2char,(c:_string_pos+1)
  1289  00054C  C00D  F046         	line	127
  1290                           	
  1291                           l1512:
  1292  000550                     ;main.c: 127:             TXIE = 1;
  1293                           	bsf	c:(31980/8),(31980)&7	;volatile
  1294  000550  889D               	line	129
  1295                           	
  1296                           l1514:
  1297  000552                     ;main.c: 129:             GPREG.STCTRL = 0;
  1298                           	bcf	((c:_GPREG)),c,1
  1299  000552  924F               	line	130
  1300                           	
  1301                           l1516:
  1302  000554                     ;main.c: 130:             TMR1ON = 1;
  1303                           	bsf	c:(32360/8),(32360)&7	;volatile
  1304  000554  80CD               	goto	l1502
  1305  000556  EF7F  F002         	line	131
  1306                           ;main.c: 131:         }
  1307                           	
  1308                           l138:
  1309  00055A                     	goto	l1502
  1310  00055A  EF7F  F002         	line	132
  1311                           ;main.c: 132:     }
  1312                           	
  1313                           l141:
  1314  00055E                     	goto	l1502
  1315  00055E  EF7F  F002         	
  1316                           l142:
  1317  000562                     	line	134
  1318                           	
  1319                           l143:
  1320  000562                     	global	start
  1321                           	goto	start
  1322  000562  EF63  F000         	opt stack 0
  1323                           GLOBAL	__end_of_main
  1324                           	__end_of_main:
  1325  000566                     	signat	_main,89
  1326                           	global	_int2char
  1327                           
  1328 ;; *************** function _int2char *****************
  1329 ;; Defined at:
  1330 ;;		line 247 in file "main.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  number          2   11[COMRAM] unsigned int 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  digit           1   15[COMRAM] char 
  1335 ;;  num             2   13[COMRAM] unsigned int 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  2   11[COMRAM] PTR unsigned char 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1345 ;;      Params:         2       0       0       0
  1346 ;;      Locals:         3       0       0       0
  1347 ;;      Temps:          0       0       0       0
  1348 ;;      Totals:         5       0       0       0
  1349 ;;Total ram usage:        5 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    2
  1352 ;; This function calls:
  1353 ;;		___lwdiv
  1354 ;;		___lwmod
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1360                           	line	247
  1361                           global __ptext1
  1362                           __ptext1:
  1363  0005EE                     psect	text1
  1364                           	file	"main.c"
  1365                           	line	247
  1366                           	global	__size_of_int2char
  1367                           	__size_of_int2char	equ	__end_of_int2char-_int2char
  1368  0000                     	
  1369                           _int2char:
  1370  0005EE                     ;incstack = 0
  1371                           	opt	stack 28
  1372                           	line	250
  1373                           	
  1374                           l1468:
  1375  0005EE                     ;main.c: 247: uint8_t * int2char(uint16_t number);main.c: 248: {;main.c: 249:     static
                                  uint8_t string[5];;main.c: 250:     uint16_t num = number;
  1376                           	movff	(c:int2char@number),(c:int2char@num)
  1377  0005EE  C00C  F00E         	movff	(c:int2char@number+1),(c:int2char@num+1)
  1378  0005F2  C00D  F00F         	line	252
  1379                           	
  1380                           l1470:
  1381  0005F6                     ;main.c: 252:     for(int8_t digit = 4; 0 <= digit; digit--)
  1382                           	movlw	low(04h)
  1383  0005F6  0E04               	movwf	((c:int2char@digit)),c
  1384  0005F8  6E10               	goto	l1478
  1385  0005FA  EF25  F003         	
  1386                           l176:
  1387  0005FE                     	line	254
  1388                           	
  1389                           l1472:
  1390  0005FE                     ;main.c: 253:     {;main.c: 254:         string[digit] = 0x30 + num%10;
  1391                           	movf	((c:int2char@digit)),c,w
  1392  0005FE  5010               	mullw	01h
  1393  000600  0D01               	movlw	low(int2char@string)
  1394  000602  0E50               	addwf	(prodl),c,w
  1395  000604  24F3               	movwf	c:fsr2l
  1396  000606  6ED9               	movlw	high(int2char@string)
  1397  000608  0E00               	addwfc	prod+1,w
  1398  00060A  20F4               	movwf	1+c:fsr2l
  1399  00060C  6EDA               	movff	(c:int2char@num),(c:___lwmod@dividend)
  1400  00060E  C00E  F005         	movff	(c:int2char@num+1),(c:___lwmod@dividend+1)
  1401  000612  C00F  F006         	movlw	high(0Ah)
  1402  000616  0E00               	movwf	((c:___lwmod@divisor+1)),c
  1403  000618  6E08               	movlw	low(0Ah)
  1404  00061A  0E0A               	movwf	((c:___lwmod@divisor)),c
  1405  00061C  6E07               	call	___lwmod	;wreg free
  1406  00061E  EC35  F003         	movf	(0+?___lwmod),c,w
  1407  000622  5005               	addlw	low(030h)
  1408  000624  0F30               	movwf	indf2,c
  1409  000626  6EDF               
  1410                           	line	255
  1411                           	
  1412                           l1474:
  1413  000628                     ;main.c: 255:         num = num/10;
  1414                           	movff	(c:int2char@num),(c:___lwdiv@dividend)
  1415  000628  C00E  F005         	movff	(c:int2char@num+1),(c:___lwdiv@dividend+1)
  1416  00062C  C00F  F006         	movlw	high(0Ah)
  1417  000630  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  1418  000632  6E08               	movlw	low(0Ah)
  1419  000634  0E0A               	movwf	((c:___lwdiv@divisor)),c
  1420  000636  6E07               	call	___lwdiv	;wreg free
  1421  000638  ECB3  F002         	movff	0+?___lwdiv,(c:int2char@num)
  1422  00063C  C005  F00E         	movff	1+?___lwdiv,(c:int2char@num+1)
  1423  000640  C006  F00F         	line	256
  1424                           	
  1425                           l1476:
  1426  000644                     ;main.c: 256:     }
  1427                           	decf	((c:int2char@digit)),c
  1428  000644  0610               	goto	l1478
  1429  000646  EF25  F003         	
  1430                           l175:
  1431  00064A                     	
  1432                           l1478:
  1433  00064A                     	btfsc	((c:int2char@digit)),c,7
  1434  00064A  BE10               	goto	u610
  1435  00064C  EF2C  F003         	goto	u611
  1436  000650  EF2A  F003         
  1437                           u611:
  1438  000654                     	goto	l1472
  1439  000654  EFFF  F002         u610:
  1440  000658                     	goto	l1480
  1441  000658  EF2E  F003         	
  1442                           l177:
  1443  00065C                     	line	258
  1444                           	
  1445                           l1480:
  1446  00065C                     ;main.c: 258:     return string;
  1447                           		movlw	low(int2char@string)
  1448  00065C  0E50               	movwf	((c:?_int2char)),c
  1449  00065E  6E0C               	movlw	high(int2char@string)
  1450  000660  0E00               	movwf	((c:?_int2char+1)),c
  1451  000662  6E0D               
  1452                           	goto	l178
  1453  000664  EF34  F003         	
  1454                           l1482:
  1455  000668                     	line	259
  1456                           	
  1457                           l178:
  1458  000668                     	return	;funcret
  1459  000668  0012               	opt stack 0
  1460                           GLOBAL	__end_of_int2char
  1461                           	__end_of_int2char:
  1462  00066A                     	signat	_int2char,4218
  1463                           	global	___lwmod
  1464                           
  1465 ;; *************** function ___lwmod *****************
  1466 ;; Defined at:
  1467 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  dividend        2    4[COMRAM] unsigned int 
  1470 ;;  divisor         2    6[COMRAM] unsigned int 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  counter         1    8[COMRAM] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  2    4[COMRAM] unsigned int 
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1482 ;;      Params:         4       0       0       0
  1483 ;;      Locals:         1       0       0       0
  1484 ;;      Temps:          0       0       0       0
  1485 ;;      Totals:         5       0       0       0
  1486 ;;Total ram usage:        5 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_int2char
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           psect	text2,class=CODE,space=0,reloc=2,group=1
  1496                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1497                           	line	7
  1498                           global __ptext2
  1499                           __ptext2:
  1500  00066A                     psect	text2
  1501                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1502                           	line	7
  1503                           	global	__size_of___lwmod
  1504                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1505  0000                     	
  1506                           ___lwmod:
  1507  00066A                     ;incstack = 0
  1508                           	opt	stack 28
  1509                           	line	12
  1510                           	
  1511                           l1386:
  1512  00066A                     	movf	((c:___lwmod@divisor)),c,w
  1513  00066A  5007               iorwf	((c:___lwmod@divisor+1)),c,w
  1514  00066C  1008               	btfsc	status,2
  1515  00066E  B4D8               	goto	u561
  1516  000670  EF3C  F003         	goto	u560
  1517  000674  EF3E  F003         
  1518                           u561:
  1519  000678                     	goto	l682
  1520  000678  EF6C  F003         u560:
  1521  00067C                     	line	13
  1522                           	
  1523                           l1388:
  1524  00067C                     	movlw	low(01h)
  1525  00067C  0E01               	movwf	((c:___lwmod@counter)),c
  1526  00067E  6E09               	line	14
  1527                           	goto	l1392
  1528  000680  EF48  F003         	
  1529                           l684:
  1530  000684                     	line	15
  1531                           	
  1532                           l1390:
  1533  000684                     	bcf	status,0
  1534  000684  90D8               	rlcf	((c:___lwmod@divisor)),c
  1535  000686  3607               	rlcf	((c:___lwmod@divisor+1)),c
  1536  000688  3608               	line	16
  1537                           	incf	((c:___lwmod@counter)),c
  1538  00068A  2A09               	goto	l1392
  1539  00068C  EF48  F003         	line	17
  1540                           	
  1541                           l683:
  1542  000690                     	line	14
  1543                           	
  1544                           l1392:
  1545  000690                     	
  1546                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  1547  000690  AE08               	goto	u571
  1548  000692  EF4D  F003         	goto	u570
  1549  000696  EF4F  F003         u571:
  1550  00069A                     	goto	l1390
  1551  00069A  EF42  F003         u570:
  1552  00069E                     	goto	l1394
  1553  00069E  EF53  F003         	
  1554                           l685:
  1555  0006A2                     	goto	l1394
  1556  0006A2  EF53  F003         	line	18
  1557                           	
  1558                           l686:
  1559  0006A6                     	line	19
  1560                           	
  1561                           l1394:
  1562  0006A6                     		movf	((c:___lwmod@divisor)),c,w
  1563  0006A6  5007               	subwf	((c:___lwmod@dividend)),c,w
  1564  0006A8  5C05               	movf	((c:___lwmod@divisor+1)),c,w
  1565  0006AA  5008               	subwfb	((c:___lwmod@dividend+1)),c,w
  1566  0006AC  5806               	btfss	status,0
  1567  0006AE  A0D8               	goto	u581
  1568  0006B0  EF5C  F003         	goto	u580
  1569  0006B4  EF5E  F003         
  1570                           u581:
  1571  0006B8                     	goto	l1398
  1572  0006B8  EF64  F003         u580:
  1573  0006BC                     	line	20
  1574                           	
  1575                           l1396:
  1576  0006BC                     	movf	((c:___lwmod@divisor)),c,w
  1577  0006BC  5007               	subwf	((c:___lwmod@dividend)),c
  1578  0006BE  5E05               	movf	((c:___lwmod@divisor+1)),c,w
  1579  0006C0  5008               	subwfb	((c:___lwmod@dividend+1)),c
  1580  0006C2  5A06               
  1581                           	goto	l1398
  1582  0006C4  EF64  F003         	
  1583                           l687:
  1584  0006C8                     	line	21
  1585                           	
  1586                           l1398:
  1587  0006C8                     	bcf	status,0
  1588  0006C8  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  1589  0006CA  3208               	rrcf	((c:___lwmod@divisor)),c
  1590  0006CC  3207               	line	22
  1591                           	
  1592                           l1400:
  1593  0006CE                     	decfsz	((c:___lwmod@counter)),c
  1594  0006CE  2E09               	
  1595                           	goto	l1394
  1596  0006D0  EF53  F003         	goto	l682
  1597  0006D4  EF6C  F003         	
  1598                           l688:
  1599  0006D8                     	line	23
  1600                           	
  1601                           l682:
  1602  0006D8                     	line	24
  1603                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  1604  0006D8  C005  F005         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  1605  0006DC  C006  F006         	line	25
  1606                           	
  1607                           l689:
  1608  0006E0                     	return	;funcret
  1609  0006E0  0012               	opt stack 0
  1610                           GLOBAL	__end_of___lwmod
  1611                           	__end_of___lwmod:
  1612  0006E2                     	signat	___lwmod,8314
  1613                           	global	___lwdiv
  1614                           
  1615 ;; *************** function ___lwdiv *****************
  1616 ;; Defined at:
  1617 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  dividend        2    4[COMRAM] unsigned int 
  1620 ;;  divisor         2    6[COMRAM] unsigned int 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  quotient        2    9[COMRAM] unsigned int 
  1623 ;;  counter         1    8[COMRAM] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  2    4[COMRAM] unsigned int 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1633 ;;      Params:         4       0       0       0
  1634 ;;      Locals:         3       0       0       0
  1635 ;;      Temps:          0       0       0       0
  1636 ;;      Totals:         7       0       0       0
  1637 ;;Total ram usage:        7 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    1
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_int2char
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           psect	text3,class=CODE,space=0,reloc=2,group=1
  1647                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1648                           	line	7
  1649                           global __ptext3
  1650                           __ptext3:
  1651  000566                     psect	text3
  1652                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1653                           	line	7
  1654                           	global	__size_of___lwdiv
  1655                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1656  0000                     	
  1657                           ___lwdiv:
  1658  000566                     ;incstack = 0
  1659                           	opt	stack 28
  1660                           	line	13
  1661                           	
  1662                           l1364:
  1663  000566                     	movlw	high(0)
  1664  000566  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  1665  000568  6E0B               	movlw	low(0)
  1666  00056A  0E00               	movwf	((c:___lwdiv@quotient)),c
  1667  00056C  6E0A               	line	14
  1668                           	
  1669                           l1366:
  1670  00056E                     	movf	((c:___lwdiv@divisor)),c,w
  1671  00056E  5007               iorwf	((c:___lwdiv@divisor+1)),c,w
  1672  000570  1008               	btfsc	status,2
  1673  000572  B4D8               	goto	u531
  1674  000574  EFBE  F002         	goto	u530
  1675  000578  EFC0  F002         
  1676                           u531:
  1677  00057C                     	goto	l672
  1678  00057C  EFF2  F002         u530:
  1679  000580                     	line	15
  1680                           	
  1681                           l1368:
  1682  000580                     	movlw	low(01h)
  1683  000580  0E01               	movwf	((c:___lwdiv@counter)),c
  1684  000582  6E09               	line	16
  1685                           	goto	l1372
  1686  000584  EFCA  F002         	
  1687                           l674:
  1688  000588                     	line	17
  1689                           	
  1690                           l1370:
  1691  000588                     	bcf	status,0
  1692  000588  90D8               	rlcf	((c:___lwdiv@divisor)),c
  1693  00058A  3607               	rlcf	((c:___lwdiv@divisor+1)),c
  1694  00058C  3608               	line	18
  1695                           	incf	((c:___lwdiv@counter)),c
  1696  00058E  2A09               	goto	l1372
  1697  000590  EFCA  F002         	line	19
  1698                           	
  1699                           l673:
  1700  000594                     	line	16
  1701                           	
  1702                           l1372:
  1703  000594                     	
  1704                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  1705  000594  AE08               	goto	u541
  1706  000596  EFCF  F002         	goto	u540
  1707  00059A  EFD1  F002         u541:
  1708  00059E                     	goto	l1370
  1709  00059E  EFC4  F002         u540:
  1710  0005A2                     	goto	l1374
  1711  0005A2  EFD5  F002         	
  1712                           l675:
  1713  0005A6                     	goto	l1374
  1714  0005A6  EFD5  F002         	line	20
  1715                           	
  1716                           l676:
  1717  0005AA                     	line	21
  1718                           	
  1719                           l1374:
  1720  0005AA                     	bcf	status,0
  1721  0005AA  90D8               	rlcf	((c:___lwdiv@quotient)),c
  1722  0005AC  360A               	rlcf	((c:___lwdiv@quotient+1)),c
  1723  0005AE  360B               	line	22
  1724                           	
  1725                           l1376:
  1726  0005B0                     		movf	((c:___lwdiv@divisor)),c,w
  1727  0005B0  5007               	subwf	((c:___lwdiv@dividend)),c,w
  1728  0005B2  5C05               	movf	((c:___lwdiv@divisor+1)),c,w
  1729  0005B4  5008               	subwfb	((c:___lwdiv@dividend+1)),c,w
  1730  0005B6  5806               	btfss	status,0
  1731  0005B8  A0D8               	goto	u551
  1732  0005BA  EFE1  F002         	goto	u550
  1733  0005BE  EFE3  F002         
  1734                           u551:
  1735  0005C2                     	goto	l1382
  1736  0005C2  EFEA  F002         u550:
  1737  0005C6                     	line	23
  1738                           	
  1739                           l1378:
  1740  0005C6                     	movf	((c:___lwdiv@divisor)),c,w
  1741  0005C6  5007               	subwf	((c:___lwdiv@dividend)),c
  1742  0005C8  5E05               	movf	((c:___lwdiv@divisor+1)),c,w
  1743  0005CA  5008               	subwfb	((c:___lwdiv@dividend+1)),c
  1744  0005CC  5A06               
  1745                           	line	24
  1746                           	
  1747                           l1380:
  1748  0005CE                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  1749  0005CE  800A               	goto	l1382
  1750  0005D0  EFEA  F002         	line	25
  1751                           	
  1752                           l677:
  1753  0005D4                     	line	26
  1754                           	
  1755                           l1382:
  1756  0005D4                     	bcf	status,0
  1757  0005D4  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  1758  0005D6  3208               	rrcf	((c:___lwdiv@divisor)),c
  1759  0005D8  3207               	line	27
  1760                           	
  1761                           l1384:
  1762  0005DA                     	decfsz	((c:___lwdiv@counter)),c
  1763  0005DA  2E09               	
  1764                           	goto	l1374
  1765  0005DC  EFD5  F002         	goto	l672
  1766  0005E0  EFF2  F002         	
  1767                           l678:
  1768  0005E4                     	line	28
  1769                           	
  1770                           l672:
  1771  0005E4                     	line	29
  1772                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  1773  0005E4  C00A  F005         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  1774  0005E8  C00B  F006         	line	30
  1775                           	
  1776                           l679:
  1777  0005EC                     	return	;funcret
  1778  0005EC  0012               	opt stack 0
  1779                           GLOBAL	__end_of___lwdiv
  1780                           	__end_of___lwdiv:
  1781  0005EE                     	signat	___lwdiv,8314
  1782                           	global	_init_VNHIO
  1783                           
  1784 ;; *************** function _init_VNHIO *****************
  1785 ;; Defined at:
  1786 ;;		line 177 in file "main.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1800 ;;      Params:         0       0       0       0
  1801 ;;      Locals:         0       0       0       0
  1802 ;;      Temps:          0       0       0       0
  1803 ;;      Totals:         0       0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    1
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1814                           	file	"main.c"
  1815                           	line	177
  1816                           global __ptext4
  1817                           __ptext4:
  1818  000830                     psect	text4
  1819                           	file	"main.c"
  1820                           	line	177
  1821                           	global	__size_of_init_VNHIO
  1822                           	__size_of_init_VNHIO	equ	__end_of_init_VNHIO-_init_VNHIO
  1823  0000                     	
  1824                           _init_VNHIO:
  1825  000830                     ;incstack = 0
  1826                           	opt	stack 29
  1827                           	line	179
  1828                           	
  1829                           l1402:
  1830  000830                     ;main.c: 179:     ANSEL0 = 0;
  1831                           	movlw	low(0)
  1832  000830  0E00               	movwf	((c:4024)),c	;volatile
  1833  000832  6EB8               	line	180
  1834                           ;main.c: 180:     ANSEL1 = 0;
  1835                           	movlw	low(0)
  1836  000834  0E00               	movwf	((c:4025)),c	;volatile
  1837  000836  6EB9               	line	181
  1838                           	
  1839                           l1404:
  1840  000838                     ;main.c: 181:     TRISA0 = 0;
  1841                           	bcf	c:(31888/8),(31888)&7	;volatile
  1842  000838  9092               	line	182
  1843                           	
  1844                           l1406:
  1845  00083A                     ;main.c: 182:     TRISA1 = 0;
  1846                           	bcf	c:(31889/8),(31889)&7	;volatile
  1847  00083A  9292               	line	183
  1848                           	
  1849                           l1408:
  1850  00083C                     ;main.c: 183:     LATA0 = 0;
  1851                           	bcf	c:(31816/8),(31816)&7	;volatile
  1852  00083C  9089               	line	184
  1853                           	
  1854                           l1410:
  1855  00083E                     ;main.c: 184:     LATA1 = 1;
  1856                           	bsf	c:(31817/8),(31817)&7	;volatile
  1857  00083E  8289               	line	185
  1858                           	
  1859                           l155:
  1860  000840                     	return	;funcret
  1861  000840  0012               	opt stack 0
  1862                           GLOBAL	__end_of_init_VNHIO
  1863                           	__end_of_init_VNHIO:
  1864  000842                     	signat	_init_VNHIO,89
  1865                           	global	_init_UART
  1866                           
  1867 ;; *************** function _init_UART *****************
  1868 ;; Defined at:
  1869 ;;		line 221 in file "main.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1883 ;;      Params:         0       0       0       0
  1884 ;;      Locals:         0       0       0       0
  1885 ;;      Temps:          0       0       0       0
  1886 ;;      Totals:         0       0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1897                           	line	221
  1898                           global __ptext5
  1899                           __ptext5:
  1900  00081A                     psect	text5
  1901                           	file	"main.c"
  1902                           	line	221
  1903                           	global	__size_of_init_UART
  1904                           	__size_of_init_UART	equ	__end_of_init_UART-_init_UART
  1905  0000                     	
  1906                           _init_UART:
  1907  00081A                     ;incstack = 0
  1908                           	opt	stack 29
  1909                           	line	223
  1910                           	
  1911                           l1426:
  1912  00081A                     ;main.c: 223:     GPREG.TXCTRL = 0;
  1913                           	bcf	((c:_GPREG)),c,4
  1914  00081A  984F               	line	224
  1915                           ;main.c: 224:     TRISC6 = 0;
  1916                           	bcf	c:(31910/8),(31910)&7	;volatile
  1917  00081C  9C94               	line	225
  1918                           	
  1919                           l1428:
  1920  00081E                     ;main.c: 225:     TXSTA = 0x20;
  1921                           	movlw	low(020h)
  1922  00081E  0E20               	movwf	((c:4012)),c	;volatile
  1923  000820  6EAC               	line	226
  1924                           ;main.c: 226:     RCSTA = 0x90;
  1925                           	movlw	low(090h)
  1926  000822  0E90               	movwf	((c:4011)),c	;volatile
  1927  000824  6EAB               	line	227
  1928                           ;main.c: 227:     BAUDCON = 0x0;
  1929                           	movlw	low(0)
  1930  000826  0E00               	movwf	((c:4010)),c	;volatile
  1931  000828  6EAA               	line	228
  1932                           ;main.c: 228:     SPBRG = 12;
  1933                           	movlw	low(0Ch)
  1934  00082A  0E0C               	movwf	((c:4015)),c	;volatile
  1935  00082C  6EAF               	line	229
  1936                           	
  1937                           l167:
  1938  00082E                     	return	;funcret
  1939  00082E  0012               	opt stack 0
  1940                           GLOBAL	__end_of_init_UART
  1941                           	__end_of_init_UART:
  1942  000830                     	signat	_init_UART,89
  1943                           	global	_init_TMR1
  1944                           
  1945 ;; *************** function _init_TMR1 *****************
  1946 ;; Defined at:
  1947 ;;		line 170 in file "main.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1961 ;;      Params:         0       0       0       0
  1962 ;;      Locals:         0       0       0       0
  1963 ;;      Temps:          0       0       0       0
  1964 ;;      Totals:         0       0       0       0
  1965 ;;Total ram usage:        0 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    1
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           psect	text6,class=CODE,space=0,reloc=2,group=0
  1975                           	line	170
  1976                           global __ptext6
  1977                           __ptext6:
  1978  000854                     psect	text6
  1979                           	file	"main.c"
  1980                           	line	170
  1981                           	global	__size_of_init_TMR1
  1982                           	__size_of_init_TMR1	equ	__end_of_init_TMR1-_init_TMR1
  1983  0000                     	
  1984                           _init_TMR1:
  1985  000854                     ;incstack = 0
  1986                           	opt	stack 29
  1987                           	line	173
  1988                           	
  1989                           l1412:
  1990  000854                     ;main.c: 173:     T1CON = 0xF9;
  1991                           	movlw	low(0F9h)
  1992  000854  0EF9               	movwf	((c:4045)),c	;volatile
  1993  000856  6ECD               	line	174
  1994                           ;main.c: 174:     TMR1 =65485;
  1995                           	movlw	high(0FFCDh)
  1996  000858  0EFF               	movwf	((c:4046+1)),c	;volatile
  1997  00085A  6ECF               	movlw	low(0FFCDh)
  1998  00085C  0ECD               	movwf	((c:4046)),c	;volatile
  1999  00085E  6ECE               	line	175
  2000                           	
  2001                           l152:
  2002  000860                     	return	;funcret
  2003  000860  0012               	opt stack 0
  2004                           GLOBAL	__end_of_init_TMR1
  2005                           	__end_of_init_TMR1:
  2006  000862                     	signat	_init_TMR1,89
  2007                           	global	_init_QEI
  2008                           
  2009 ;; *************** function _init_QEI *****************
  2010 ;; Defined at:
  2011 ;;		line 205 in file "main.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2025 ;;      Params:         0       0       0       0
  2026 ;;      Locals:         0       0       0       0
  2027 ;;      Temps:          0       0       0       0
  2028 ;;      Totals:         0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           psect	text7,class=CODE,space=0,reloc=2,group=0
  2039                           	line	205
  2040                           global __ptext7
  2041                           __ptext7:
  2042  0007DC                     psect	text7
  2043                           	file	"main.c"
  2044                           	line	205
  2045                           	global	__size_of_init_QEI
  2046                           	__size_of_init_QEI	equ	__end_of_init_QEI-_init_QEI
  2047  0000                     	
  2048                           _init_QEI:
  2049  0007DC                     ;incstack = 0
  2050                           	opt	stack 29
  2051                           	line	207
  2052                           	
  2053                           l1422:
  2054  0007DC                     ;main.c: 207:     TRISA4 = 1;
  2055                           	bsf	c:(31892/8),(31892)&7	;volatile
  2056  0007DC  8892               	line	208
  2057                           ;main.c: 208:     TRISA5 = 1;
  2058                           	bsf	c:(31893/8),(31893)&7	;volatile
  2059  0007DE  8A92               	line	210
  2060                           	
  2061                           l1424:
  2062  0007E0                     ;main.c: 210:     POSCNTL = 6300;
  2063                           	movlw	low(09Ch)
  2064  0007E0  0E9C               	movwf	((c:3942)),c	;volatile
  2065  0007E2  6E66               	line	211
  2066                           ;main.c: 211:     POSCNTH = 6300>>8;
  2067                           	movlw	low(018h)
  2068  0007E4  0E18               	movwf	((c:3943)),c	;volatile
  2069  0007E6  6E67               	line	212
  2070                           ;main.c: 212:     pos = 6300;
  2071                           	movlw	high(0189Ch)
  2072  0007E8  0E18               	movwf	((c:_pos+1)),c
  2073  0007EA  6E5A               	movlw	low(0189Ch)
  2074  0007EC  0E9C               	movwf	((c:_pos)),c
  2075  0007EE  6E59               	line	214
  2076                           ;main.c: 214:     MAXCNTL = 8400;
  2077                           	movlw	low(0D0h)
  2078  0007F0  0ED0               	movwf	((c:3940)),c	;volatile
  2079  0007F2  6E64               	line	215
  2080                           ;main.c: 215:     MAXCNTH = 8400>>8;
  2081                           	movlw	low(020h)
  2082  0007F4  0E20               	movwf	((c:3941)),c	;volatile
  2083  0007F6  6E65               	line	217
  2084                           ;main.c: 217:     QEICON = 0x98;
  2085                           	movlw	low(098h)
  2086  0007F8  0E98               	movwf	((c:4022)),c	;volatile
  2087  0007FA  6EB6               	line	219
  2088                           	
  2089                           l164:
  2090  0007FC                     	return	;funcret
  2091  0007FC  0012               	opt stack 0
  2092                           GLOBAL	__end_of_init_QEI
  2093                           	__end_of_init_QEI:
  2094  0007FE                     	signat	_init_QEI,89
  2095                           	global	_init_PWM
  2096                           
  2097 ;; *************** function _init_PWM *****************
  2098 ;; Defined at:
  2099 ;;		line 187 in file "main.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2113 ;;      Params:         0       0       0       0
  2114 ;;      Locals:         0       0       0       0
  2115 ;;      Temps:          0       0       0       0
  2116 ;;      Totals:         0       0       0       0
  2117 ;;Total ram usage:        0 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    2
  2120 ;; This function calls:
  2121 ;;		_write_PWM
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           psect	text8,class=CODE,space=0,reloc=2,group=0
  2127                           	line	187
  2128                           global __ptext8
  2129                           __ptext8:
  2130  0007FE                     psect	text8
  2131                           	file	"main.c"
  2132                           	line	187
  2133                           	global	__size_of_init_PWM
  2134                           	__size_of_init_PWM	equ	__end_of_init_PWM-_init_PWM
  2135  0000                     	
  2136                           _init_PWM:
  2137  0007FE                     ;incstack = 0
  2138                           	opt	stack 28
  2139                           	line	189
  2140                           	
  2141                           l1414:
  2142  0007FE                     ;main.c: 189:     TRISC2 = 0;
  2143                           	bcf	c:(31906/8),(31906)&7	;volatile
  2144  0007FE  9494               	line	190
  2145                           ;main.c: 190:     LATC2 = 0;
  2146                           	bcf	c:(31834/8),(31834)&7	;volatile
  2147  000800  948B               	line	192
  2148                           	
  2149                           l1416:
  2150  000802                     ;main.c: 192:     CCP1CON = 0xF;
  2151                           	movlw	low(0Fh)
  2152  000802  0E0F               	movwf	((c:4029)),c	;volatile
  2153  000804  6EBD               	line	193
  2154                           ;main.c: 193:     T2CON = 0x4;
  2155                           	movlw	low(04h)
  2156  000806  0E04               	movwf	((c:4042)),c	;volatile
  2157  000808  6ECA               	line	194
  2158                           	
  2159                           l1418:
  2160  00080A                     ;main.c: 194:     PR2 = 255u;
  2161                           	setf	((c:4043)),c	;volatile
  2162  00080A  68CB               	line	195
  2163                           	
  2164                           l1420:
  2165  00080C                     ;main.c: 195:     write_PWM(0);
  2166                           	movlw	high(0)
  2167  00080C  0E00               	movwf	((c:write_PWM@dutyCycle+1)),c
  2168  00080E  6E2C               	movlw	low(0)
  2169  000810  0E00               	movwf	((c:write_PWM@dutyCycle)),c
  2170  000812  6E2B               	call	_write_PWM	;wreg free
  2171  000814  ECDA  F003         	line	196
  2172                           	
  2173                           l158:
  2174  000818                     	return	;funcret
  2175  000818  0012               	opt stack 0
  2176                           GLOBAL	__end_of_init_PWM
  2177                           	__end_of_init_PWM:
  2178  00081A                     	signat	_init_PWM,89
  2179                           	global	_write_PWM
  2180                           
  2181 ;; *************** function _write_PWM *****************
  2182 ;; Defined at:
  2183 ;;		line 198 in file "main.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  dutyCycle       2   42[COMRAM] unsigned int 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2197 ;;      Params:         2       0       0       0
  2198 ;;      Locals:         0       0       0       0
  2199 ;;      Temps:          0       1       0       0
  2200 ;;      Totals:         2       1       0       0
  2201 ;;Total ram usage:        3 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;;		_init_PWM
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           psect	text9,class=CODE,space=0,reloc=2,group=0
  2212                           	line	198
  2213                           global __ptext9
  2214                           __ptext9:
  2215  0007B4                     psect	text9
  2216                           	file	"main.c"
  2217                           	line	198
  2218                           	global	__size_of_write_PWM
  2219                           	__size_of_write_PWM	equ	__end_of_write_PWM-_write_PWM
  2220  0000                     	
  2221                           _write_PWM:
  2222  0007B4                     ;incstack = 0
  2223                           	opt	stack 29
  2224                           	line	200
  2225                           	
  2226                           l1298:
  2227  0007B4                     ;main.c: 198: void write_PWM(uint16_t dutyCycle);main.c: 199: {;main.c: 200:     CCP1CON
                                 bits.DC1B = dutyCycle % 4u;
  2228                           	movff	(c:write_PWM@dutyCycle),??_write_PWM+0+0
  2229  0007B4  C02B  F060         	movlw	03h
  2230  0007B8  0E03               	movlb	0	; () banked
  2231  0007BA  0100               	andwf	(??_write_PWM+0+0)&0ffh
  2232  0007BC  1760               	swapf	(??_write_PWM+0+0)&0ffh
  2233  0007BE  3B60               	movf	((c:4029)),c,w	;volatile
  2234  0007C0  50BD               	xorwf	(??_write_PWM+0+0)&0ffh,w
  2235  0007C2  1960               	andlw	not (((1<<2)-1)<<4)
  2236  0007C4  0BCF               	xorwf	(??_write_PWM+0+0)&0ffh,w
  2237  0007C6  1960               	movwf	((c:4029)),c	;volatile
  2238  0007C8  6EBD               	line	201
  2239                           	
  2240                           l1300:; BSR set to: 0
  2241  0007CA                     
  2242                           ;main.c: 201:     dutyCycle >>= 2;
  2243                           	bcf	status,0
  2244  0007CA  90D8               	rrcf	((c:write_PWM@dutyCycle+1)),c
  2245  0007CC  322C               	rrcf	((c:write_PWM@dutyCycle)),c
  2246  0007CE  322B               	bcf	status,0
  2247  0007D0  90D8               	rrcf	((c:write_PWM@dutyCycle+1)),c
  2248  0007D2  322C               	rrcf	((c:write_PWM@dutyCycle)),c
  2249  0007D4  322B               	line	202
  2250                           	
  2251                           l1302:; BSR set to: 0
  2252  0007D6                     
  2253                           ;main.c: 202:     CCPR1L = (uint8_t) dutyCycle;
  2254                           	movff	(c:write_PWM@dutyCycle),(c:4030)	;volatile
  2255  0007D6  C02B  FFBE         	line	203
  2256                           	
  2257                           l161:; BSR set to: 0
  2258  0007DA                     
  2259                           	return	;funcret
  2260  0007DA  0012               	opt stack 0
  2261                           GLOBAL	__end_of_write_PWM
  2262                           	__end_of_write_PWM:
  2263  0007DC                     	signat	_write_PWM,4217
  2264                           	global	_init_ISR
  2265                           
  2266 ;; *************** function _init_ISR *****************
  2267 ;; Defined at:
  2268 ;;		line 231 in file "main.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		None
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2282 ;;      Params:         0       0       0       0
  2283 ;;      Locals:         0       0       0       0
  2284 ;;      Temps:          0       0       0       0
  2285 ;;      Totals:         0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           psect	text10,class=CODE,space=0,reloc=2,group=0
  2296                           	line	231
  2297                           global __ptext10
  2298                           __ptext10:
  2299  000842                     psect	text10
  2300                           	file	"main.c"
  2301                           	line	231
  2302                           	global	__size_of_init_ISR
  2303                           	__size_of_init_ISR	equ	__end_of_init_ISR-_init_ISR
  2304  0000                     	
  2305                           _init_ISR:; BSR set to: 0
  2306  000842                     
  2307                           ;incstack = 0
  2308                           	opt	stack 29
  2309                           	line	234
  2310                           	
  2311                           l1430:
  2312  000842                     ;main.c: 234:     TMR1IF = 0;
  2313                           	bcf	c:(31984/8),(31984)&7	;volatile
  2314  000842  909E               	line	235
  2315                           ;main.c: 235:     TMR1IE = 1;
  2316                           	bsf	c:(31976/8),(31976)&7	;volatile
  2317  000844  809D               	line	236
  2318                           ;main.c: 236:     TMR1IP = 1;
  2319                           	bsf	c:(31992/8),(31992)&7	;volatile
  2320  000846  809F               	line	239
  2321                           ;main.c: 239:     TXIE = 0;
  2322                           	bcf	c:(31980/8),(31980)&7	;volatile
  2323  000848  989D               	line	240
  2324                           ;main.c: 240:     TXIP = 1;
  2325                           	bsf	c:(31996/8),(31996)&7	;volatile
  2326  00084A  889F               	line	241
  2327                           ;main.c: 241:     TXIF = 0;
  2328                           	bcf	c:(31988/8),(31988)&7	;volatile
  2329  00084C  989E               	line	243
  2330                           ;main.c: 243:     IPEN=1;
  2331                           	bsf	c:(32391/8),(32391)&7	;volatile
  2332  00084E  8ED0               	line	244
  2333                           ;main.c: 244:     GIE = 1;
  2334                           	bsf	c:(32663/8),(32663)&7	;volatile
  2335  000850  8EF2               	line	245
  2336                           	
  2337                           l170:
  2338  000852                     	return	;funcret
  2339  000852  0012               	opt stack 0
  2340                           GLOBAL	__end_of_init_ISR
  2341                           	__end_of_init_ISR:
  2342  000854                     	signat	_init_ISR,89
  2343                           	global	_calculatePWM
  2344                           
  2345 ;; *************** function _calculatePWM *****************
  2346 ;; Defined at:
  2347 ;;		line 136 in file "main.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  setpoint        1    wreg     char 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  setpoint        1    0[COMRAM] char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  4   30[COMRAM] long 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2361 ;;      Params:         4       0       0       0
  2362 ;;      Locals:         0       0       0       0
  2363 ;;      Temps:          8       0       0       0
  2364 ;;      Totals:        12       0       0       0
  2365 ;;Total ram usage:       12 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    2
  2368 ;; This function calls:
  2369 ;;		___aldiv
  2370 ;;		___lmul
  2371 ;;		___wmul
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           psect	text11,class=CODE,space=0,reloc=2,group=0
  2377                           	line	136
  2378                           global __ptext11
  2379                           __ptext11:
  2380  0000CA                     psect	text11
  2381                           	file	"main.c"
  2382                           	line	136
  2383                           	global	__size_of_calculatePWM
  2384                           	__size_of_calculatePWM	equ	__end_of_calculatePWM-_calculatePWM
  2385  0000                     	
  2386                           _calculatePWM:
  2387  0000CA                     ;incstack = 0
  2388                           	opt	stack 28
  2389                           	line	139
  2390                           	
  2391                           l1432:
  2392  0000CA                     ;main.c: 136: int32_t calculatePWM(int8_t setpoint);main.c: 137: {;main.c: 139:     pos 
                                 = POSCNTH;
  2393                           	movff	(c:3943),(c:_pos)	;volatile
  2394  0000CA  CF67 F059          	clrf	((c:_pos+1)),c
  2395  0000CE  6A5A               	line	140
  2396                           	
  2397                           l1434:
  2398  0000D0                     ;main.c: 140:     pos <<= 8;
  2399                           	movf	((c:_pos)),c,w
  2400  0000D0  5059               	movwf	((c:_pos+1)),c
  2401  0000D2  6E5A               	clrf	((c:_pos)),c
  2402  0000D4  6A59               	line	141
  2403                           	
  2404                           l1436:
  2405  0000D6                     ;main.c: 141:     pos |= POSCNTL;
  2406                           	movf	((c:3942)),c,w	;volatile
  2407  0000D6  5066               	iorwf	((c:_pos)),c
  2408  0000D8  1259               	line	143
  2409                           	
  2410                           l1438:
  2411  0000DA                     ;main.c: 143:     error = (ref_pos - pos);
  2412                           	movff	(c:_pos),??_calculatePWM+0+0
  2413  0000DA  C059  F023         	movff	(c:_pos+1),??_calculatePWM+0+0+1
  2414  0000DE  C05A  F024         	comf	(??_calculatePWM+0+0),c
  2415  0000E2  1E23               	comf	(??_calculatePWM+0+1),c
  2416  0000E4  1E24               	infsnz	(??_calculatePWM+0+0),c
  2417  0000E6  4A23               	incf	(??_calculatePWM+0+1),c
  2418  0000E8  2A24               	movf	((c:_ref_pos)),c,w
  2419  0000EA  5057               	addwf	(??_calculatePWM+0+0),c,w
  2420  0000EC  2423               	movwf	((c:_error)),c
  2421  0000EE  6E4B               	movf	((c:_ref_pos+1)),c,w
  2422  0000F0  5058               	addwfc	(??_calculatePWM+0+1),c,w
  2423  0000F2  2024               	movwf	1+((c:_error)),c
  2424  0000F4  6E4C               	line	144
  2425                           	
  2426                           l1440:
  2427  0000F6                     ;main.c: 144:     suma_error += 50*error;
  2428                           	movff	(c:_error),(c:___wmul@multiplier)
  2429  0000F6  C04B  F005         	movff	(c:_error+1),(c:___wmul@multiplier+1)
  2430  0000FA  C04C  F006         	movlw	high(032h)
  2431  0000FE  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  2432  000100  6E08               	movlw	low(032h)
  2433  000102  0E32               	movwf	((c:___wmul@multiplicand)),c
  2434  000104  6E07               	call	___wmul	;wreg free
  2435  000106  ECC5  F003         	movff	0+?___wmul,??_calculatePWM+0+0
  2436  00010A  C005  F023         	movff	1+?___wmul,??_calculatePWM+0+0+1
  2437  00010E  C006  F024         	movlw	0
  2438  000112  0E00               	btfsc	(??_calculatePWM+0+0+1)&0ffh,c,7
  2439  000114  BE24               	movlw	255
  2440  000116  0EFF               	movwf	(??_calculatePWM+0+0+2)&0ffh,c
  2441  000118  6E25               	movwf	(??_calculatePWM+0+0+3)&0ffh,c
  2442  00011A  6E26               	movf	(??_calculatePWM+0+0),c,w
  2443  00011C  5023               	addwf	((c:_suma_error)),c
  2444  00011E  2641               	movf	(??_calculatePWM+0+1),c,w
  2445  000120  5024               	addwfc	((c:_suma_error+1)),c
  2446  000122  2242               	movf	(??_calculatePWM+0+2),c,w
  2447  000124  5025               	addwfc	((c:_suma_error+2)),c
  2448  000126  2243               	movf	(??_calculatePWM+0+3),c,w
  2449  000128  5026               	addwfc	((c:_suma_error+3)),c
  2450  00012A  2244               
  2451                           	line	145
  2452                           	
  2453                           l1442:
  2454  00012C                     ;main.c: 145:     suma_error /= 1000;
  2455                           	movff	(c:_suma_error),(c:___aldiv@dividend)
  2456  00012C  C041  F011         	movff	(c:_suma_error+1),(c:___aldiv@dividend+1)
  2457  000130  C042  F012         	movff	(c:_suma_error+2),(c:___aldiv@dividend+2)
  2458  000134  C043  F013         	movff	(c:_suma_error+3),(c:___aldiv@dividend+3)
  2459  000138  C044  F014         	movlw	low(03E8h)
  2460  00013C  0EE8               	movwf	((c:___aldiv@divisor)),c
  2461  00013E  6E15               	movlw	high(03E8h)
  2462  000140  0E03               	movwf	((c:___aldiv@divisor+1)),c
  2463  000142  6E16               	movlw	low highword(03E8h)
  2464  000144  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2465  000146  6E17               	movlw	high highword(03E8h)
  2466  000148  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2467  00014A  6E18               	call	___aldiv	;wreg free
  2468  00014C  ECB9  F001         	movff	0+?___aldiv,(c:_suma_error)
  2469  000150  C011  F041         	movff	1+?___aldiv,(c:_suma_error+1)
  2470  000154  C012  F042         	movff	2+?___aldiv,(c:_suma_error+2)
  2471  000158  C013  F043         	movff	3+?___aldiv,(c:_suma_error+3)
  2472  00015C  C014  F044         	
  2473                           	line	146
  2474                           	
  2475                           l1444:
  2476  000160                     ;main.c: 146:     velocity = (int32_t)(error - error_ant)*20;
  2477                           	movff	(c:_error_ant),??_calculatePWM+0+0
  2478  000160  C049  F023         	movff	(c:_error_ant+1),??_calculatePWM+0+0+1
  2479  000164  C04A  F024         	comf	(??_calculatePWM+0+0),c
  2480  000168  1E23               	comf	(??_calculatePWM+0+1),c
  2481  00016A  1E24               	infsnz	(??_calculatePWM+0+0),c
  2482  00016C  4A23               	incf	(??_calculatePWM+0+1),c
  2483  00016E  2A24               	movf	((c:_error)),c,w
  2484  000170  504B               	addwf	(??_calculatePWM+0+0),c
  2485  000172  2623               	movf	((c:_error+1)),c,w
  2486  000174  504C               	addwfc	(??_calculatePWM+0+1),c
  2487  000176  2224               	movff	??_calculatePWM+0+0,(c:___lmul@multiplier)
  2488  000178  C023  F005         	movff	??_calculatePWM+0+1,(c:___lmul@multiplier+1)
  2489  00017C  C024  F006         	movlw	0
  2490  000180  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2491  000182  BE06               	movlw	-1
  2492  000184  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2493  000186  6E07               	movwf	((c:___lmul@multiplier+3)),c
  2494  000188  6E08               	movlw	low(014h)
  2495  00018A  0E14               	movwf	((c:___lmul@multiplicand)),c
  2496  00018C  6E09               	movlw	high(014h)
  2497  00018E  0E00               	movwf	((c:___lmul@multiplicand+1)),c
  2498  000190  6E0A               	movlw	low highword(014h)
  2499  000192  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2500  000194  6E0B               	movlw	high highword(014h)
  2501  000196  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2502  000198  6E0C               	call	___lmul	;wreg free
  2503  00019A  EC71  F003         	movff	0+?___lmul,(c:_velocity)
  2504  00019E  C005  F039         	movff	1+?___lmul,(c:_velocity+1)
  2505  0001A2  C006  F03A         	movff	2+?___lmul,(c:_velocity+2)
  2506  0001A6  C007  F03B         	movff	3+?___lmul,(c:_velocity+3)
  2507  0001AA  C008  F03C         	
  2508                           	line	147
  2509                           	
  2510                           l1446:
  2511  0001AE                     ;main.c: 147:     volt = (PID.Kp * error) + (PID.Ki * suma_error) + (PID.Kd*velocity);
  2512                           	movff	(c:_error),(c:___lmul@multiplier)
  2513  0001AE  C04B  F005         	movff	(c:_error+1),(c:___lmul@multiplier+1)
  2514  0001B2  C04C  F006         	movlw	0
  2515  0001B6  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2516  0001B8  BE06               	movlw	-1
  2517  0001BA  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2518  0001BC  6E07               	movwf	((c:___lmul@multiplier+3)),c
  2519  0001BE  6E08               	movff	(c:_PID),(c:___lmul@multiplicand)
  2520  0001C0  C02D  F009         	movff	(c:_PID+1),(c:___lmul@multiplicand+1)
  2521  0001C4  C02E  F00A         	movff	(c:_PID+2),(c:___lmul@multiplicand+2)
  2522  0001C8  C02F  F00B         	movff	(c:_PID+3),(c:___lmul@multiplicand+3)
  2523  0001CC  C030  F00C         	call	___lmul	;wreg free
  2524  0001D0  EC71  F003         	movff	0+?___lmul,??_calculatePWM+0+0
  2525  0001D4  C005  F023         	movff	1+?___lmul,??_calculatePWM+0+0+1
  2526  0001D8  C006  F024         	movff	2+?___lmul,??_calculatePWM+0+0+2
  2527  0001DC  C007  F025         	movff	3+?___lmul,??_calculatePWM+0+0+3
  2528  0001E0  C008  F026         	
  2529                           	movff	0+((c:_PID)+04h),(c:___lmul@multiplier)
  2530  0001E4  C031  F005         	movff	1+((c:_PID)+04h),(c:___lmul@multiplier+1)
  2531  0001E8  C032  F006         	movff	2+((c:_PID)+04h),(c:___lmul@multiplier+2)
  2532  0001EC  C033  F007         	movff	3+((c:_PID)+04h),(c:___lmul@multiplier+3)
  2533  0001F0  C034  F008         	movff	(c:_suma_error),(c:___lmul@multiplicand)
  2534  0001F4  C041  F009         	movff	(c:_suma_error+1),(c:___lmul@multiplicand+1)
  2535  0001F8  C042  F00A         	movff	(c:_suma_error+2),(c:___lmul@multiplicand+2)
  2536  0001FC  C043  F00B         	movff	(c:_suma_error+3),(c:___lmul@multiplicand+3)
  2537  000200  C044  F00C         	call	___lmul	;wreg free
  2538  000204  EC71  F003         	movf	(0+?___lmul),c,w
  2539  000208  5005               	addwf	(??_calculatePWM+0+0),c,w
  2540  00020A  2423               	movwf	(??_calculatePWM+4+0)&0ffh,c
  2541  00020C  6E27               	movf	(1+?___lmul),c,w
  2542  00020E  5006               	addwfc	(??_calculatePWM+0+1),c,w
  2543  000210  2024               	movwf	1+(??_calculatePWM+4+0)&0ffh,c
  2544  000212  6E28               	
  2545                           	movf	(2+?___lmul),c,w
  2546  000214  5007               	addwfc	(??_calculatePWM+0+2),c,w
  2547  000216  2025               	movwf	2+(??_calculatePWM+4+0)&0ffh,c
  2548  000218  6E29               	
  2549                           	movf	(3+?___lmul),c,w
  2550  00021A  5008               	addwfc	(??_calculatePWM+0+3),c,w
  2551  00021C  2026               	movwf	3+(??_calculatePWM+4+0)&0ffh,c
  2552  00021E  6E2A               	movff	0+((c:_PID)+08h),(c:___lmul@multiplier)
  2553  000220  C035  F005         	movff	1+((c:_PID)+08h),(c:___lmul@multiplier+1)
  2554  000224  C036  F006         	movff	2+((c:_PID)+08h),(c:___lmul@multiplier+2)
  2555  000228  C037  F007         	movff	3+((c:_PID)+08h),(c:___lmul@multiplier+3)
  2556  00022C  C038  F008         	movff	(c:_velocity),(c:___lmul@multiplicand)
  2557  000230  C039  F009         	movff	(c:_velocity+1),(c:___lmul@multiplicand+1)
  2558  000234  C03A  F00A         	movff	(c:_velocity+2),(c:___lmul@multiplicand+2)
  2559  000238  C03B  F00B         	movff	(c:_velocity+3),(c:___lmul@multiplicand+3)
  2560  00023C  C03C  F00C         	call	___lmul	;wreg free
  2561  000240  EC71  F003         	movf	(0+?___lmul),c,w
  2562  000244  5005               	addwf	(??_calculatePWM+4+0),c,w
  2563  000246  2427               	movwf	((c:_volt)),c
  2564  000248  6E3D               	movf	(1+?___lmul),c,w
  2565  00024A  5006               	addwfc	(??_calculatePWM+4+1),c,w
  2566  00024C  2028               	movwf	1+((c:_volt)),c
  2567  00024E  6E3E               	
  2568                           	movf	(2+?___lmul),c,w
  2569  000250  5007               	addwfc	(??_calculatePWM+4+2),c,w
  2570  000252  2029               	movwf	2+((c:_volt)),c
  2571  000254  6E3F               	
  2572                           	movf	(3+?___lmul),c,w
  2573  000256  5008               	addwfc	(??_calculatePWM+4+3),c,w
  2574  000258  202A               	movwf	3+((c:_volt)),c
  2575  00025A  6E40               	line	148
  2576                           	
  2577                           l1448:
  2578  00025C                     ;main.c: 148:     volt /= 100;
  2579                           	movff	(c:_volt),(c:___aldiv@dividend)
  2580  00025C  C03D  F011         	movff	(c:_volt+1),(c:___aldiv@dividend+1)
  2581  000260  C03E  F012         	movff	(c:_volt+2),(c:___aldiv@dividend+2)
  2582  000264  C03F  F013         	movff	(c:_volt+3),(c:___aldiv@dividend+3)
  2583  000268  C040  F014         	movlw	low(064h)
  2584  00026C  0E64               	movwf	((c:___aldiv@divisor)),c
  2585  00026E  6E15               	movlw	high(064h)
  2586  000270  0E00               	movwf	((c:___aldiv@divisor+1)),c
  2587  000272  6E16               	movlw	low highword(064h)
  2588  000274  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2589  000276  6E17               	movlw	high highword(064h)
  2590  000278  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2591  00027A  6E18               	call	___aldiv	;wreg free
  2592  00027C  ECB9  F001         	movff	0+?___aldiv,(c:_volt)
  2593  000280  C011  F03D         	movff	1+?___aldiv,(c:_volt+1)
  2594  000284  C012  F03E         	movff	2+?___aldiv,(c:_volt+2)
  2595  000288  C013  F03F         	movff	3+?___aldiv,(c:_volt+3)
  2596  00028C  C014  F040         	
  2597                           	line	149
  2598                           	
  2599                           l1450:
  2600  000290                     ;main.c: 149:     error_ant = error;
  2601                           	movff	(c:_error),(c:_error_ant)
  2602  000290  C04B  F049         	movff	(c:_error+1),(c:_error_ant+1)
  2603  000294  C04C  F04A         	line	151
  2604                           	
  2605                           l1452:
  2606  000298                     ;main.c: 151:     if(volt < 0)
  2607                           	btfsc	((c:_volt+3)),c,7
  2608  000298  BE40               	goto	u590
  2609  00029A  EF53  F001         	goto	u591
  2610  00029E  EF51  F001         
  2611                           u591:
  2612  0002A2                     	goto	l146
  2613  0002A2  EF64  F001         u590:
  2614  0002A6                     	line	153
  2615                           	
  2616                           l1454:
  2617  0002A6                     ;main.c: 152:     {;main.c: 153:         GPREG.DIRCTRL = 0;
  2618                           	bcf	((c:_GPREG)),c,0
  2619  0002A6  904F               	line	154
  2620                           	
  2621                           l1456:
  2622  0002A8                     ;main.c: 154:         volt = ~volt;
  2623                           	comf	((c:_volt)),c,w
  2624  0002A8  1C3D               
  2625                           	movwf	((c:_volt)),c
  2626  0002AA  6E3D               	comf	((c:_volt+1)),c,w
  2627  0002AC  1C3E               	movwf	1+((c:_volt)),c
  2628  0002AE  6E3E               	
  2629                           	comf	((c:_volt+2)),c,w
  2630  0002B0  1C3F               	movwf	2+((c:_volt)),c
  2631  0002B2  6E3F               	
  2632                           	comf	((c:_volt+3)),c,w
  2633  0002B4  1C40               	movwf	3+((c:_volt)),c
  2634  0002B6  6E40               	
  2635                           	line	155
  2636                           ;main.c: 155:         volt++;
  2637                           	movlw	low(01h)
  2638  0002B8  0E01               	addwf	((c:_volt)),c
  2639  0002BA  263D               	movlw	0
  2640  0002BC  0E00               	addwfc	((c:_volt+1)),c
  2641  0002BE  223E               	addwfc	((c:_volt+2)),c
  2642  0002C0  223F               	addwfc	((c:_volt+3)),c
  2643  0002C2  2240               	line	156
  2644                           ;main.c: 156:     } else {
  2645                           	goto	l1458
  2646  0002C4  EF67  F001         	
  2647                           l146:
  2648  0002C8                     	line	157
  2649                           ;main.c: 157:         GPREG.DIRCTRL = 1;
  2650                           	bsf	((c:_GPREG)),c,0
  2651  0002C8  804F               	goto	l1458
  2652  0002CA  EF67  F001         	line	158
  2653                           ;main.c: 158:     }
  2654                           	
  2655                           l147:
  2656  0002CE                     	line	160
  2657                           	
  2658                           l1458:
  2659  0002CE                     ;main.c: 160:     if(volt > 6300)
  2660                           	btfsc	((c:_volt+3)),c,7
  2661  0002CE  BE40               	goto	u601
  2662  0002D0  EF76  F001         	movf	((c:_volt+3)),c,w
  2663  0002D4  5040               	iorwf	((c:_volt+2)),c,w
  2664  0002D6  103F               	bnz	u600
  2665  0002D8  E10B               	movlw	157
  2666  0002DA  0E9D               	subwf	 ((c:_volt)),c,w
  2667  0002DC  5C3D               	movlw	24
  2668  0002DE  0E18               	subwfb	((c:_volt+1)),c,w
  2669  0002E0  583E               	btfss	status,0
  2670  0002E2  A0D8               	goto	u601
  2671  0002E4  EF76  F001         	goto	u600
  2672  0002E8  EF78  F001         
  2673                           u601:
  2674  0002EC                     	goto	l1462
  2675  0002EC  EF82  F001         u600:
  2676  0002F0                     	line	162
  2677                           	
  2678                           l1460:
  2679  0002F0                     ;main.c: 161:     {;main.c: 162:         volt = 6300;
  2680                           	movlw	low(0189Ch)
  2681  0002F0  0E9C               	movwf	((c:_volt)),c
  2682  0002F2  6E3D               	movlw	high(0189Ch)
  2683  0002F4  0E18               	movwf	((c:_volt+1)),c
  2684  0002F6  6E3E               	movlw	low highword(0189Ch)
  2685  0002F8  0E00               	movwf	((c:_volt+2)),c
  2686  0002FA  6E3F               	movlw	high highword(0189Ch)
  2687  0002FC  0E00               	movwf	((c:_volt+3)),c
  2688  0002FE  6E40               	goto	l1462
  2689  000300  EF82  F001         	line	163
  2690                           ;main.c: 163:     }
  2691                           	
  2692                           l148:
  2693  000304                     	line	165
  2694                           	
  2695                           l1462:
  2696  000304                     ;main.c: 165:     volt = (volt*1022)/6300;
  2697                           	movff	(c:_volt),(c:___lmul@multiplier)
  2698  000304  C03D  F005         	movff	(c:_volt+1),(c:___lmul@multiplier+1)
  2699  000308  C03E  F006         	movff	(c:_volt+2),(c:___lmul@multiplier+2)
  2700  00030C  C03F  F007         	movff	(c:_volt+3),(c:___lmul@multiplier+3)
  2701  000310  C040  F008         	movlw	low(03FEh)
  2702  000314  0EFE               	movwf	((c:___lmul@multiplicand)),c
  2703  000316  6E09               	movlw	high(03FEh)
  2704  000318  0E03               	movwf	((c:___lmul@multiplicand+1)),c
  2705  00031A  6E0A               	movlw	low highword(03FEh)
  2706  00031C  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2707  00031E  6E0B               	movlw	high highword(03FEh)
  2708  000320  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2709  000322  6E0C               	call	___lmul	;wreg free
  2710  000324  EC71  F003         	movff	0+?___lmul,(c:___aldiv@dividend)
  2711  000328  C005  F011         	movff	1+?___lmul,(c:___aldiv@dividend+1)
  2712  00032C  C006  F012         	movff	2+?___lmul,(c:___aldiv@dividend+2)
  2713  000330  C007  F013         	movff	3+?___lmul,(c:___aldiv@dividend+3)
  2714  000334  C008  F014         	
  2715                           	movlw	low(0189Ch)
  2716  000338  0E9C               	movwf	((c:___aldiv@divisor)),c
  2717  00033A  6E15               	movlw	high(0189Ch)
  2718  00033C  0E18               	movwf	((c:___aldiv@divisor+1)),c
  2719  00033E  6E16               	movlw	low highword(0189Ch)
  2720  000340  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2721  000342  6E17               	movlw	high highword(0189Ch)
  2722  000344  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2723  000346  6E18               	call	___aldiv	;wreg free
  2724  000348  ECB9  F001         	movff	0+?___aldiv,(c:_volt)
  2725  00034C  C011  F03D         	movff	1+?___aldiv,(c:_volt+1)
  2726  000350  C012  F03E         	movff	2+?___aldiv,(c:_volt+2)
  2727  000354  C013  F03F         	movff	3+?___aldiv,(c:_volt+3)
  2728  000358  C014  F040         	
  2729                           	line	167
  2730                           	
  2731                           l1464:
  2732  00035C                     ;main.c: 167:     return volt;
  2733                           	movff	(c:_volt),(c:?_calculatePWM)
  2734  00035C  C03D  F01F         	movff	(c:_volt+1),(c:?_calculatePWM+1)
  2735  000360  C03E  F020         	movff	(c:_volt+2),(c:?_calculatePWM+2)
  2736  000364  C03F  F021         	movff	(c:_volt+3),(c:?_calculatePWM+3)
  2737  000368  C040  F022         	goto	l149
  2738  00036C  EFB8  F001         	
  2739                           l1466:
  2740  000370                     	line	168
  2741                           	
  2742                           l149:
  2743  000370                     	return	;funcret
  2744  000370  0012               	opt stack 0
  2745                           GLOBAL	__end_of_calculatePWM
  2746                           	__end_of_calculatePWM:
  2747  000372                     	signat	_calculatePWM,4220
  2748                           	global	___wmul
  2749                           
  2750 ;; *************** function ___wmul *****************
  2751 ;; Defined at:
  2752 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  multiplier      2    4[COMRAM] unsigned int 
  2755 ;;  multiplicand    2    6[COMRAM] unsigned int 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  product         2    8[COMRAM] unsigned int 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  2    4[COMRAM] unsigned int 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0, prodl, prodh
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2767 ;;      Params:         4       0       0       0
  2768 ;;      Locals:         2       0       0       0
  2769 ;;      Temps:          0       0       0       0
  2770 ;;      Totals:         6       0       0       0
  2771 ;;Total ram usage:        6 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    1
  2774 ;; This function calls:
  2775 ;;		Nothing
  2776 ;; This function is called by:
  2777 ;;		_calculatePWM
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           psect	text12,class=CODE,space=0,reloc=2,group=1
  2781                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  2782                           	line	15
  2783                           global __ptext12
  2784                           __ptext12:
  2785  00078A                     psect	text12
  2786                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  2787                           	line	15
  2788                           	global	__size_of___wmul
  2789                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  2790  0000                     	
  2791                           ___wmul:
  2792  00078A                     ;incstack = 0
  2793                           	opt	stack 28
  2794                           	line	37
  2795                           	
  2796                           l1304:
  2797  00078A                     	movf	((c:___wmul@multiplier)),c,w
  2798  00078A  5005               	mulwf	((c:___wmul@multiplicand)),c
  2799  00078C  0207               	movff	prodl,(c:___wmul@product)
  2800  00078E  CFF3 F009          	movff	prodh,(c:___wmul@product+1)
  2801  000792  CFF4 F00A          	line	38
  2802                           	movf	((c:___wmul@multiplier)),c,w
  2803  000796  5005               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  2804  000798  0208               	movf	(prodl),c,w
  2805  00079A  50F3               	addwf	((c:___wmul@product+1)),c
  2806  00079C  260A               
  2807                           	line	39
  2808                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  2809  00079E  5006               	mulwf	((c:___wmul@multiplicand)),c
  2810  0007A0  0207               	movf	(prodl),c,w
  2811  0007A2  50F3               	addwf	((c:___wmul@product+1)),c
  2812  0007A4  260A               
  2813                           	line	52
  2814                           	
  2815                           l1306:
  2816  0007A6                     	movff	(c:___wmul@product),(c:?___wmul)
  2817  0007A6  C009  F005         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  2818  0007AA  C00A  F006         	goto	l181
  2819  0007AE  EFD9  F003         	
  2820                           l1308:
  2821  0007B2                     	line	53
  2822                           	
  2823                           l181:
  2824  0007B2                     	return	;funcret
  2825  0007B2  0012               	opt stack 0
  2826                           GLOBAL	__end_of___wmul
  2827                           	__end_of___wmul:
  2828  0007B4                     	signat	___wmul,8314
  2829                           	global	___lmul
  2830                           
  2831 ;; *************** function ___lmul *****************
  2832 ;; Defined at:
  2833 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  multiplier      4    4[COMRAM] unsigned long 
  2836 ;;  multiplicand    4    8[COMRAM] unsigned long 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  product         4   12[COMRAM] unsigned long 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  4    4[COMRAM] unsigned long 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2848 ;;      Params:         8       0       0       0
  2849 ;;      Locals:         4       0       0       0
  2850 ;;      Temps:          0       0       0       0
  2851 ;;      Totals:        12       0       0       0
  2852 ;;Total ram usage:       12 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    1
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_calculatePWM
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           psect	text13,class=CODE,space=0,reloc=2,group=1
  2862                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  2863                           	line	15
  2864                           global __ptext13
  2865                           __ptext13:
  2866  0006E2                     psect	text13
  2867                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  2868                           	line	15
  2869                           	global	__size_of___lmul
  2870                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  2871  0000                     	
  2872                           ___lmul:
  2873  0006E2                     ;incstack = 0
  2874                           	opt	stack 28
  2875                           	line	119
  2876                           	
  2877                           l1310:
  2878  0006E2                     	movlw	low(0)
  2879  0006E2  0E00               	movwf	((c:___lmul@product)),c
  2880  0006E4  6E0D               	movlw	high(0)
  2881  0006E6  0E00               	movwf	((c:___lmul@product+1)),c
  2882  0006E8  6E0E               	movlw	low highword(0)
  2883  0006EA  0E00               	movwf	((c:___lmul@product+2)),c
  2884  0006EC  6E0F               	movlw	high highword(0)
  2885  0006EE  0E00               	movwf	((c:___lmul@product+3)),c
  2886  0006F0  6E10               	goto	l1312
  2887  0006F2  EF7B  F003         	line	120
  2888                           	
  2889                           l190:
  2890  0006F6                     	line	121
  2891                           	
  2892                           l1312:
  2893  0006F6                     	
  2894                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  2895  0006F6  A005               	goto	u451
  2896  0006F8  EF80  F003         	goto	u450
  2897  0006FC  EF82  F003         u451:
  2898  000700                     	goto	l1316
  2899  000700  EF8C  F003         u450:
  2900  000704                     	line	122
  2901                           	
  2902                           l1314:
  2903  000704                     	movf	((c:___lmul@multiplicand)),c,w
  2904  000704  5009               	addwf	((c:___lmul@product)),c
  2905  000706  260D               	movf	((c:___lmul@multiplicand+1)),c,w
  2906  000708  500A               	addwfc	((c:___lmul@product+1)),c
  2907  00070A  220E               	movf	((c:___lmul@multiplicand+2)),c,w
  2908  00070C  500B               	addwfc	((c:___lmul@product+2)),c
  2909  00070E  220F               	movf	((c:___lmul@multiplicand+3)),c,w
  2910  000710  500C               	addwfc	((c:___lmul@product+3)),c
  2911  000712  2210               	goto	l1316
  2912  000714  EF8C  F003         	
  2913                           l191:
  2914  000718                     	line	123
  2915                           	
  2916                           l1316:
  2917  000718                     	bcf	status,0
  2918  000718  90D8               	rlcf	((c:___lmul@multiplicand)),c
  2919  00071A  3609               	rlcf	((c:___lmul@multiplicand+1)),c
  2920  00071C  360A               	rlcf	((c:___lmul@multiplicand+2)),c
  2921  00071E  360B               	rlcf	((c:___lmul@multiplicand+3)),c
  2922  000720  360C               	line	124
  2923                           	
  2924                           l1318:
  2925  000722                     	bcf	status,0
  2926  000722  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  2927  000724  3208               	rrcf	((c:___lmul@multiplier+2)),c
  2928  000726  3207               	rrcf	((c:___lmul@multiplier+1)),c
  2929  000728  3206               	rrcf	((c:___lmul@multiplier)),c
  2930  00072A  3205               	line	125
  2931                           	movf	((c:___lmul@multiplier)),c,w
  2932  00072C  5005               iorwf	((c:___lmul@multiplier+1)),c,w
  2933  00072E  1006               iorwf	((c:___lmul@multiplier+2)),c,w
  2934  000730  1007               iorwf	((c:___lmul@multiplier+3)),c,w
  2935  000732  1008               	btfss	status,2
  2936  000734  A4D8               	goto	u461
  2937  000736  EF9F  F003         	goto	u460
  2938  00073A  EFA1  F003         
  2939                           u461:
  2940  00073E                     	goto	l1312
  2941  00073E  EF7B  F003         u460:
  2942  000742                     	
  2943                           l192:
  2944  000742                     	line	128
  2945                           	movff	(c:___lmul@product),(c:?___lmul)
  2946  000742  C00D  F005         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  2947  000746  C00E  F006         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  2948  00074A  C00F  F007         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  2949  00074E  C010  F008         	line	129
  2950                           	
  2951                           l193:
  2952  000752                     	return	;funcret
  2953  000752  0012               	opt stack 0
  2954                           GLOBAL	__end_of___lmul
  2955                           	__end_of___lmul:
  2956  000754                     	signat	___lmul,8316
  2957                           	global	___aldiv
  2958                           
  2959 ;; *************** function ___aldiv *****************
  2960 ;; Defined at:
  2961 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  dividend        4   16[COMRAM] long 
  2964 ;;  divisor         4   20[COMRAM] long 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  quotient        4   26[COMRAM] long 
  2967 ;;  sign            1   25[COMRAM] unsigned char 
  2968 ;;  counter         1   24[COMRAM] unsigned char 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  4   16[COMRAM] long 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, status,0
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2978 ;;      Params:         8       0       0       0
  2979 ;;      Locals:         6       0       0       0
  2980 ;;      Temps:          0       0       0       0
  2981 ;;      Totals:        14       0       0       0
  2982 ;;Total ram usage:       14 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    1
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_calculatePWM
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           psect	text14,class=CODE,space=0,reloc=2,group=1
  2992                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  2993                           	line	7
  2994                           global __ptext14
  2995                           __ptext14:
  2996  000372                     psect	text14
  2997                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  2998                           	line	7
  2999                           	global	__size_of___aldiv
  3000                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  3001  0000                     	
  3002                           ___aldiv:
  3003  000372                     ;incstack = 0
  3004                           	opt	stack 28
  3005                           	line	13
  3006                           	
  3007                           l1320:
  3008  000372                     	movlw	low(0)
  3009  000372  0E00               	movwf	((c:___aldiv@sign)),c
  3010  000374  6E1A               	line	14
  3011                           	
  3012                           l1322:
  3013  000376                     	btfsc	((c:___aldiv@divisor+3)),c,7
  3014  000376  BE18               	goto	u470
  3015  000378  EFC2  F001         	goto	u471
  3016  00037C  EFC0  F001         
  3017                           u471:
  3018  000380                     	goto	l1328
  3019  000380  EFCE  F001         u470:
  3020  000384                     	line	15
  3021                           	
  3022                           l1324:
  3023  000384                     	comf	((c:___aldiv@divisor+3)),c
  3024  000384  1E18               	comf	((c:___aldiv@divisor+2)),c
  3025  000386  1E17               	comf	((c:___aldiv@divisor+1)),c
  3026  000388  1E16               	negf	((c:___aldiv@divisor)),c
  3027  00038A  6C15               	movlw	0
  3028  00038C  0E00               	addwfc	((c:___aldiv@divisor+1)),c
  3029  00038E  2216               	addwfc	((c:___aldiv@divisor+2)),c
  3030  000390  2217               	addwfc	((c:___aldiv@divisor+3)),c
  3031  000392  2218               	line	16
  3032                           	
  3033                           l1326:
  3034  000394                     	movlw	low(01h)
  3035  000394  0E01               	movwf	((c:___aldiv@sign)),c
  3036  000396  6E1A               	goto	l1328
  3037  000398  EFCE  F001         	line	17
  3038                           	
  3039                           l250:
  3040  00039C                     	line	18
  3041                           	
  3042                           l1328:
  3043  00039C                     	btfsc	((c:___aldiv@dividend+3)),c,7
  3044  00039C  BE14               	goto	u480
  3045  00039E  EFD5  F001         	goto	u481
  3046  0003A2  EFD3  F001         
  3047                           u481:
  3048  0003A6                     	goto	l1334
  3049  0003A6  EFE1  F001         u480:
  3050  0003AA                     	line	19
  3051                           	
  3052                           l1330:
  3053  0003AA                     	comf	((c:___aldiv@dividend+3)),c
  3054  0003AA  1E14               	comf	((c:___aldiv@dividend+2)),c
  3055  0003AC  1E13               	comf	((c:___aldiv@dividend+1)),c
  3056  0003AE  1E12               	negf	((c:___aldiv@dividend)),c
  3057  0003B0  6C11               	movlw	0
  3058  0003B2  0E00               	addwfc	((c:___aldiv@dividend+1)),c
  3059  0003B4  2212               	addwfc	((c:___aldiv@dividend+2)),c
  3060  0003B6  2213               	addwfc	((c:___aldiv@dividend+3)),c
  3061  0003B8  2214               	line	20
  3062                           	
  3063                           l1332:
  3064  0003BA                     	movlw	(01h)&0ffh
  3065  0003BA  0E01               	xorwf	((c:___aldiv@sign)),c
  3066  0003BC  1A1A               	goto	l1334
  3067  0003BE  EFE1  F001         	line	21
  3068                           	
  3069                           l251:
  3070  0003C2                     	line	22
  3071                           	
  3072                           l1334:
  3073  0003C2                     	movlw	low(0)
  3074  0003C2  0E00               	movwf	((c:___aldiv@quotient)),c
  3075  0003C4  6E1B               	movlw	high(0)
  3076  0003C6  0E00               	movwf	((c:___aldiv@quotient+1)),c
  3077  0003C8  6E1C               	movlw	low highword(0)
  3078  0003CA  0E00               	movwf	((c:___aldiv@quotient+2)),c
  3079  0003CC  6E1D               	movlw	high highword(0)
  3080  0003CE  0E00               	movwf	((c:___aldiv@quotient+3)),c
  3081  0003D0  6E1E               	line	23
  3082                           	
  3083                           l1336:
  3084  0003D2                     	movf	((c:___aldiv@divisor)),c,w
  3085  0003D2  5015               iorwf	((c:___aldiv@divisor+1)),c,w
  3086  0003D4  1016               iorwf	((c:___aldiv@divisor+2)),c,w
  3087  0003D6  1017               iorwf	((c:___aldiv@divisor+3)),c,w
  3088  0003D8  1018               	btfsc	status,2
  3089  0003DA  B4D8               	goto	u491
  3090  0003DC  EFF2  F001         	goto	u490
  3091  0003E0  EFF4  F001         
  3092                           u491:
  3093  0003E4                     	goto	l1356
  3094  0003E4  EF36  F002         u490:
  3095  0003E8                     	line	24
  3096                           	
  3097                           l1338:
  3098  0003E8                     	movlw	low(01h)
  3099  0003E8  0E01               	movwf	((c:___aldiv@counter)),c
  3100  0003EA  6E19               	line	25
  3101                           	goto	l1342
  3102  0003EC  EF00  F002         	
  3103                           l254:
  3104  0003F0                     	line	26
  3105                           	
  3106                           l1340:
  3107  0003F0                     	bcf	status,0
  3108  0003F0  90D8               	rlcf	((c:___aldiv@divisor)),c
  3109  0003F2  3615               	rlcf	((c:___aldiv@divisor+1)),c
  3110  0003F4  3616               	rlcf	((c:___aldiv@divisor+2)),c
  3111  0003F6  3617               	rlcf	((c:___aldiv@divisor+3)),c
  3112  0003F8  3618               	line	27
  3113                           	incf	((c:___aldiv@counter)),c
  3114  0003FA  2A19               	goto	l1342
  3115  0003FC  EF00  F002         	line	28
  3116                           	
  3117                           l253:
  3118  000400                     	line	25
  3119                           	
  3120                           l1342:
  3121  000400                     	
  3122                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
  3123  000400  AE18               	goto	u501
  3124  000402  EF05  F002         	goto	u500
  3125  000406  EF07  F002         u501:
  3126  00040A                     	goto	l1340
  3127  00040A  EFF8  F001         u500:
  3128  00040E                     	goto	l1344
  3129  00040E  EF0B  F002         	
  3130                           l255:
  3131  000412                     	goto	l1344
  3132  000412  EF0B  F002         	line	29
  3133                           	
  3134                           l256:
  3135  000416                     	line	30
  3136                           	
  3137                           l1344:
  3138  000416                     	bcf	status,0
  3139  000416  90D8               	rlcf	((c:___aldiv@quotient)),c
  3140  000418  361B               	rlcf	((c:___aldiv@quotient+1)),c
  3141  00041A  361C               	rlcf	((c:___aldiv@quotient+2)),c
  3142  00041C  361D               	rlcf	((c:___aldiv@quotient+3)),c
  3143  00041E  361E               	line	31
  3144                           	
  3145                           l1346:
  3146  000420                     		movf	((c:___aldiv@divisor)),c,w
  3147  000420  5015               	subwf	((c:___aldiv@dividend)),c,w
  3148  000422  5C11               	movf	((c:___aldiv@divisor+1)),c,w
  3149  000424  5016               	subwfb	((c:___aldiv@dividend+1)),c,w
  3150  000426  5812               	movf	((c:___aldiv@divisor+2)),c,w
  3151  000428  5017               	subwfb	((c:___aldiv@dividend+2)),c,w
  3152  00042A  5813               	movf	((c:___aldiv@divisor+3)),c,w
  3153  00042C  5018               	subwfb	((c:___aldiv@dividend+3)),c,w
  3154  00042E  5814               	btfss	status,0
  3155  000430  A0D8               	goto	u511
  3156  000432  EF1D  F002         	goto	u510
  3157  000436  EF1F  F002         
  3158                           u511:
  3159  00043A                     	goto	l1352
  3160  00043A  EF2A  F002         u510:
  3161  00043E                     	line	32
  3162                           	
  3163                           l1348:
  3164  00043E                     	movf	((c:___aldiv@divisor)),c,w
  3165  00043E  5015               	subwf	((c:___aldiv@dividend)),c
  3166  000440  5E11               	movf	((c:___aldiv@divisor+1)),c,w
  3167  000442  5016               	subwfb	((c:___aldiv@dividend+1)),c
  3168  000444  5A12               	movf	((c:___aldiv@divisor+2)),c,w
  3169  000446  5017               	subwfb	((c:___aldiv@dividend+2)),c
  3170  000448  5A13               	movf	((c:___aldiv@divisor+3)),c,w
  3171  00044A  5018               	subwfb	((c:___aldiv@dividend+3)),c
  3172  00044C  5A14               	line	33
  3173                           	
  3174                           l1350:
  3175  00044E                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
  3176  00044E  801B               	goto	l1352
  3177  000450  EF2A  F002         	line	34
  3178                           	
  3179                           l257:
  3180  000454                     	line	35
  3181                           	
  3182                           l1352:
  3183  000454                     	bcf	status,0
  3184  000454  90D8               	rrcf	((c:___aldiv@divisor+3)),c
  3185  000456  3218               	rrcf	((c:___aldiv@divisor+2)),c
  3186  000458  3217               	rrcf	((c:___aldiv@divisor+1)),c
  3187  00045A  3216               	rrcf	((c:___aldiv@divisor)),c
  3188  00045C  3215               	line	36
  3189                           	
  3190                           l1354:
  3191  00045E                     	decfsz	((c:___aldiv@counter)),c
  3192  00045E  2E19               	
  3193                           	goto	l1344
  3194  000460  EF0B  F002         	goto	l1356
  3195  000464  EF36  F002         	
  3196                           l258:
  3197  000468                     	goto	l1356
  3198  000468  EF36  F002         	line	37
  3199                           	
  3200                           l252:
  3201  00046C                     	line	38
  3202                           	
  3203                           l1356:
  3204  00046C                     	movf	((c:___aldiv@sign)),c,w
  3205  00046C  501A               	btfsc	status,2
  3206  00046E  B4D8               	goto	u521
  3207  000470  EF3C  F002         	goto	u520
  3208  000474  EF3E  F002         u521:
  3209  000478                     	goto	l1360
  3210  000478  EF48  F002         u520:
  3211  00047C                     	line	39
  3212                           	
  3213                           l1358:
  3214  00047C                     	comf	((c:___aldiv@quotient+3)),c
  3215  00047C  1E1E               	comf	((c:___aldiv@quotient+2)),c
  3216  00047E  1E1D               	comf	((c:___aldiv@quotient+1)),c
  3217  000480  1E1C               	negf	((c:___aldiv@quotient)),c
  3218  000482  6C1B               	movlw	0
  3219  000484  0E00               	addwfc	((c:___aldiv@quotient+1)),c
  3220  000486  221C               	addwfc	((c:___aldiv@quotient+2)),c
  3221  000488  221D               	addwfc	((c:___aldiv@quotient+3)),c
  3222  00048A  221E               	goto	l1360
  3223  00048C  EF48  F002         	
  3224                           l259:
  3225  000490                     	line	40
  3226                           	
  3227                           l1360:
  3228  000490                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
  3229  000490  C01B  F011         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
  3230  000494  C01C  F012         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
  3231  000498  C01D  F013         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
  3232  00049C  C01E  F014         	goto	l260
  3233  0004A0  EF52  F002         	
  3234                           l1362:
  3235  0004A4                     	line	41
  3236                           	
  3237                           l260:
  3238  0004A4                     	return	;funcret
  3239  0004A4  0012               	opt stack 0
  3240                           GLOBAL	__end_of___aldiv
  3241                           	__end_of___aldiv:
  3242  0004A6                     	signat	___aldiv,8316
  3243                           	global	_ISR_high
  3244                           
  3245 ;; *************** function _ISR_high *****************
  3246 ;; Defined at:
  3247 ;;		line 62 in file "main.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3261 ;;      Params:         0       0       0       0
  3262 ;;      Locals:         0       0       0       0
  3263 ;;      Temps:          4       0       0       0
  3264 ;;      Totals:         4       0       0       0
  3265 ;;Total ram usage:        4 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		Interrupt level 2
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           psect	intcode,class=CODE,space=0,reloc=2
  3274                           global __pintcode
  3275                           __pintcode:
  3276  000008                     psect	intcode
  3277                           	file	"main.c"
  3278                           	line	62
  3279                           	global	__size_of_ISR_high
  3280                           	__size_of_ISR_high	equ	__end_of_ISR_high-_ISR_high
  3281  0000                     	
  3282                           _ISR_high:
  3283  000008                     ;incstack = 0
  3284                           	opt	stack 28
  3285                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  3286  000008  825B               	movff	fsr2l+0,??_ISR_high+2
  3287  00000A  CFD9 F003          	movff	fsr2h+0,??_ISR_high+3
  3288  00000E  CFDA F004          	line	64
  3289                           	
  3290                           i2l1040:
  3291  000012                     ;main.c: 64:     if(1 == TMR1IE && 1 == TMR1IF)
  3292                           	btfss	c:(31976/8),(31976)&7	;volatile
  3293  000012  A09D               	goto	i2u18_41
  3294  000014  EF0E  F000         	goto	i2u18_40
  3295  000018  EF10  F000         i2u18_41:
  3296  00001C                     	goto	i2l1048
  3297  00001C  EF20  F000         i2u18_40:
  3298  000020                     	
  3299                           i2l1042:
  3300  000020                     	btfss	c:(31984/8),(31984)&7	;volatile
  3301  000020  A09E               	goto	i2u19_41
  3302  000022  EF15  F000         	goto	i2u19_40
  3303  000026  EF17  F000         i2u19_41:
  3304  00002A                     	goto	i2l1048
  3305  00002A  EF20  F000         i2u19_40:
  3306  00002E                     	line	66
  3307                           	
  3308                           i2l1044:
  3309  00002E                     ;main.c: 65:     {;main.c: 66:         GPREG.STCTRL = 1;
  3310                           	bsf	((c:_GPREG)),c,1
  3311  00002E  824F               	line	67
  3312                           ;main.c: 67:         TMR1IF = 0;
  3313                           	bcf	c:(31984/8),(31984)&7	;volatile
  3314  000030  909E               	line	68
  3315                           ;main.c: 68:         TMR1ON = 0;
  3316                           	bcf	c:(32360/8),(32360)&7	;volatile
  3317  000032  90CD               	line	69
  3318                           	
  3319                           i2l1046:
  3320  000034                     ;main.c: 69:         TMR1 = 65485;
  3321                           	movlw	high(0FFCDh)
  3322  000034  0EFF               	movwf	((c:4046+1)),c	;volatile
  3323  000036  6ECF               	movlw	low(0FFCDh)
  3324  000038  0ECD               	movwf	((c:4046)),c	;volatile
  3325  00003A  6ECE               	goto	i2l1048
  3326  00003C  EF20  F000         	line	71
  3327                           ;main.c: 71:     }
  3328                           	
  3329                           i2l127:
  3330  000040                     	line	73
  3331                           	
  3332                           i2l1048:
  3333  000040                     ;main.c: 73:     if((1 == TXIE) && (1 == TXIF))
  3334                           	btfss	c:(31980/8),(31980)&7	;volatile
  3335  000040  A89D               	goto	i2u20_41
  3336  000042  EF25  F000         	goto	i2u20_40
  3337  000046  EF27  F000         i2u20_41:
  3338  00004A                     	goto	i2l132
  3339  00004A  EF5D  F000         i2u20_40:
  3340  00004E                     	
  3341                           i2l1050:
  3342  00004E                     	btfss	c:(31988/8),(31988)&7	;volatile
  3343  00004E  A89E               	goto	i2u21_41
  3344  000050  EF2C  F000         	goto	i2u21_40
  3345  000054  EF2E  F000         i2u21_41:
  3346  000058                     	goto	i2l132
  3347  000058  EF5D  F000         i2u21_40:
  3348  00005C                     	line	75
  3349                           	
  3350                           i2l1052:
  3351  00005C                     ;main.c: 74:     {;main.c: 75:         if(4 < cursor)
  3352                           		movf	((c:_cursor)),c,w
  3353  00005C  504D               	xorlw	80h
  3354  00005E  0A80               	addlw	-(80h^05h)
  3355  000060  0F7B               	btfss	status,0
  3356  000062  A0D8               	goto	i2u22_41
  3357  000064  EF36  F000         	goto	i2u22_40
  3358  000068  EF38  F000         
  3359                           i2u22_41:
  3360  00006C                     	goto	i2l1056
  3361  00006C  EF3C  F000         i2u22_40:
  3362  000070                     	line	77
  3363                           	
  3364                           i2l1054:
  3365  000070                     ;main.c: 76:         {;main.c: 77:             TXREG = 0x2C;
  3366                           	movlw	low(02Ch)
  3367  000070  0E2C               	movwf	((c:4013)),c	;volatile
  3368  000072  6EAD               	line	78
  3369                           ;main.c: 78:         } else {
  3370                           	goto	i2l1058
  3371  000074  EF4B  F000         	
  3372                           i2l129:
  3373  000078                     	line	79
  3374                           	
  3375                           i2l1056:
  3376  000078                     ;main.c: 79:             TXREG = *(string_pos + cursor);
  3377                           	movff	(c:_cursor),??_ISR_high+0+0
  3378  000078  C04D  F001         	clrf	(??_ISR_high+0+0+1)&0ffh,c
  3379  00007C  6A02               	btfsc	(??_ISR_high+0+0)&0ffh,c,7
  3380  00007E  BE01               	decf	(??_ISR_high+0+0+1)&0ffh,c
  3381  000080  0602               	movf	(??_ISR_high+0+0),c,w
  3382  000082  5001               	addwf	((c:_string_pos)),c,w
  3383  000084  2445               	movwf	c:fsr2l
  3384  000086  6ED9               	movf	(??_ISR_high+0+1),c,w
  3385  000088  5002               	addwfc	((c:_string_pos+1)),c,w
  3386  00008A  2046               	movwf	1+c:fsr2l
  3387  00008C  6EDA               	movf	indf2,w
  3388  00008E  50DF               	movwf	((c:4013)),c	;volatile
  3389  000090  6EAD               	goto	i2l1058
  3390  000092  EF4B  F000         	line	80
  3391                           ;main.c: 80:         }
  3392                           	
  3393                           i2l130:
  3394  000096                     	line	81
  3395                           	
  3396                           i2l1058:
  3397  000096                     ;main.c: 81:         cursor++;
  3398                           	incf	((c:_cursor)),c
  3399  000096  2A4D               	line	82
  3400                           	
  3401                           i2l1060:
  3402  000098                     ;main.c: 82:         if(5 < cursor)
  3403                           		movf	((c:_cursor)),c,w
  3404  000098  504D               	xorlw	80h
  3405  00009A  0A80               	addlw	-(80h^06h)
  3406  00009C  0F7A               	btfss	status,0
  3407  00009E  A0D8               	goto	i2u23_41
  3408  0000A0  EF54  F000         	goto	i2u23_40
  3409  0000A4  EF56  F000         
  3410                           i2u23_41:
  3411  0000A8                     	goto	i2l132
  3412  0000A8  EF5D  F000         i2u23_40:
  3413  0000AC                     	line	84
  3414                           	
  3415                           i2l1062:
  3416  0000AC                     ;main.c: 83:         {;main.c: 84:             TXIE = 0;
  3417                           	bcf	c:(31980/8),(31980)&7	;volatile
  3418  0000AC  989D               	line	85
  3419                           	
  3420                           i2l1064:
  3421  0000AE                     ;main.c: 85:             cursor = 0;
  3422                           	movlw	low(0)
  3423  0000AE  0E00               	movwf	((c:_cursor)),c
  3424  0000B0  6E4D               	goto	i2l132
  3425  0000B2  EF5D  F000         	line	86
  3426                           ;main.c: 86:         }
  3427                           	
  3428                           i2l131:
  3429  0000B6                     	goto	i2l132
  3430  0000B6  EF5D  F000         	line	87
  3431                           ;main.c: 87:     }
  3432                           	
  3433                           i2l128:
  3434  0000BA                     	line	89
  3435                           	
  3436                           i2l132:
  3437  0000BA                     	movff	??_ISR_high+3,fsr2h+0
  3438  0000BA  C004  FFDA         	movff	??_ISR_high+2,fsr2l+0
  3439  0000BE  C003  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  3440  0000C2  925B               	retfie f
  3441  0000C4  0011               	opt stack 0
  3442                           GLOBAL	__end_of_ISR_high
  3443                           	__end_of_ISR_high:
  3444  0000C6                     	signat	_ISR_high,89
  3445                           	GLOBAL	__activetblptr
  3446                           __activetblptr	EQU	0
  3447  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  3448                           	PSECT	rparam,class=COMRAM,space=1,noexec
  3449                           	GLOBAL	__Lrparam
  3450                           	FNCONF	rparam,??,?
  3451                           	GLOBAL	___rparam_used
  3452                           	___rparam_used EQU 1
  3453  0000                     	GLOBAL	___param_bank
  3454                           	___param_bank EQU 0
  3455  0000                     GLOBAL	__Lparam, __Hparam
  3456                           GLOBAL	__Lrparam, __Hrparam
  3457                           __Lparam	EQU	__Lrparam
  3458  0000                     __Hparam	EQU	__Hrparam
  3459  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  3460                           	global	btemp
  3461                           btemp:
  3462  00005B                     	ds	1
  3463  00005B                     	global	int$flags
  3464                           	int$flags	set btemp
  3465  0000                     	global	wtemp8
  3466                           	wtemp8 set btemp+1
  3467  0000                     	global	ttemp5
  3468                           	ttemp5 set btemp+1
  3469  0000                     	global	ttemp6
  3470                           	ttemp6 set btemp+4
  3471  0000                     	global	ttemp7
  3472                           	ttemp7 set btemp+8
  3473  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         40
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      90
    BANK0           160      2       2
    BANK1           256      0       0
    BANK2           244      0       0

Pointer List with Targets:

    sp__int2char	PTR unsigned char  size(2) Largest target is 5
		 -> int2char@string(COMRAM[5]), 

    string_pos	PTR unsigned char  size(2) Largest target is 5
		 -> NULL(NULL[0]), int2char@string(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_write_PWM
    _int2char->___lwdiv
    _init_PWM->_write_PWM
    _write_PWM->_calculatePWM
    _calculatePWM->___aldiv
    ___aldiv->___lmul

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_write_PWM
    _init_PWM->_write_PWM

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4156
                                              1 BANK0      1     1      0
                       _calculatePWM
                           _init_ISR
                           _init_PWM
                           _init_QEI
                          _init_TMR1
                          _init_UART
                         _init_VNHIO
                           _int2char
                          _write_PWM
 ---------------------------------------------------------------------------------
 (1) _int2char                                             5     3      2    1090
                                             11 COMRAM     5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _init_VNHIO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_QEI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PWM                                             0     0      0     245
                          _write_PWM
 ---------------------------------------------------------------------------------
 (1) _write_PWM                                            3     1      2     245
                                             42 COMRAM     2     0      2
                                              0 BANK0      1     1      0
                       _calculatePWM (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calculatePWM                                        13     9      4    2573
                                             30 COMRAM    12     8      4
                            ___aldiv
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             16 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_high                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculatePWM
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___wmul
   _init_ISR
   _init_PWM
     _write_PWM
       _calculatePWM (ARG)
         ___aldiv
           ___lmul (ARG)
         ___lmul
         ___wmul
   _init_QEI
   _init_TMR1
   _init_UART
   _init_VNHIO
   _int2char
     ___lwdiv
     ___lwmod
   _write_PWM
     _calculatePWM (ARG)
       ___aldiv
         ___lmul (ARG)
       ___lmul
       ___wmul

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F3      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            F4      0       0       8        0.0%
BANK2               F4      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      2       2       4        1.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      5A       1       95.7%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5C       5        0.0%
DATA                 0      0      5C      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Nov 01 18:35:00 2018

    ___wmul@multiplicand 0007             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$RC 000000  
                    l140 053C                      l141 055E                      l142 0562  
                    l143 0562                      l152 0860                      l161 07DA  
                    l137 04FE                      l250 039C                      l146 02C8  
                    l170 0852                      l138 055A                      l251 03C2  
                    l147 02CE                      l155 0840                      l139 0534  
                    l260 04A4                      l252 046C                      l148 0304  
                    l164 07FC                      l253 0400                      l181 07B2  
                    l149 0370                      l254 03F0                      l190 06F6  
                    l158 0818                      l255 0412                      l191 0718  
                    l167 082E                      l175 064A                      l256 0416  
                    l192 0742                      l176 05FE                      l257 0454  
                    l193 0752                      l177 065C                      l258 0468  
                    l178 0668                      l259 0490                      l672 05E4  
                    l673 0594                      l674 0588                      l682 06D8  
                    l675 05A6                      l683 0690                      l676 05AA  
                    l684 0684                      l677 05D4                      l685 06A2  
                    l678 05E4                      l686 06A6                      l679 05EC  
                    l687 06C8                      l688 06D8                      l689 06E0  
                    _GIE 007F97             __CFG_CPB$OFF 000000                      u500 040E  
                    u501 040A                      u510 043E                      _PR2 000FCB  
                    _PID 002D                      u511 043A                      u520 047C  
                    u600 02F0                      u521 0478                      u601 02EC  
                    u450 0704                      u530 0580                      u610 0658  
           __CFG_CPD$OFF 000000                      u451 0700                      u531 057C  
                    u611 0654                      u460 0742                      u540 05A2  
                    u620 050C                      u461 073E                      u541 059E  
                    u621 0508                      u470 0384                      u550 05C6  
                    u630 052C                      u471 0380                      u551 05C2  
                    u631 0528                      u480 03AA                      u560 067C  
                    u481 03A6                      u561 0678                      u490 03E8  
                    u570 069E                      u491 03E4                      u571 069A  
                    u580 06BC                      u581 06B8                      u590 02A6  
                    u591 02A2                      _pos 0059                      prod 000FF3  
                    wreg 000FE8             __CFG_IESO$ON 000000              int2char@num 000E  
           __CFG_LVP$OFF 000000                     l1300 07CA                     l1310 06E2  
                   l1302 07D6                     l1320 0372                     l1312 06F6  
                   l1304 078A                     l1400 06CE                     l1330 03AA  
                   l1322 0376                     l1314 0704                     l1306 07A6  
                   l1410 083E                     l1402 0830                     l1340 03F0  
                   l1332 03BA                     l1324 0384                     l1316 0718  
                   l1308 07B2                     l1420 080C                     l1412 0854  
                   l1404 0838                     l1500 04F4                     l1350 044E  
                   l1342 0400                     l1334 03C2                     l1326 0394  
                   l1318 0722                     l1430 0842                     l1414 07FE  
                   l1422 07DC                     l1406 083A                     l1510 053C  
                   l1502 04FE                     l1360 0490                     l1352 0454  
                   l1344 0416                     l1336 03D2                     l1328 039C  
                   l1440 00F6                     l1432 00CA                     l1416 0802  
                   l1424 07E0                     l1408 083C                     l1512 0550  
                   l1504 050C                     l1362 04A4                     l1354 045E  
                   l1346 0420                     l1338 03E8                     l1450 0290  
                   l1442 012C                     l1434 00D0                     l1418 080A  
                   l1426 081A                     l1370 0588                     l1514 0552  
                   l1506 051E                     l1348 043E                     l1356 046C  
                   l1460 02F0                     l1452 0298                     l1444 0160  
                   l1436 00D6                     l1428 081E                     l1380 05CE  
                   l1372 0594                     l1364 0566                     l1516 0554  
                   l1508 052C                     l1358 047C                     l1462 0304  
                   l1454 02A6                     l1446 01AE                     l1438 00DA  
                   l1382 05D4                     l1374 05AA                     l1366 056E  
                   l1390 0684                     l1470 05F6                     l1464 035C  
                   l1456 02A8                     l1448 025C                     l1384 05DA  
                   l1376 05B0                     l1368 0580                     l1392 0690  
                   l1480 065C                     l1472 05FE                     l1466 0370  
                   l1458 02CE                     l1298 07B4                     l1378 05C6  
                   l1394 06A6                     l1386 066A                     l1482 0668  
                   l1474 0628                     l1490 04E2                     l1396 06BC  
                   l1388 067C                     l1476 0644                     l1468 05EE  
                   l1492 04E6                     l1484 04A6                     l1398 06C8  
                   l1478 064A                     l1494 04EA                     l1486 04DA  
                   l1496 04EE                     l1488 04DE                     l1498 04F2  
                   _IPEN 007E87              main@counter 0061                     _TMR1 000FCE  
                   _TXIE 007CEC                     _TXIF 007CF4                     _TXIP 007CFC  
          __CFG_FCMEN$ON 000000                     _main 04A6                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 005B                     _volt 003D            __CFG_BOREN$ON 000000  
                   prodh 000FF4                     prodl 000FF3                     start 00C6  
          __CFG_MCLRE$ON 000000             ___param_bank 000000          __end_of___aldiv 04A6  
                  ?_main 0001                    _T1CON 000FCD                    _T2CON 000FCA  
                  _LATA0 007C48                    _LATA1 007C49                    _LATC2 007C5A  
        __end_of___lwdiv 05EE                    _GPREG 004F          __end_of___lwmod 06E2  
                  i2l130 0096                    i2l131 00B6                    i2l132 00BA  
                  i2l127 0040                    i2l128 00BA                    i2l129 0078  
                  _RCSTA 000FAB                    _SPBRG 000FAF                    _TXREG 000FAD  
                  _TXSTA 000FAC            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000      ___lmul@multiplicand 0009            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000         __end_of_ISR_high 00C6            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _error 004B                    _input 0055                    tablat 000FF5  
                  ttemp5 005C                    ttemp6 005F                    ttemp7 0063  
                  status 000FD8                    wtemp8 005C            int2char@digit 0010  
        __initialization 0754           __CFG_HPOL$HIGH 000000             __end_of_main 0566  
         __CFG_LPOL$HIGH 000000                   ??_main 002D            __activetblptr 000000  
                 _CCPR1L 000FBE                   _ANSEL0 000FB8                   _ANSEL1 000FB9  
  __size_of_calculatePWM 02A8                   i2l1040 0012                   i2l1050 004E  
                 i2l1042 0020                   i2l1060 0098                   i2l1052 005C  
                 i2l1044 002E                   i2l1062 00AC                   i2l1054 0070  
                 i2l1046 0034                   i2l1064 00AE                   i2l1056 0078  
                 i2l1048 0040                   i2l1058 0096           __CFG_WDTEN$OFF 000000  
                 _QEICON 000FB6                   _OSCCON 000FD3                   _TMR1IE 007CE8  
                 _TMR1IF 007CF0           __CFG_WINEN$OFF 000000                   _TMR1IP 007CF8  
                 _TMR1ON 007E68                   _TRISA0 007C90                   _TRISA1 007C91  
                 _TRISA4 007C94                   _TRISA5 007C95                   _TRISC2 007CA2  
                 _TRISC6 007CA6           __CFG_SSPMX$RC7 000000         __end_of_int2char 066A  
                 ___lmul 06E2                ??___aldiv 0019                   ___wmul 078A  
         __CFG_STVREN$ON 000000                ??___lwdiv 0009                ??___lwmod 0009  
       __end_of_init_QEI 07FE         __end_of_init_ISR 0854         __end_of_init_PWM 081A  
                 _cursor 004D                   clear_0 077A             __pdataCOMRAM 0055  
           _calculatePWM 00CA                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0780  
        __CFG_FLTAMX$RC1 000000            ___rparam_used 000001          __CFG_T1OSCMX$ON 000000  
         __pcstackCOMRAM 0001                ?_ISR_high 0001           int2char@number 000C  
         int2char@string 0050       __size_of_init_UART 0016       __size_of_init_TMR1 000E  
             __pnvCOMRAM 0059                  ?___lmul 0005                  ?___wmul 0005  
             ??_ISR_high 0001          __CFG_WDPS$32768 000000                  _CCP1CON 000FBD  
                _BAUDCON 000FAA           ___lmul@product 000D          __CFG_PWM4MX$RB5 000000  
                _MAXCNTH 000F65                  _MAXCNTL 000F64                  i2u20_40 004E  
                i2u20_41 004A                  i2u21_40 005C                  i2u21_41 0058  
                i2u22_40 0070                  i2u22_41 006C                  i2u23_40 00AC  
                i2u23_41 00A8                  i2u18_40 0020                  i2u18_41 001C  
                i2u19_40 002E                  i2u19_41 002A                  _POSCNTH 000F67  
                _POSCNTL 000F66                ?_int2char 000C          __CFG_PWMPIN$OFF 000000  
              ?_init_QEI 0001                ?_init_ISR 0001                ?_init_PWM 0001  
     __size_of_write_PWM 0028          __CFG_PWRTEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000               _init_VNHIO 0830                  ___aldiv 0372  
        __size_of___lmul 0072          __size_of___wmul 002A                  ___lwdiv 0566  
                ___lwmod 066A                  __pcinit 0754                  __ramtop 0300  
                __ptext0 04A6                  __ptext1 05EE                  __ptext2 066A  
                __ptext3 0566                  __ptext4 0830                  __ptext5 081A  
                __ptext6 0854                  __ptext7 07DC                  __ptext8 07FE  
                __ptext9 07B4        __end_of_init_UART 0830        __end_of_init_TMR1 0862  
                _ref_pos 0057         ___aldiv@dividend 0011                  _pos_ant 0047  
             ??_int2char 000E     end_of_initialization 0780               ??_init_QEI 0005  
             ??_init_ISR 0005               ??_init_PWM 002D         ___aldiv@quotient 001B  
                postdec1 000FE5                  postinc0 000FEE               _pos_degree 004E  
      __end_of_write_PWM 07DC               _suma_error 0041              _CCP1CONbits 000FBD  
            ?_init_VNHIO 0001               _string_pos 0045         __CFG_EXCLKMX$RC3 000000  
         __end_of___lmul 0754           __end_of___wmul 07B4            __pidataCOMRAM 0862  
      __size_of_ISR_high 00BE      start_initialization 0754                 ??___lmul 000D  
               ??___wmul 0009       write_PWM@dutyCycle 002B              __pbssCOMRAM 002D  
          __pcstackBANK0 0060      __size_of_init_VNHIO 0012        __size_of_int2char 007C  
      __size_of_init_QEI 0022        __size_of_init_ISR 0012        __size_of_init_PWM 001C  
       ___lwdiv@dividend 0005                __pintcode 0008                 ?___aldiv 0011  
               ?___lwdiv 0005                 ?___lwmod 0005                _init_UART 081A  
              _init_TMR1 0854         ___lwdiv@quotient 000A                _error_ant 0049  
        ___aldiv@divisor 0015          ___aldiv@counter 0019           ___wmul@product 0009  
               _ISR_high 0008        ___wmul@multiplier 0005            ?_calculatePWM 001F  
             ?_init_UART 0001               ?_init_TMR1 0001                _write_PWM 07B4  
      ___lmul@multiplier 0005                copy_data0 0768                 __Hrparam 0000  
           ??_init_VNHIO 0005                 __Lrparam 0000         __size_of___aldiv 0134  
       __size_of___lwdiv 0088         __size_of___lwmod 0078           ??_calculatePWM 0023  
        ___lwdiv@divisor 0007          ___lwdiv@counter 0009                 __ptext10 0842  
               __ptext11 00CA                 __ptext12 078A                 __ptext13 06E2  
               __ptext14 0372               ?_write_PWM 002B       __end_of_init_VNHIO 0842  
               _int2char 05EE                 _init_QEI 07DC                 _init_ISR 0842  
               _init_PWM 07FE            __size_of_main 00C0                 _velocity 0039  
               int$flags 005B              ??_init_UART 0005              ??_init_TMR1 0005  
   calculatePWM@setpoint 0001                 intlevel2 0000         ___lwmod@dividend 0005  
        ___lwmod@divisor 0007          ___lwmod@counter 0009             ___aldiv@sign 001A  
            ??_write_PWM 0060     __end_of_calculatePWM 0372  
