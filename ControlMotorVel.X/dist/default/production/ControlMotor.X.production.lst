

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Oct 29 18:59:20 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4431 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   108                           DFLTCON equ 0F60h ;# 
   109  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   110                           CAP3CON equ 0F61h ;# 
   111  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   112                           CAP2CON equ 0F62h ;# 
   113  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   114                           CAP1CON equ 0F63h ;# 
   115  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   116                           CAP3BUFL equ 0F64h ;# 
   117  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   118                           MAXCNTL equ 0F64h ;# 
   119  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   120                           CAP3BUFH equ 0F65h ;# 
   121  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   122                           MAXCNTH equ 0F65h ;# 
   123  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   124                           CAP2BUFL equ 0F66h ;# 
   125  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   126                           POSCNTL equ 0F66h ;# 
   127  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   128                           CAP2BUFH equ 0F67h ;# 
   129  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   130                           POSCNTH equ 0F67h ;# 
   131  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   132                           CAP1BUFL equ 0F68h ;# 
   133  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   134                           VELRL equ 0F68h ;# 
   135  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   136                           CAP1BUFH equ 0F69h ;# 
   137  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   138                           VELRH equ 0F69h ;# 
   139  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   140                           OVDCONS equ 0F6Ah ;# 
   141  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   142                           OVDCOND equ 0F6Bh ;# 
   143  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   144                           FLTCONFIG equ 0F6Ch ;# 
   145  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   146                           DTCON equ 0F6Dh ;# 
   147  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   148                           PWMCON1 equ 0F6Eh ;# 
   149  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   150                           PWMCON0 equ 0F6Fh ;# 
   151  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   152                           SEVTCMPH equ 0F70h ;# 
   153  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   154                           SEVTCMPL equ 0F71h ;# 
   155  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   156                           PDC3H equ 0F72h ;# 
   157  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   158                           PDC3L equ 0F73h ;# 
   159  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   160                           PDC2H equ 0F74h ;# 
   161  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   162                           PDC2L equ 0F75h ;# 
   163  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   164                           PDC1H equ 0F76h ;# 
   165  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   166                           PDC1L equ 0F77h ;# 
   167  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   168                           PDC0H equ 0F78h ;# 
   169  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   170                           PDC0L equ 0F79h ;# 
   171  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   172                           PTPERH equ 0F7Ah ;# 
   173  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   174                           PTPERL equ 0F7Bh ;# 
   175  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   176                           PTMRH equ 0F7Ch ;# 
   177  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   178                           PTMRL equ 0F7Dh ;# 
   179  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   180                           PTCON1 equ 0F7Eh ;# 
   181  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   182                           PTCON0 equ 0F7Fh ;# 
   183  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   184                           PORTA equ 0F80h ;# 
   185  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   186                           PORTB equ 0F81h ;# 
   187  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   188                           PORTC equ 0F82h ;# 
   189  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   190                           PORTD equ 0F83h ;# 
   191  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   192                           PORTE equ 0F84h ;# 
   193  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   194                           TMR5 equ 0F87h ;# 
   195  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   196                           TMR5L equ 0F87h ;# 
   197  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   198                           TMR5H equ 0F88h ;# 
   199  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   200                           LATA equ 0F89h ;# 
   201  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   202                           LATB equ 0F8Ah ;# 
   203  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   204                           LATC equ 0F8Bh ;# 
   205  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   206                           LATD equ 0F8Ch ;# 
   207  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   208                           LATE equ 0F8Dh ;# 
   209  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   210                           PR5 equ 0F90h ;# 
   211  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   212                           PR5L equ 0F90h ;# 
   213  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   214                           PR5H equ 0F91h ;# 
   215  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   216                           TRISA equ 0F92h ;# 
   217  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   218                           DDRA equ 0F92h ;# 
   219  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   220                           TRISB equ 0F93h ;# 
   221  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   222                           DDRB equ 0F93h ;# 
   223  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   224                           TRISC equ 0F94h ;# 
   225  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   226                           DDRC equ 0F94h ;# 
   227  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   228                           TRISD equ 0F95h ;# 
   229  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   230                           DDRD equ 0F95h ;# 
   231  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   232                           TRISE equ 0F96h ;# 
   233  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   234                           DDRE equ 0F96h ;# 
   235  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   236                           ADCHS equ 0F99h ;# 
   237  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   238                           ADCON3 equ 0F9Ah ;# 
   239  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   240                           OSCTUNE equ 0F9Bh ;# 
   241  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   242                           PIE1 equ 0F9Dh ;# 
   243  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   244                           PIR1 equ 0F9Eh ;# 
   245  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   246                           IPR1 equ 0F9Fh ;# 
   247  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   248                           PIE2 equ 0FA0h ;# 
   249  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   250                           PIR2 equ 0FA1h ;# 
   251  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   252                           IPR2 equ 0FA2h ;# 
   253  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   254                           PIE3 equ 0FA3h ;# 
   255  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   256                           PIR3 equ 0FA4h ;# 
   257  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   258                           IPR3 equ 0FA5h ;# 
   259  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   260                           EECON1 equ 0FA6h ;# 
   261  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   262                           EECON2 equ 0FA7h ;# 
   263  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   264                           EEDATA equ 0FA8h ;# 
   265  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   266                           EEADR equ 0FA9h ;# 
   267  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   268                           BAUDCON equ 0FAAh ;# 
   269  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   270                           BAUDCTL equ 0FAAh ;# 
   271  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   272                           RCSTA equ 0FABh ;# 
   273  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   274                           RCSTA1 equ 0FABh ;# 
   275  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   276                           TXSTA equ 0FACh ;# 
   277  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   278                           TXSTA1 equ 0FACh ;# 
   279  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   280                           TXREG equ 0FADh ;# 
   281  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   282                           TXREG1 equ 0FADh ;# 
   283  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   284                           RCREG equ 0FAEh ;# 
   285  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   286                           RCREG1 equ 0FAEh ;# 
   287  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   288                           SPBRG equ 0FAFh ;# 
   289  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   290                           SPBRG1 equ 0FAFh ;# 
   291  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   292                           SPBRGH equ 0FB0h ;# 
   293  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   294                           QEICON equ 0FB6h ;# 
   295  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   296                           T5CON equ 0FB7h ;# 
   297  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   298                           ANSEL0 equ 0FB8h ;# 
   299  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   300                           ANSEL1 equ 0FB9h ;# 
   301  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   302                           CCP2CON equ 0FBAh ;# 
   303  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   304                           CCPR2 equ 0FBBh ;# 
   305  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   306                           CCPR2L equ 0FBBh ;# 
   307  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   308                           CCPR2H equ 0FBCh ;# 
   309  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   310                           CCP1CON equ 0FBDh ;# 
   311  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   312                           CCPR1 equ 0FBEh ;# 
   313  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   314                           CCPR1L equ 0FBEh ;# 
   315  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   316                           CCPR1H equ 0FBFh ;# 
   317  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   318                           ADCON2 equ 0FC0h ;# 
   319  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   320                           ADCON1 equ 0FC1h ;# 
   321  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   322                           ADCON0 equ 0FC2h ;# 
   323  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   324                           ADRES equ 0FC3h ;# 
   325  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   326                           ADRESL equ 0FC3h ;# 
   327  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   328                           ADRESH equ 0FC4h ;# 
   329  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   330                           SSPCON equ 0FC6h ;# 
   331  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   332                           SSPCON1 equ 0FC6h ;# 
   333  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   334                           SSPSTAT equ 0FC7h ;# 
   335  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   336                           SSPADD equ 0FC8h ;# 
   337  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   338                           SSPBUF equ 0FC9h ;# 
   339  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   340                           T2CON equ 0FCAh ;# 
   341  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   342                           PR2 equ 0FCBh ;# 
   343  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   344                           MEMCON equ 0FCBh ;# 
   345  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   346                           TMR2 equ 0FCCh ;# 
   347  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   348                           T1CON equ 0FCDh ;# 
   349  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   350                           TMR1 equ 0FCEh ;# 
   351  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   352                           TMR1L equ 0FCEh ;# 
   353  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   354                           TMR1H equ 0FCFh ;# 
   355  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   356                           RCON equ 0FD0h ;# 
   357  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   358                           WDTCON equ 0FD1h ;# 
   359  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   360                           LVDCON equ 0FD2h ;# 
   361  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   362                           OSCCON equ 0FD3h ;# 
   363  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   364                           T0CON equ 0FD5h ;# 
   365  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   366                           TMR0 equ 0FD6h ;# 
   367  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   368                           TMR0L equ 0FD6h ;# 
   369  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   370                           TMR0H equ 0FD7h ;# 
   371  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   372                           STATUS equ 0FD8h ;# 
   373  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   374                           FSR2 equ 0FD9h ;# 
   375  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   376                           FSR2L equ 0FD9h ;# 
   377  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   378                           FSR2H equ 0FDAh ;# 
   379  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   380                           PLUSW2 equ 0FDBh ;# 
   381  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   382                           PREINC2 equ 0FDCh ;# 
   383  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   384                           POSTDEC2 equ 0FDDh ;# 
   385  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   386                           POSTINC2 equ 0FDEh ;# 
   387  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   388                           INDF2 equ 0FDFh ;# 
   389  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   390                           BSR equ 0FE0h ;# 
   391  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   392                           FSR1 equ 0FE1h ;# 
   393  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   394                           FSR1L equ 0FE1h ;# 
   395  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   396                           FSR1H equ 0FE2h ;# 
   397  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   398                           PLUSW1 equ 0FE3h ;# 
   399  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   400                           PREINC1 equ 0FE4h ;# 
   401  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   402                           POSTDEC1 equ 0FE5h ;# 
   403  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   404                           POSTINC1 equ 0FE6h ;# 
   405  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   406                           INDF1 equ 0FE7h ;# 
   407  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   408                           WREG equ 0FE8h ;# 
   409  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   410                           FSR0 equ 0FE9h ;# 
   411  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   412                           FSR0L equ 0FE9h ;# 
   413  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   414                           FSR0H equ 0FEAh ;# 
   415  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   416                           PLUSW0 equ 0FEBh ;# 
   417  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   418                           PREINC0 equ 0FECh ;# 
   419  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   420                           POSTDEC0 equ 0FEDh ;# 
   421  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   422                           POSTINC0 equ 0FEEh ;# 
   423  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   424                           INDF0 equ 0FEFh ;# 
   425  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   426                           INTCON3 equ 0FF0h ;# 
   427  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   428                           INTCON2 equ 0FF1h ;# 
   429  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   430                           INTCON equ 0FF2h ;# 
   431  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   432                           PROD equ 0FF3h ;# 
   433  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   434                           PRODL equ 0FF3h ;# 
   435  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   436                           PRODH equ 0FF4h ;# 
   437  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   438                           TABLAT equ 0FF5h ;# 
   439  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   440                           TBLPTR equ 0FF6h ;# 
   441  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   442                           TBLPTRL equ 0FF6h ;# 
   443  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   444                           TBLPTRH equ 0FF7h ;# 
   445  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   446                           TBLPTRU equ 0FF8h ;# 
   447  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   448                           PCLAT equ 0FF9h ;# 
   449  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   450                           PC equ 0FF9h ;# 
   451  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   452                           PCL equ 0FF9h ;# 
   453  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   454                           PCLATH equ 0FFAh ;# 
   455  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   456                           PCLATU equ 0FFBh ;# 
   457  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   458                           STKPTR equ 0FFCh ;# 
   459  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   460                           TOS equ 0FFDh ;# 
   461  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   462                           TOSL equ 0FFDh ;# 
   463  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   464                           TOSH equ 0FFEh ;# 
   465  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   466                           TOSU equ 0FFFh ;# 
   467  0000                     	FNCALL	_main,_calculatePWM
   468                           	FNCALL	_main,_init_ISR
   469                           	FNCALL	_main,_init_PWM
   470                           	FNCALL	_main,_init_QEI
   471                           	FNCALL	_main,_init_TMR1
   472                           	FNCALL	_main,_init_UART
   473                           	FNCALL	_main,_init_VNHIO
   474                           	FNCALL	_main,_int2char
   475                           	FNCALL	_main,_write_PWM
   476                           	FNCALL	_int2char,___lwdiv
   477                           	FNCALL	_int2char,___lwmod
   478                           	FNCALL	_init_PWM,_write_PWM
   479                           	FNCALL	_calculatePWM,___aldiv
   480                           	FNCALL	_calculatePWM,___lldiv
   481                           	FNCALL	_calculatePWM,___lmul
   482                           	FNROOT	_main
   483                           	FNCALL	intlevel2,_ISR_high
   484                           	global	intlevel2
   485                           	FNROOT	intlevel2
   486                           	global	_ref_vel
   487                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   488                           global __pidataCOMRAM
   489                           __pidataCOMRAM:
   490  000934                     	file	"main.c"
   491                           	line	46
   492                           
   493                           ;initializer for _ref_vel
   494                           	dw	(0258h)&0ffffh
   495  000934  0258               	global	_PID
   496                           	global	_aceleracion
   497                           	global	_volt
   498                           	global	_suma_error
   499                           	global	_string_vel
   500                           	global	_error_ant
   501                           	global	_error
   502                           	global	_cursor
   503                           	global	_GPREG
   504                           	global	int2char@string
   505                           	global	_vel
   506                           	global	_PR5
   507                           _PR5	set	0xF90
   508  0000                     	global	_TMR1
   509                           _TMR1	set	0xFCE
   510  0000                     	global	_SPBRG
   511                           _SPBRG	set	0xFAF
   512  0000                     	global	_BAUDCON
   513                           _BAUDCON	set	0xFAA
   514  0000                     	global	_RCSTA
   515                           _RCSTA	set	0xFAB
   516  0000                     	global	_TXSTA
   517                           _TXSTA	set	0xFAC
   518  0000                     	global	_QEICON
   519                           _QEICON	set	0xFB6
   520  0000                     	global	_T5CON
   521                           _T5CON	set	0xFB7
   522  0000                     	global	_CAP1BUFH
   523                           _CAP1BUFH	set	0xF69
   524  0000                     	global	_CAP1BUFL
   525                           _CAP1BUFL	set	0xF68
   526  0000                     	global	_CCPR1L
   527                           _CCPR1L	set	0xFBE
   528  0000                     	global	_CCP1CONbits
   529                           _CCP1CONbits	set	0xFBD
   530  0000                     	global	_PR2
   531                           _PR2	set	0xFCB
   532  0000                     	global	_T2CON
   533                           _T2CON	set	0xFCA
   534  0000                     	global	_CCP1CON
   535                           _CCP1CON	set	0xFBD
   536  0000                     	global	_ANSEL1
   537                           _ANSEL1	set	0xFB9
   538  0000                     	global	_ANSEL0
   539                           _ANSEL0	set	0xFB8
   540  0000                     	global	_T1CON
   541                           _T1CON	set	0xFCD
   542  0000                     	global	_VELRL
   543                           _VELRL	set	0xF68
   544  0000                     	global	_VELRH
   545                           _VELRH	set	0xF69
   546  0000                     	global	_OSCCON
   547                           _OSCCON	set	0xFD3
   548  0000                     	global	_TXREG
   549                           _TXREG	set	0xFAD
   550  0000                     	global	_GIE
   551                           _GIE	set	0x7F97
   552  0000                     	global	_IPEN
   553                           _IPEN	set	0x7E87
   554  0000                     	global	_TXIP
   555                           _TXIP	set	0x7CFC
   556  0000                     	global	_TMR5IP
   557                           _TMR5IP	set	0x7D28
   558  0000                     	global	_TMR1IP
   559                           _TMR1IP	set	0x7CF8
   560  0000                     	global	_TRISC6
   561                           _TRISC6	set	0x7CA6
   562  0000                     	global	_TMR5ON
   563                           _TMR5ON	set	0x7DB8
   564  0000                     	global	_CAP1REN
   565                           _CAP1REN	set	0x7B1E
   566  0000                     	global	_TRISA5
   567                           _TRISA5	set	0x7C95
   568  0000                     	global	_TRISA4
   569                           _TRISA4	set	0x7C94
   570  0000                     	global	_LATC2
   571                           _LATC2	set	0x7C5A
   572  0000                     	global	_TRISC2
   573                           _TRISC2	set	0x7CA2
   574  0000                     	global	_TRISA1
   575                           _TRISA1	set	0x7C91
   576  0000                     	global	_TRISA0
   577                           _TRISA0	set	0x7C90
   578  0000                     	global	_LATA1
   579                           _LATA1	set	0x7C49
   580  0000                     	global	_LATA0
   581                           _LATA0	set	0x7C48
   582  0000                     	global	_TXIF
   583                           _TXIF	set	0x7CF4
   584  0000                     	global	_TXIE
   585                           _TXIE	set	0x7CEC
   586  0000                     	global	_TMR1ON
   587                           _TMR1ON	set	0x7E68
   588  0000                     	global	_TMR1IF
   589                           _TMR1IF	set	0x7CF0
   590  0000                     	global	_TMR1IE
   591                           _TMR1IE	set	0x7CE8
   592  0000                     	global	_TMR5IF
   593                           _TMR5IF	set	0x7D20
   594  0000                     	global	_TMR5IE
   595                           _TMR5IE	set	0x7D18
   596  0000                     ; #config settings
   597                           global __CFG_OSC$RC
   598                           __CFG_OSC$RC equ 0x0
   599  0000                     global __CFG_FCMEN$ON
   600                           __CFG_FCMEN$ON equ 0x0
   601  0000                     global __CFG_IESO$ON
   602                           __CFG_IESO$ON equ 0x0
   603  0000                     global __CFG_PWRTEN$OFF
   604                           __CFG_PWRTEN$OFF equ 0x0
   605  0000                     global __CFG_BOREN$ON
   606                           __CFG_BOREN$ON equ 0x0
   607  0000                     global __CFG_WDTEN$OFF
   608                           __CFG_WDTEN$OFF equ 0x0
   609  0000                     global __CFG_WDPS$32768
   610                           __CFG_WDPS$32768 equ 0x0
   611  0000                     global __CFG_WINEN$OFF
   612                           __CFG_WINEN$OFF equ 0x0
   613  0000                     global __CFG_PWMPIN$OFF
   614                           __CFG_PWMPIN$OFF equ 0x0
   615  0000                     global __CFG_LPOL$HIGH
   616                           __CFG_LPOL$HIGH equ 0x0
   617  0000                     global __CFG_HPOL$HIGH
   618                           __CFG_HPOL$HIGH equ 0x0
   619  0000                     global __CFG_T1OSCMX$ON
   620                           __CFG_T1OSCMX$ON equ 0x0
   621  0000                     global __CFG_FLTAMX$RC1
   622                           __CFG_FLTAMX$RC1 equ 0x0
   623  0000                     global __CFG_SSPMX$RC7
   624                           __CFG_SSPMX$RC7 equ 0x0
   625  0000                     global __CFG_PWM4MX$RB5
   626                           __CFG_PWM4MX$RB5 equ 0x0
   627  0000                     global __CFG_EXCLKMX$RC3
   628                           __CFG_EXCLKMX$RC3 equ 0x0
   629  0000                     global __CFG_MCLRE$ON
   630                           __CFG_MCLRE$ON equ 0x0
   631  0000                     global __CFG_STVREN$ON
   632                           __CFG_STVREN$ON equ 0x0
   633  0000                     global __CFG_LVP$OFF
   634                           __CFG_LVP$OFF equ 0x0
   635  0000                     global __CFG_CP0$OFF
   636                           __CFG_CP0$OFF equ 0x0
   637  0000                     global __CFG_CP1$OFF
   638                           __CFG_CP1$OFF equ 0x0
   639  0000                     global __CFG_CP2$OFF
   640                           __CFG_CP2$OFF equ 0x0
   641  0000                     global __CFG_CP3$OFF
   642                           __CFG_CP3$OFF equ 0x0
   643  0000                     global __CFG_CPB$OFF
   644                           __CFG_CPB$OFF equ 0x0
   645  0000                     global __CFG_CPD$OFF
   646                           __CFG_CPD$OFF equ 0x0
   647  0000                     global __CFG_WRT0$OFF
   648                           __CFG_WRT0$OFF equ 0x0
   649  0000                     global __CFG_WRT1$OFF
   650                           __CFG_WRT1$OFF equ 0x0
   651  0000                     global __CFG_WRT2$OFF
   652                           __CFG_WRT2$OFF equ 0x0
   653  0000                     global __CFG_WRT3$OFF
   654                           __CFG_WRT3$OFF equ 0x0
   655  0000                     global __CFG_WRTC$OFF
   656                           __CFG_WRTC$OFF equ 0x0
   657  0000                     global __CFG_WRTB$OFF
   658                           __CFG_WRTB$OFF equ 0x0
   659  0000                     global __CFG_WRTD$OFF
   660                           __CFG_WRTD$OFF equ 0x0
   661  0000                     global __CFG_EBTR0$OFF
   662                           __CFG_EBTR0$OFF equ 0x0
   663  0000                     global __CFG_EBTR1$OFF
   664                           __CFG_EBTR1$OFF equ 0x0
   665  0000                     global __CFG_EBTR2$OFF
   666                           __CFG_EBTR2$OFF equ 0x0
   667  0000                     global __CFG_EBTR3$OFF
   668                           __CFG_EBTR3$OFF equ 0x0
   669  0000                     global __CFG_EBTRB$OFF
   670                           __CFG_EBTRB$OFF equ 0x0
   671  0000                     	file	"C:\Users\MarioVL\AppData\Local\Temp\s9gc."
   672                           	line	#
   673                           psect	cinit,class=CODE,delta=1,reloc=2
   674                           global __pcinit
   675                           __pcinit:
   676  000854                     global start_initialization
   677                           start_initialization:
   678  000854                     
   679                           global __initialization
   680                           __initialization:
   681  000854                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   682                           global __pbssCOMRAM
   683                           __pbssCOMRAM:
   684  000001                     	global	_PID
   685                           _PID:
   686  000001                            ds      12
   687  000001                     	global	_aceleracion
   688                           _aceleracion:
   689  00000D                            ds      4
   690  00000D                     	global	_volt
   691                           _volt:
   692  000011                            ds      4
   693  000011                     	global	_suma_error
   694                           _suma_error:
   695  000015                            ds      4
   696  000015                     	global	_string_input
   697                           _string_input:
   698  000019                            ds      2
   699  000019                     	global	_string_vel
   700                           _string_vel:
   701  00001B                            ds      2
   702  00001B                     	global	_vel_ant
   703                           	global	_vel_ant
   704                           _vel_ant:
   705  00001D                            ds      2
   706  00001D                     	global	_error_ant
   707                           _error_ant:
   708  00001F                            ds      2
   709  00001F                     	global	_error
   710                           _error:
   711  000021                            ds      2
   712  000021                     	global	_input
   713                           	global	_input
   714                           _input:
   715  000023                            ds      2
   716  000023                     	global	_cursor
   717                           _cursor:
   718  000025                            ds      1
   719  000025                     	global	_vel_rpm
   720                           	global	_vel_rpm
   721                           _vel_rpm:
   722  000026                            ds      1
   723  000026                     	global	_GPREG
   724                           _GPREG:
   725  000027                            ds      1
   726  000027                     int2char@string:
   727  000028                            ds      5
   728  000028                     	global	_vel
   729                           _vel:
   730  00002D                            ds      2
   731  00002D                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   732                           global __pdataCOMRAM
   733                           __pdataCOMRAM:
   734  000059                     	file	"main.c"
   735                           	line	46
   736                           	global	_ref_vel
   737                           _ref_vel:
   738  000059                            ds      2
   739  000059                     	file	"C:\Users\MarioVL\AppData\Local\Temp\s9gc."
   740                           	line	#
   741                           psect	cinit
   742                           ; Initialize objects allocated to COMRAM (2 bytes)
   743                           	global __pidataCOMRAM
   744                           	; load TBLPTR registers with __pidataCOMRAM
   745                           	movlw	low (__pidataCOMRAM)
   746  000854  0E34               	movwf	tblptrl
   747  000856  6EF6               	movlw	high(__pidataCOMRAM)
   748  000858  0E09               	movwf	tblptrh
   749  00085A  6EF7               	movlw	low highword(__pidataCOMRAM)
   750  00085C  0E00               	movwf	tblptru
   751  00085E  6EF8               	tblrd*+ ;fetch initializer
   752  000860  0009               	movff	tablat, __pdataCOMRAM+0		
   753  000862  CFF5 F059          	tblrd*+ ;fetch initializer
   754  000866  0009               	movff	tablat, __pdataCOMRAM+1		
   755  000868  CFF5 F05A          	line	#
   756                           ; Clear objects allocated to COMRAM (46 bytes)
   757                           	global __pbssCOMRAM
   758                           lfsr	0,__pbssCOMRAM
   759  00086C  EE00  F001         movlw	46
   760  000870  0E2E               clear_0:
   761  000872                     clrf	postinc0,c
   762  000872  6AEE               decf	wreg
   763  000874  06E8               bnz	clear_0
   764  000876  E1FD               psect cinit,class=CODE,delta=1
   765                           global end_of_initialization,__end_of__initialization
   766                           
   767                           ;End of C runtime variable initialization code
   768                           
   769                           end_of_initialization:
   770  000878                     __end_of__initialization:
   771  000878                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   772  000878  905B               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   773  00087A  925B               movlb 0
   774  00087C  0100               goto _main	;jump to C main() function
   775  00087E  EF79  F002         psect	cstackBANK0,class=BANK0,space=1,noexec
   776                           global __pcstackBANK0
   777                           __pcstackBANK0:
   778  000060                     ?_write_PWM:	; 1 bytes @ 0x0
   779  000060                     	global	write_PWM@dutyCycle
   780                           write_PWM@dutyCycle:	; 2 bytes @ 0x0
   781  000060                     	ds   2
   782  000060                     ??_write_PWM:	; 1 bytes @ 0x2
   783  000062                     	ds   1
   784  000062                     	global	main@counter
   785                           main@counter:	; 1 bytes @ 0x3
   786  000063                     	ds   1
   787  000063                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   788                           global __pcstackCOMRAM
   789                           __pcstackCOMRAM:
   790  00002F                     ?_init_VNHIO:	; 1 bytes @ 0x0
   791  00002F                     ?_init_TMR1:	; 1 bytes @ 0x0
   792  00002F                     ?_init_PWM:	; 1 bytes @ 0x0
   793  00002F                     ?_init_QEI:	; 1 bytes @ 0x0
   794  00002F                     ?_init_UART:	; 1 bytes @ 0x0
   795  00002F                     ?_init_ISR:	; 1 bytes @ 0x0
   796  00002F                     ?_ISR_high:	; 1 bytes @ 0x0
   797  00002F                     ??_ISR_high:	; 1 bytes @ 0x0
   798  00002F                     ?_main:	; 1 bytes @ 0x0
   799  00002F                     calculatePWM@setpoint:	; 1 bytes @ 0x0
   800  00002F                     	ds   4
   801  00002F                     ??_init_VNHIO:	; 1 bytes @ 0x4
   802  000033                     ??_init_TMR1:	; 1 bytes @ 0x4
   803  000033                     ??_init_QEI:	; 1 bytes @ 0x4
   804  000033                     ??_init_UART:	; 1 bytes @ 0x4
   805  000033                     ??_init_ISR:	; 1 bytes @ 0x4
   806  000033                     	global	?___lwdiv
   807                           ?___lwdiv:	; 2 bytes @ 0x4
   808  000033                     	global	?___lwmod
   809                           ?___lwmod:	; 2 bytes @ 0x4
   810  000033                     	global	?___lmul
   811                           ?___lmul:	; 4 bytes @ 0x4
   812  000033                     	global	?___lldiv
   813                           ?___lldiv:	; 4 bytes @ 0x4
   814  000033                     	global	___lwdiv@dividend
   815                           ___lwdiv@dividend:	; 2 bytes @ 0x4
   816  000033                     	global	___lwmod@dividend
   817                           ___lwmod@dividend:	; 2 bytes @ 0x4
   818  000033                     	global	___lmul@multiplier
   819                           ___lmul@multiplier:	; 4 bytes @ 0x4
   820  000033                     	global	___lldiv@dividend
   821                           ___lldiv@dividend:	; 4 bytes @ 0x4
   822  000033                     	ds   2
   823  000033                     	global	___lwdiv@divisor
   824                           ___lwdiv@divisor:	; 2 bytes @ 0x6
   825  000035                     	global	___lwmod@divisor
   826                           ___lwmod@divisor:	; 2 bytes @ 0x6
   827  000035                     	ds   2
   828  000035                     ??___lwdiv:	; 1 bytes @ 0x8
   829  000037                     ??___lwmod:	; 1 bytes @ 0x8
   830  000037                     	global	___lwdiv@counter
   831                           ___lwdiv@counter:	; 1 bytes @ 0x8
   832  000037                     	global	___lwmod@counter
   833                           ___lwmod@counter:	; 1 bytes @ 0x8
   834  000037                     	global	___lmul@multiplicand
   835                           ___lmul@multiplicand:	; 4 bytes @ 0x8
   836  000037                     	global	___lldiv@divisor
   837                           ___lldiv@divisor:	; 4 bytes @ 0x8
   838  000037                     	ds   1
   839  000037                     	global	___lwdiv@quotient
   840                           ___lwdiv@quotient:	; 2 bytes @ 0x9
   841  000038                     	ds   2
   842  000038                     	global	?_int2char
   843                           ?_int2char:	; 2 bytes @ 0xB
   844  00003A                     	global	int2char@number
   845                           int2char@number:	; 2 bytes @ 0xB
   846  00003A                     	ds   1
   847  00003A                     ??___lmul:	; 1 bytes @ 0xC
   848  00003B                     ??___lldiv:	; 1 bytes @ 0xC
   849  00003B                     	global	___lmul@product
   850                           ___lmul@product:	; 4 bytes @ 0xC
   851  00003B                     	global	___lldiv@quotient
   852                           ___lldiv@quotient:	; 4 bytes @ 0xC
   853  00003B                     	ds   1
   854  00003B                     ??_int2char:	; 1 bytes @ 0xD
   855  00003C                     	global	int2char@num
   856                           int2char@num:	; 2 bytes @ 0xD
   857  00003C                     	ds   2
   858  00003C                     	global	int2char@digit
   859                           int2char@digit:	; 1 bytes @ 0xF
   860  00003E                     	ds   1
   861  00003E                     	global	?___aldiv
   862                           ?___aldiv:	; 4 bytes @ 0x10
   863  00003F                     	global	___lldiv@counter
   864                           ___lldiv@counter:	; 1 bytes @ 0x10
   865  00003F                     	global	___aldiv@dividend
   866                           ___aldiv@dividend:	; 4 bytes @ 0x10
   867  00003F                     	ds   4
   868  00003F                     	global	___aldiv@divisor
   869                           ___aldiv@divisor:	; 4 bytes @ 0x14
   870  000043                     	ds   4
   871  000043                     ??___aldiv:	; 1 bytes @ 0x18
   872  000047                     	global	___aldiv@counter
   873                           ___aldiv@counter:	; 1 bytes @ 0x18
   874  000047                     	ds   1
   875  000047                     	global	___aldiv@sign
   876                           ___aldiv@sign:	; 1 bytes @ 0x19
   877  000048                     	ds   1
   878  000048                     	global	___aldiv@quotient
   879                           ___aldiv@quotient:	; 4 bytes @ 0x1A
   880  000049                     	ds   4
   881  000049                     	global	?_calculatePWM
   882                           ?_calculatePWM:	; 4 bytes @ 0x1E
   883  00004D                     	ds   4
   884  00004D                     ??_calculatePWM:	; 1 bytes @ 0x22
   885  000051                     	ds   8
   886  000051                     ??_init_PWM:	; 1 bytes @ 0x2A
   887  000059                     ??_main:	; 1 bytes @ 0x2A
   888  000059                     ;!
   889                           ;!Data Sizes:
   890                           ;!    Strings     0
   891                           ;!    Constant    0
   892                           ;!    Data        2
   893                           ;!    BSS         46
   894                           ;!    Persistent  0
   895                           ;!    Stack       0
   896                           ;!
   897                           ;!Auto Spaces:
   898                           ;!    Space          Size  Autos    Used
   899                           ;!    COMRAM           94     42      90
   900                           ;!    BANK0           160      4       4
   901                           ;!    BANK1           256      0       0
   902                           ;!    BANK2           256      0       0
   903                           
   904                           ;!
   905                           ;!Pointer List with Targets:
   906                           ;!
   907                           ;!    string_input	PTR unsigned char  size(2) Largest target is 0
   908                           ;!		 -> NULL(NULL[0]), 
   909                           ;!
   910                           ;!    sp__int2char	PTR unsigned char  size(2) Largest target is 5
   911                           ;!		 -> int2char@string(COMRAM[5]), 
   912                           ;!
   913                           ;!    string_vel	PTR unsigned char  size(2) Largest target is 5
   914                           ;!		 -> NULL(NULL[0]), int2char@string(COMRAM[5]), 
   915                           ;!
   916                           
   917                           
   918                           ;!
   919                           ;!Critical Paths under _main in COMRAM
   920                           ;!
   921                           ;!    _main->_calculatePWM
   922                           ;!    _int2char->___lwdiv
   923                           ;!    _write_PWM->_calculatePWM
   924                           ;!    _calculatePWM->___aldiv
   925                           ;!    ___aldiv->___lmul
   926                           ;!
   927                           ;!Critical Paths under _ISR_high in COMRAM
   928                           ;!
   929                           ;!    None.
   930                           ;!
   931                           ;!Critical Paths under _main in BANK0
   932                           ;!
   933                           ;!    _main->_write_PWM
   934                           ;!    _init_PWM->_write_PWM
   935                           ;!
   936                           ;!Critical Paths under _ISR_high in BANK0
   937                           ;!
   938                           ;!    None.
   939                           ;!
   940                           ;!Critical Paths under _main in BANK1
   941                           ;!
   942                           ;!    None.
   943                           ;!
   944                           ;!Critical Paths under _ISR_high in BANK1
   945                           ;!
   946                           ;!    None.
   947                           ;!
   948                           ;!Critical Paths under _main in BANK2
   949                           ;!
   950                           ;!    None.
   951                           ;!
   952                           ;!Critical Paths under _ISR_high in BANK2
   953                           ;!
   954                           ;!    None.
   955                           
   956 ;;
   957 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   958 ;;
   959                           
   960                           ;!
   961                           ;!Call Graph Tables:
   962                           ;!
   963                           ;! ---------------------------------------------------------------------------------
   964                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   965                           ;! ---------------------------------------------------------------------------------
   966                           ;! (0) _main                                                 1     1      0    4345
   967                           ;!                                              3 BANK0      1     1      0
   968                           ;!                       _calculatePWM
   969                           ;!                           _init_ISR
   970                           ;!                           _init_PWM
   971                           ;!                           _init_QEI
   972                           ;!                          _init_TMR1
   973                           ;!                          _init_UART
   974                           ;!                         _init_VNHIO
   975                           ;!                           _int2char
   976                           ;!                          _write_PWM
   977                           ;! ---------------------------------------------------------------------------------
   978                           ;! (1) _int2char                                             5     3      2    1090
   979                           ;!                                             11 COMRAM     5     3      2
   980                           ;!                            ___lwdiv
   981                           ;!                            ___lwmod
   982                           ;! ---------------------------------------------------------------------------------
   983                           ;! (2) ___lwmod                                              5     1      4     412
   984                           ;!                                              4 COMRAM     5     1      4
   985                           ;! ---------------------------------------------------------------------------------
   986                           ;! (2) ___lwdiv                                              7     3      4     421
   987                           ;!                                              4 COMRAM     7     3      4
   988                           ;! ---------------------------------------------------------------------------------
   989                           ;! (1) _init_VNHIO                                           0     0      0       0
   990                           ;! ---------------------------------------------------------------------------------
   991                           ;! (1) _init_UART                                            0     0      0       0
   992                           ;! ---------------------------------------------------------------------------------
   993                           ;! (1) _init_TMR1                                            0     0      0       0
   994                           ;! ---------------------------------------------------------------------------------
   995                           ;! (1) _init_QEI                                             0     0      0       0
   996                           ;! ---------------------------------------------------------------------------------
   997                           ;! (1) _init_PWM                                             0     0      0     245
   998                           ;!                          _write_PWM
   999                           ;! ---------------------------------------------------------------------------------
  1000                           ;! (1) _write_PWM                                            3     1      2     245
  1001                           ;!                                              0 BANK0      3     1      2
  1002                           ;!                       _calculatePWM (ARG)
  1003                           ;! ---------------------------------------------------------------------------------
  1004                           ;! (1) _init_ISR                                             0     0      0       0
  1005                           ;! ---------------------------------------------------------------------------------
  1006                           ;! (1) _calculatePWM                                        13     9      4    2762
  1007                           ;!                                             30 COMRAM    12     8      4
  1008                           ;!                            ___aldiv
  1009                           ;!                            ___lldiv
  1010                           ;!                             ___lmul
  1011                           ;! ---------------------------------------------------------------------------------
  1012                           ;! (2) ___lmul                                              12     4      8    1356
  1013                           ;!                                              4 COMRAM    12     4      8
  1014                           ;! ---------------------------------------------------------------------------------
  1015                           ;! (2) ___lldiv                                             13     5      8     421
  1016                           ;!                                              4 COMRAM    13     5      8
  1017                           ;! ---------------------------------------------------------------------------------
  1018                           ;! (2) ___aldiv                                             14     6      8     985
  1019                           ;!                                             16 COMRAM    14     6      8
  1020                           ;!                             ___lmul (ARG)
  1021                           ;! ---------------------------------------------------------------------------------
  1022                           ;! Estimated maximum stack depth 2
  1023                           ;! ---------------------------------------------------------------------------------
  1024                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1025                           ;! ---------------------------------------------------------------------------------
  1026                           ;! (3) _ISR_high                                             4     4      0       0
  1027                           ;!                                              0 COMRAM     4     4      0
  1028                           ;! ---------------------------------------------------------------------------------
  1029                           ;! Estimated maximum stack depth 3
  1030                           ;! ---------------------------------------------------------------------------------
  1031                           ;!
  1032                           ;! Call Graph Graphs:
  1033                           ;!
  1034                           ;! _main (ROOT)
  1035                           ;!   _calculatePWM
  1036                           ;!     ___aldiv
  1037                           ;!       ___lmul (ARG)
  1038                           ;!     ___lldiv
  1039                           ;!     ___lmul
  1040                           ;!   _init_ISR
  1041                           ;!   _init_PWM
  1042                           ;!     _write_PWM
  1043                           ;!       _calculatePWM (ARG)
  1044                           ;!         ___aldiv
  1045                           ;!           ___lmul (ARG)
  1046                           ;!         ___lldiv
  1047                           ;!         ___lmul
  1048                           ;!   _init_QEI
  1049                           ;!   _init_TMR1
  1050                           ;!   _init_UART
  1051                           ;!   _init_VNHIO
  1052                           ;!   _int2char
  1053                           ;!     ___lwdiv
  1054                           ;!     ___lwmod
  1055                           ;!   _write_PWM
  1056                           ;!     _calculatePWM (ARG)
  1057                           ;!       ___aldiv
  1058                           ;!         ___lmul (ARG)
  1059                           ;!       ___lldiv
  1060                           ;!       ___lmul
  1061                           ;!
  1062                           ;! _ISR_high (ROOT)
  1063                           ;!
  1064                           
  1065                           ;! Address spaces:
  1066                           
  1067                           ;!Name               Size   Autos  Total    Cost      Usage
  1068                           ;!BIGRAM             2FF      0       0      10        0.0%
  1069                           ;!EEDATA             100      0       0       0        0.0%
  1070                           ;!BITBANK2           100      0       0       8        0.0%
  1071                           ;!BANK2              100      0       0       9        0.0%
  1072                           ;!BITBANK1           100      0       0       6        0.0%
  1073                           ;!BANK1              100      0       0       7        0.0%
  1074                           ;!BITBANK0            A0      0       0       4        0.0%
  1075                           ;!BANK0               A0      4       4       5        2.5%
  1076                           ;!BITCOMRAM           5E      0       0       0        0.0%
  1077                           ;!COMRAM              5E     2A      5A       1       95.7%
  1078                           ;!BITSFR               0      0       0     200        0.0%
  1079                           ;!SFR                  0      0       0     200        0.0%
  1080                           ;!STACK                0      0       0       2        0.0%
  1081                           ;!NULL                 0      0       0       0        0.0%
  1082                           ;!ABS                  0      0      5E       3        0.0%
  1083                           ;!DATA                 0      0      5E      11        0.0%
  1084                           ;!CODE                 0      0       0       0        0.0%
  1085                           
  1086                           	global	_main
  1087                           
  1088 ;; *************** function _main *****************
  1089 ;; Defined at:
  1090 ;;		line 96 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  counter         1    3[BANK0 ] unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1104 ;;      Params:         0       0       0       0
  1105 ;;      Locals:         0       1       0       0
  1106 ;;      Temps:          0       0       0       0
  1107 ;;      Totals:         0       1       0       0
  1108 ;;Total ram usage:        1 bytes
  1109 ;; Hardware stack levels required when called:    3
  1110 ;; This function calls:
  1111 ;;		_calculatePWM
  1112 ;;		_init_ISR
  1113 ;;		_init_PWM
  1114 ;;		_init_QEI
  1115 ;;		_init_TMR1
  1116 ;;		_init_UART
  1117 ;;		_init_VNHIO
  1118 ;;		_int2char
  1119 ;;		_write_PWM
  1120 ;; This function is called by:
  1121 ;;		Startup code after reset
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1125                           	file	"main.c"
  1126                           	line	96
  1127                           global __ptext0
  1128                           __ptext0:
  1129  0004F2                     psect	text0
  1130                           	file	"main.c"
  1131                           	line	96
  1132                           	global	__size_of_main
  1133                           	__size_of_main	equ	__end_of_main-_main
  1134  0000                     	
  1135                           _main:
  1136  0004F2                     ;incstack = 0
  1137                           	opt	stack 28
  1138                           	line	98
  1139                           	
  1140                           l1580:
  1141  0004F2                     ;main.c: 98:     OSCCON = 0x70;
  1142                           	movlw	low(070h)
  1143  0004F2  0E70               	movwf	((c:4051)),c	;volatile
  1144  0004F4  6ED3               	line	100
  1145                           ;main.c: 100:     PID.Kp = 48087;
  1146                           	movlw	low(0BBD7h)
  1147  0004F6  0ED7               	movwf	((c:_PID)),c
  1148  0004F8  6E01               	movlw	high(0BBD7h)
  1149  0004FA  0EBB               	movwf	((c:_PID+1)),c
  1150  0004FC  6E02               	movlw	low highword(0BBD7h)
  1151  0004FE  0E00               	movwf	((c:_PID+2)),c
  1152  000500  6E03               	movlw	high highword(0BBD7h)
  1153  000502  0E00               	movwf	((c:_PID+3)),c
  1154  000504  6E04               	line	101
  1155                           ;main.c: 101:     PID.Ki = 64120;
  1156                           	movlw	low(0FA78h)
  1157  000506  0E78               	movwf	(0+((c:_PID)+04h)),c
  1158  000508  6E05               	movlw	high(0FA78h)
  1159  00050A  0EFA               	movwf	(1+((c:_PID)+04h)),c
  1160  00050C  6E06               	movlw	low highword(0FA78h)
  1161  00050E  0E00               	movwf	(2+((c:_PID)+04h)),c
  1162  000510  6E07               	movlw	high highword(0FA78h)
  1163  000512  0E00               	movwf	(3+((c:_PID)+04h)),c
  1164  000514  6E08               	line	102
  1165                           ;main.c: 102:     PID.Kd = 90;
  1166                           	movlw	low(05Ah)
  1167  000516  0E5A               	movwf	(0+((c:_PID)+08h)),c
  1168  000518  6E09               	movlw	high(05Ah)
  1169  00051A  0E00               	movwf	(1+((c:_PID)+08h)),c
  1170  00051C  6E0A               	movlw	low highword(05Ah)
  1171  00051E  0E00               	movwf	(2+((c:_PID)+08h)),c
  1172  000520  6E0B               	movlw	high highword(05Ah)
  1173  000522  0E00               	movwf	(3+((c:_PID)+08h)),c
  1174  000524  6E0C               	line	104
  1175                           	
  1176                           l1582:
  1177  000526                     ;main.c: 104:     init_VNHIO();
  1178                           	call	_init_VNHIO	;wreg free
  1179  000526  EC8A  F004         	line	105
  1180                           	
  1181                           l1584:
  1182  00052A                     ;main.c: 105:     init_TMR1();
  1183                           	call	_init_TMR1	;wreg free
  1184  00052A  EC93  F004         	line	106
  1185                           	
  1186                           l1586:
  1187  00052E                     ;main.c: 106:     init_PWM();
  1188                           	call	_init_PWM	;wreg free
  1189  00052E  EC64  F004         	line	107
  1190                           	
  1191                           l1588:
  1192  000532                     ;main.c: 107:     init_QEI();
  1193                           	call	_init_QEI	;wreg free
  1194  000532  EC55  F004         	line	108
  1195                           	
  1196                           l1590:
  1197  000536                     ;main.c: 108:     init_UART();
  1198                           	call	_init_UART	;wreg free
  1199  000536  EC7F  F004         	line	109
  1200                           	
  1201                           l1592:
  1202  00053A                     ;main.c: 109:     init_ISR();
  1203                           	call	_init_ISR	;wreg free
  1204  00053A  EC73  F004         	line	110
  1205                           	
  1206                           l1594:
  1207  00053E                     ;main.c: 110:     GPREG.DIRCTRL = 1;
  1208                           	bsf	((c:_GPREG)),c,0
  1209  00053E  8027               	line	112
  1210                           	
  1211                           l1596:
  1212  000540                     ;main.c: 112:     uint8_t counter = 0;
  1213                           	movlw	low(0)
  1214  000540  0E00               	movlb	0	; () banked
  1215  000542  0100               	movwf	((main@counter))&0ffh
  1216  000544  6F63               	goto	l1598
  1217  000546  EFA5  F002         	line	114
  1218                           ;main.c: 114:     while(1)
  1219                           	
  1220                           l154:; BSR set to: 0
  1221  00054A                     
  1222                           	line	116
  1223                           	
  1224                           l1598:
  1225  00054A                     ;main.c: 115:     {;main.c: 116:         if(1 == GPREG.STCTRL)
  1226                           	btfss	((c:_GPREG)),c,1
  1227  00054A  A227               	goto	u761
  1228  00054C  EFAA  F002         	goto	u760
  1229  000550  EFAC  F002         u761:
  1230  000554                     	goto	l1598
  1231  000554  EFA5  F002         u760:
  1232  000558                     	line	124
  1233                           	
  1234                           l1600:
  1235  000558                     ;main.c: 117:         {;main.c: 124:             write_PWM(calculatePWM(ref_vel));
  1236                           	movf	((c:_ref_vel)),c,w
  1237  000558  5059               	
  1238                           	call	_calculatePWM
  1239  00055A  EC75  F000         	movff	0+?_calculatePWM,(write_PWM@dutyCycle)
  1240  00055E  C04D  F060         	movff	1+?_calculatePWM,(write_PWM@dutyCycle+1)
  1241  000562  C04E  F061         	call	_write_PWM	;wreg free
  1242  000566  EC41  F004         	line	129
  1243                           	
  1244                           l1602:
  1245  00056A                     ;main.c: 129:             string_vel = int2char(vel);
  1246                           	movff	(c:_vel),(c:int2char@number)
  1247  00056A  C02D  F03A         	movff	(c:_vel+1),(c:int2char@number+1)
  1248  00056E  C02E  F03B         	call	_int2char	;wreg free
  1249  000572  EC77  F003         	movff	0+?_int2char,(c:_string_vel)
  1250  000576  C03A  F01B         	movff	1+?_int2char,(c:_string_vel+1)
  1251  00057A  C03B  F01C         	line	131
  1252                           	
  1253                           l1604:
  1254  00057E                     ;main.c: 131:             TXIE = 1;
  1255                           	bsf	c:(31980/8),(31980)&7	;volatile
  1256  00057E  889D               	line	133
  1257                           	
  1258                           l1606:
  1259  000580                     ;main.c: 133:             if(1 == GPREG.DIRCTRL)
  1260                           	btfss	((c:_GPREG)),c,0
  1261  000580  A027               	goto	u771
  1262  000582  EFC5  F002         	goto	u770
  1263  000586  EFC7  F002         u771:
  1264  00058A                     	goto	l156
  1265  00058A  EFCB  F002         u770:
  1266  00058E                     	line	136
  1267                           	
  1268                           l1608:
  1269  00058E                     ;main.c: 134:             {;main.c: 136:                 LATA0 = 0;
  1270                           	bcf	c:(31816/8),(31816)&7	;volatile
  1271  00058E  9089               	line	137
  1272                           ;main.c: 137:                 LATA1 = 1;
  1273                           	bsf	c:(31817/8),(31817)&7	;volatile
  1274  000590  8289               	line	138
  1275                           ;main.c: 138:             } else {
  1276                           	goto	l157
  1277  000592  EFCD  F002         	
  1278                           l156:
  1279  000596                     	line	140
  1280                           ;main.c: 140:                 LATA0 = 1;
  1281                           	bsf	c:(31816/8),(31816)&7	;volatile
  1282  000596  8089               	line	141
  1283                           ;main.c: 141:                 LATA1 = 0;
  1284                           	bcf	c:(31817/8),(31817)&7	;volatile
  1285  000598  9289               	line	142
  1286                           ;main.c: 142:             }
  1287                           	
  1288                           l157:
  1289  00059A                     	line	144
  1290                           ;main.c: 144:             GPREG.STCTRL = 0;
  1291                           	bcf	((c:_GPREG)),c,1
  1292  00059A  9227               	line	145
  1293                           ;main.c: 145:             TMR1ON = 1;
  1294                           	bsf	c:(32360/8),(32360)&7	;volatile
  1295  00059C  80CD               	goto	l1598
  1296  00059E  EFA5  F002         	line	146
  1297                           ;main.c: 146:         }
  1298                           	
  1299                           l155:
  1300  0005A2                     	goto	l1598
  1301  0005A2  EFA5  F002         	line	147
  1302                           ;main.c: 147:     }
  1303                           	
  1304                           l158:
  1305  0005A6                     	goto	l1598
  1306  0005A6  EFA5  F002         	
  1307                           l159:
  1308  0005AA                     	line	149
  1309                           	
  1310                           l160:
  1311  0005AA                     	global	start
  1312                           	goto	start
  1313  0005AA  EF73  F000         	opt stack 0
  1314                           GLOBAL	__end_of_main
  1315                           	__end_of_main:
  1316  0005AE                     	signat	_main,89
  1317                           	global	_int2char
  1318                           
  1319 ;; *************** function _int2char *****************
  1320 ;; Defined at:
  1321 ;;		line 274 in file "main.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  number          2   11[COMRAM] unsigned int 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  digit           1   15[COMRAM] char 
  1326 ;;  num             2   13[COMRAM] unsigned int 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  2   11[COMRAM] PTR unsigned char 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1336 ;;      Params:         2       0       0       0
  1337 ;;      Locals:         3       0       0       0
  1338 ;;      Temps:          0       0       0       0
  1339 ;;      Totals:         5       0       0       0
  1340 ;;Total ram usage:        5 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    2
  1343 ;; This function calls:
  1344 ;;		___lwdiv
  1345 ;;		___lwmod
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1351                           	line	274
  1352                           global __ptext1
  1353                           __ptext1:
  1354  0006EE                     psect	text1
  1355                           	file	"main.c"
  1356                           	line	274
  1357                           	global	__size_of_int2char
  1358                           	__size_of_int2char	equ	__end_of_int2char-_int2char
  1359  0000                     	
  1360                           _int2char:
  1361  0006EE                     ;incstack = 0
  1362                           	opt	stack 28
  1363                           	line	277
  1364                           	
  1365                           l1564:
  1366  0006EE                     ;main.c: 274: uint8_t * int2char(uint16_t number);main.c: 275: {;main.c: 276:     static
                                  uint8_t string[5];;main.c: 277:     uint16_t num = number;
  1367                           	movff	(c:int2char@number),(c:int2char@num)
  1368  0006EE  C03A  F03C         	movff	(c:int2char@number+1),(c:int2char@num+1)
  1369  0006F2  C03B  F03D         	line	279
  1370                           	
  1371                           l1566:
  1372  0006F6                     ;main.c: 279:     for(int8_t digit = 4; 0 <= digit; digit--)
  1373                           	movlw	low(04h)
  1374  0006F6  0E04               	movwf	((c:int2char@digit)),c
  1375  0006F8  6E3E               	goto	l1574
  1376  0006FA  EFA5  F003         	
  1377                           l194:
  1378  0006FE                     	line	281
  1379                           	
  1380                           l1568:
  1381  0006FE                     ;main.c: 280:     {;main.c: 281:         string[digit] = 0x30 + num%10;
  1382                           	movf	((c:int2char@digit)),c,w
  1383  0006FE  503E               	mullw	01h
  1384  000700  0D01               	movlw	low(int2char@string)
  1385  000702  0E28               	addwf	(prodl),c,w
  1386  000704  24F3               	movwf	c:fsr2l
  1387  000706  6ED9               	movlw	high(int2char@string)
  1388  000708  0E00               	addwfc	prod+1,w
  1389  00070A  20F4               	movwf	1+c:fsr2l
  1390  00070C  6EDA               	movff	(c:int2char@num),(c:___lwmod@dividend)
  1391  00070E  C03C  F033         	movff	(c:int2char@num+1),(c:___lwmod@dividend+1)
  1392  000712  C03D  F034         	movlw	high(0Ah)
  1393  000716  0E00               	movwf	((c:___lwmod@divisor+1)),c
  1394  000718  6E36               	movlw	low(0Ah)
  1395  00071A  0E0A               	movwf	((c:___lwmod@divisor)),c
  1396  00071C  6E35               	call	___lwmod	;wreg free
  1397  00071E  ECB5  F003         	movf	(0+?___lwmod),c,w
  1398  000722  5033               	addlw	low(030h)
  1399  000724  0F30               	movwf	indf2,c
  1400  000726  6EDF               
  1401                           	line	282
  1402                           	
  1403                           l1570:
  1404  000728                     ;main.c: 282:         num = num/10;
  1405                           	movff	(c:int2char@num),(c:___lwdiv@dividend)
  1406  000728  C03C  F033         	movff	(c:int2char@num+1),(c:___lwdiv@dividend+1)
  1407  00072C  C03D  F034         	movlw	high(0Ah)
  1408  000730  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  1409  000732  6E36               	movlw	low(0Ah)
  1410  000734  0E0A               	movwf	((c:___lwdiv@divisor)),c
  1411  000736  6E35               	call	___lwdiv	;wreg free
  1412  000738  EC33  F003         	movff	0+?___lwdiv,(c:int2char@num)
  1413  00073C  C033  F03C         	movff	1+?___lwdiv,(c:int2char@num+1)
  1414  000740  C034  F03D         	line	283
  1415                           	
  1416                           l1572:
  1417  000744                     ;main.c: 283:     }
  1418                           	decf	((c:int2char@digit)),c
  1419  000744  063E               	goto	l1574
  1420  000746  EFA5  F003         	
  1421                           l193:
  1422  00074A                     	
  1423                           l1574:
  1424  00074A                     	btfsc	((c:int2char@digit)),c,7
  1425  00074A  BE3E               	goto	u750
  1426  00074C  EFAC  F003         	goto	u751
  1427  000750  EFAA  F003         
  1428                           u751:
  1429  000754                     	goto	l1568
  1430  000754  EF7F  F003         u750:
  1431  000758                     	goto	l1576
  1432  000758  EFAE  F003         	
  1433                           l195:
  1434  00075C                     	line	285
  1435                           	
  1436                           l1576:
  1437  00075C                     ;main.c: 285:     return string;
  1438                           		movlw	low(int2char@string)
  1439  00075C  0E28               	movwf	((c:?_int2char)),c
  1440  00075E  6E3A               	movlw	high(int2char@string)
  1441  000760  0E00               	movwf	((c:?_int2char+1)),c
  1442  000762  6E3B               
  1443                           	goto	l196
  1444  000764  EFB4  F003         	
  1445                           l1578:
  1446  000768                     	line	286
  1447                           	
  1448                           l196:
  1449  000768                     	return	;funcret
  1450  000768  0012               	opt stack 0
  1451                           GLOBAL	__end_of_int2char
  1452                           	__end_of_int2char:
  1453  00076A                     	signat	_int2char,4218
  1454                           	global	___lwmod
  1455                           
  1456 ;; *************** function ___lwmod *****************
  1457 ;; Defined at:
  1458 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  dividend        2    4[COMRAM] unsigned int 
  1461 ;;  divisor         2    6[COMRAM] unsigned int 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  counter         1    8[COMRAM] unsigned char 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  2    4[COMRAM] unsigned int 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1473 ;;      Params:         4       0       0       0
  1474 ;;      Locals:         1       0       0       0
  1475 ;;      Temps:          0       0       0       0
  1476 ;;      Totals:         5       0       0       0
  1477 ;;Total ram usage:        5 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    1
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_int2char
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           psect	text2,class=CODE,space=0,reloc=2,group=1
  1487                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1488                           	line	7
  1489                           global __ptext2
  1490                           __ptext2:
  1491  00076A                     psect	text2
  1492                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1493                           	line	7
  1494                           	global	__size_of___lwmod
  1495                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1496  0000                     	
  1497                           ___lwmod:
  1498  00076A                     ;incstack = 0
  1499                           	opt	stack 28
  1500                           	line	12
  1501                           	
  1502                           l1468:
  1503  00076A                     	movf	((c:___lwmod@divisor)),c,w
  1504  00076A  5035               iorwf	((c:___lwmod@divisor+1)),c,w
  1505  00076C  1036               	btfsc	status,2
  1506  00076E  B4D8               	goto	u691
  1507  000770  EFBC  F003         	goto	u690
  1508  000774  EFBE  F003         
  1509                           u691:
  1510  000778                     	goto	l700
  1511  000778  EFEC  F003         u690:
  1512  00077C                     	line	13
  1513                           	
  1514                           l1470:
  1515  00077C                     	movlw	low(01h)
  1516  00077C  0E01               	movwf	((c:___lwmod@counter)),c
  1517  00077E  6E37               	line	14
  1518                           	goto	l1474
  1519  000780  EFC8  F003         	
  1520                           l702:
  1521  000784                     	line	15
  1522                           	
  1523                           l1472:
  1524  000784                     	bcf	status,0
  1525  000784  90D8               	rlcf	((c:___lwmod@divisor)),c
  1526  000786  3635               	rlcf	((c:___lwmod@divisor+1)),c
  1527  000788  3636               	line	16
  1528                           	incf	((c:___lwmod@counter)),c
  1529  00078A  2A37               	goto	l1474
  1530  00078C  EFC8  F003         	line	17
  1531                           	
  1532                           l701:
  1533  000790                     	line	14
  1534                           	
  1535                           l1474:
  1536  000790                     	
  1537                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  1538  000790  AE36               	goto	u701
  1539  000792  EFCD  F003         	goto	u700
  1540  000796  EFCF  F003         u701:
  1541  00079A                     	goto	l1472
  1542  00079A  EFC2  F003         u700:
  1543  00079E                     	goto	l1476
  1544  00079E  EFD3  F003         	
  1545                           l703:
  1546  0007A2                     	goto	l1476
  1547  0007A2  EFD3  F003         	line	18
  1548                           	
  1549                           l704:
  1550  0007A6                     	line	19
  1551                           	
  1552                           l1476:
  1553  0007A6                     		movf	((c:___lwmod@divisor)),c,w
  1554  0007A6  5035               	subwf	((c:___lwmod@dividend)),c,w
  1555  0007A8  5C33               	movf	((c:___lwmod@divisor+1)),c,w
  1556  0007AA  5036               	subwfb	((c:___lwmod@dividend+1)),c,w
  1557  0007AC  5834               	btfss	status,0
  1558  0007AE  A0D8               	goto	u711
  1559  0007B0  EFDC  F003         	goto	u710
  1560  0007B4  EFDE  F003         
  1561                           u711:
  1562  0007B8                     	goto	l1480
  1563  0007B8  EFE4  F003         u710:
  1564  0007BC                     	line	20
  1565                           	
  1566                           l1478:
  1567  0007BC                     	movf	((c:___lwmod@divisor)),c,w
  1568  0007BC  5035               	subwf	((c:___lwmod@dividend)),c
  1569  0007BE  5E33               	movf	((c:___lwmod@divisor+1)),c,w
  1570  0007C0  5036               	subwfb	((c:___lwmod@dividend+1)),c
  1571  0007C2  5A34               
  1572                           	goto	l1480
  1573  0007C4  EFE4  F003         	
  1574                           l705:
  1575  0007C8                     	line	21
  1576                           	
  1577                           l1480:
  1578  0007C8                     	bcf	status,0
  1579  0007C8  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  1580  0007CA  3236               	rrcf	((c:___lwmod@divisor)),c
  1581  0007CC  3235               	line	22
  1582                           	
  1583                           l1482:
  1584  0007CE                     	decfsz	((c:___lwmod@counter)),c
  1585  0007CE  2E37               	
  1586                           	goto	l1476
  1587  0007D0  EFD3  F003         	goto	l700
  1588  0007D4  EFEC  F003         	
  1589                           l706:
  1590  0007D8                     	line	23
  1591                           	
  1592                           l700:
  1593  0007D8                     	line	24
  1594                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  1595  0007D8  C033  F033         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  1596  0007DC  C034  F034         	line	25
  1597                           	
  1598                           l707:
  1599  0007E0                     	return	;funcret
  1600  0007E0  0012               	opt stack 0
  1601                           GLOBAL	__end_of___lwmod
  1602                           	__end_of___lwmod:
  1603  0007E2                     	signat	___lwmod,8314
  1604                           	global	___lwdiv
  1605                           
  1606 ;; *************** function ___lwdiv *****************
  1607 ;; Defined at:
  1608 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  dividend        2    4[COMRAM] unsigned int 
  1611 ;;  divisor         2    6[COMRAM] unsigned int 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  quotient        2    9[COMRAM] unsigned int 
  1614 ;;  counter         1    8[COMRAM] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  2    4[COMRAM] unsigned int 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1624 ;;      Params:         4       0       0       0
  1625 ;;      Locals:         3       0       0       0
  1626 ;;      Temps:          0       0       0       0
  1627 ;;      Totals:         7       0       0       0
  1628 ;;Total ram usage:        7 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_int2char
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           psect	text3,class=CODE,space=0,reloc=2,group=1
  1638                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1639                           	line	7
  1640                           global __ptext3
  1641                           __ptext3:
  1642  000666                     psect	text3
  1643                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1644                           	line	7
  1645                           	global	__size_of___lwdiv
  1646                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1647  0000                     	
  1648                           ___lwdiv:
  1649  000666                     ;incstack = 0
  1650                           	opt	stack 28
  1651                           	line	13
  1652                           	
  1653                           l1446:
  1654  000666                     	movlw	high(0)
  1655  000666  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  1656  000668  6E39               	movlw	low(0)
  1657  00066A  0E00               	movwf	((c:___lwdiv@quotient)),c
  1658  00066C  6E38               	line	14
  1659                           	
  1660                           l1448:
  1661  00066E                     	movf	((c:___lwdiv@divisor)),c,w
  1662  00066E  5035               iorwf	((c:___lwdiv@divisor+1)),c,w
  1663  000670  1036               	btfsc	status,2
  1664  000672  B4D8               	goto	u661
  1665  000674  EF3E  F003         	goto	u660
  1666  000678  EF40  F003         
  1667                           u661:
  1668  00067C                     	goto	l690
  1669  00067C  EF72  F003         u660:
  1670  000680                     	line	15
  1671                           	
  1672                           l1450:
  1673  000680                     	movlw	low(01h)
  1674  000680  0E01               	movwf	((c:___lwdiv@counter)),c
  1675  000682  6E37               	line	16
  1676                           	goto	l1454
  1677  000684  EF4A  F003         	
  1678                           l692:
  1679  000688                     	line	17
  1680                           	
  1681                           l1452:
  1682  000688                     	bcf	status,0
  1683  000688  90D8               	rlcf	((c:___lwdiv@divisor)),c
  1684  00068A  3635               	rlcf	((c:___lwdiv@divisor+1)),c
  1685  00068C  3636               	line	18
  1686                           	incf	((c:___lwdiv@counter)),c
  1687  00068E  2A37               	goto	l1454
  1688  000690  EF4A  F003         	line	19
  1689                           	
  1690                           l691:
  1691  000694                     	line	16
  1692                           	
  1693                           l1454:
  1694  000694                     	
  1695                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  1696  000694  AE36               	goto	u671
  1697  000696  EF4F  F003         	goto	u670
  1698  00069A  EF51  F003         u671:
  1699  00069E                     	goto	l1452
  1700  00069E  EF44  F003         u670:
  1701  0006A2                     	goto	l1456
  1702  0006A2  EF55  F003         	
  1703                           l693:
  1704  0006A6                     	goto	l1456
  1705  0006A6  EF55  F003         	line	20
  1706                           	
  1707                           l694:
  1708  0006AA                     	line	21
  1709                           	
  1710                           l1456:
  1711  0006AA                     	bcf	status,0
  1712  0006AA  90D8               	rlcf	((c:___lwdiv@quotient)),c
  1713  0006AC  3638               	rlcf	((c:___lwdiv@quotient+1)),c
  1714  0006AE  3639               	line	22
  1715                           	
  1716                           l1458:
  1717  0006B0                     		movf	((c:___lwdiv@divisor)),c,w
  1718  0006B0  5035               	subwf	((c:___lwdiv@dividend)),c,w
  1719  0006B2  5C33               	movf	((c:___lwdiv@divisor+1)),c,w
  1720  0006B4  5036               	subwfb	((c:___lwdiv@dividend+1)),c,w
  1721  0006B6  5834               	btfss	status,0
  1722  0006B8  A0D8               	goto	u681
  1723  0006BA  EF61  F003         	goto	u680
  1724  0006BE  EF63  F003         
  1725                           u681:
  1726  0006C2                     	goto	l1464
  1727  0006C2  EF6A  F003         u680:
  1728  0006C6                     	line	23
  1729                           	
  1730                           l1460:
  1731  0006C6                     	movf	((c:___lwdiv@divisor)),c,w
  1732  0006C6  5035               	subwf	((c:___lwdiv@dividend)),c
  1733  0006C8  5E33               	movf	((c:___lwdiv@divisor+1)),c,w
  1734  0006CA  5036               	subwfb	((c:___lwdiv@dividend+1)),c
  1735  0006CC  5A34               
  1736                           	line	24
  1737                           	
  1738                           l1462:
  1739  0006CE                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  1740  0006CE  8038               	goto	l1464
  1741  0006D0  EF6A  F003         	line	25
  1742                           	
  1743                           l695:
  1744  0006D4                     	line	26
  1745                           	
  1746                           l1464:
  1747  0006D4                     	bcf	status,0
  1748  0006D4  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  1749  0006D6  3236               	rrcf	((c:___lwdiv@divisor)),c
  1750  0006D8  3235               	line	27
  1751                           	
  1752                           l1466:
  1753  0006DA                     	decfsz	((c:___lwdiv@counter)),c
  1754  0006DA  2E37               	
  1755                           	goto	l1456
  1756  0006DC  EF55  F003         	goto	l690
  1757  0006E0  EF72  F003         	
  1758                           l696:
  1759  0006E4                     	line	28
  1760                           	
  1761                           l690:
  1762  0006E4                     	line	29
  1763                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  1764  0006E4  C038  F033         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  1765  0006E8  C039  F034         	line	30
  1766                           	
  1767                           l697:
  1768  0006EC                     	return	;funcret
  1769  0006EC  0012               	opt stack 0
  1770                           GLOBAL	__end_of___lwdiv
  1771                           	__end_of___lwdiv:
  1772  0006EE                     	signat	___lwdiv,8314
  1773                           	global	_init_VNHIO
  1774                           
  1775 ;; *************** function _init_VNHIO *****************
  1776 ;; Defined at:
  1777 ;;		line 199 in file "main.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1791 ;;      Params:         0       0       0       0
  1792 ;;      Locals:         0       0       0       0
  1793 ;;      Temps:          0       0       0       0
  1794 ;;      Totals:         0       0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:    1
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1805                           	file	"main.c"
  1806                           	line	199
  1807                           global __ptext4
  1808                           __ptext4:
  1809  000914                     psect	text4
  1810                           	file	"main.c"
  1811                           	line	199
  1812                           	global	__size_of_init_VNHIO
  1813                           	__size_of_init_VNHIO	equ	__end_of_init_VNHIO-_init_VNHIO
  1814  0000                     	
  1815                           _init_VNHIO:
  1816  000914                     ;incstack = 0
  1817                           	opt	stack 29
  1818                           	line	201
  1819                           	
  1820                           l1484:
  1821  000914                     ;main.c: 201:     ANSEL0 = 0;
  1822                           	movlw	low(0)
  1823  000914  0E00               	movwf	((c:4024)),c	;volatile
  1824  000916  6EB8               	line	202
  1825                           ;main.c: 202:     ANSEL1 = 0;
  1826                           	movlw	low(0)
  1827  000918  0E00               	movwf	((c:4025)),c	;volatile
  1828  00091A  6EB9               	line	203
  1829                           	
  1830                           l1486:
  1831  00091C                     ;main.c: 203:     TRISA0 = 0;
  1832                           	bcf	c:(31888/8),(31888)&7	;volatile
  1833  00091C  9092               	line	204
  1834                           	
  1835                           l1488:
  1836  00091E                     ;main.c: 204:     TRISA1 = 0;
  1837                           	bcf	c:(31889/8),(31889)&7	;volatile
  1838  00091E  9292               	line	205
  1839                           	
  1840                           l1490:
  1841  000920                     ;main.c: 205:     LATA0 = 0;
  1842                           	bcf	c:(31816/8),(31816)&7	;volatile
  1843  000920  9089               	line	206
  1844                           	
  1845                           l1492:
  1846  000922                     ;main.c: 206:     LATA1 = 1;
  1847                           	bsf	c:(31817/8),(31817)&7	;volatile
  1848  000922  8289               	line	207
  1849                           	
  1850                           l173:
  1851  000924                     	return	;funcret
  1852  000924  0012               	opt stack 0
  1853                           GLOBAL	__end_of_init_VNHIO
  1854                           	__end_of_init_VNHIO:
  1855  000926                     	signat	_init_VNHIO,89
  1856                           	global	_init_UART
  1857                           
  1858 ;; *************** function _init_UART *****************
  1859 ;; Defined at:
  1860 ;;		line 243 in file "main.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1874 ;;      Params:         0       0       0       0
  1875 ;;      Locals:         0       0       0       0
  1876 ;;      Temps:          0       0       0       0
  1877 ;;      Totals:         0       0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    1
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_main
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1888                           	line	243
  1889                           global __ptext5
  1890                           __ptext5:
  1891  0008FE                     psect	text5
  1892                           	file	"main.c"
  1893                           	line	243
  1894                           	global	__size_of_init_UART
  1895                           	__size_of_init_UART	equ	__end_of_init_UART-_init_UART
  1896  0000                     	
  1897                           _init_UART:
  1898  0008FE                     ;incstack = 0
  1899                           	opt	stack 29
  1900                           	line	245
  1901                           	
  1902                           l1516:
  1903  0008FE                     ;main.c: 245:     GPREG.TXCTRL = 0;
  1904                           	bcf	((c:_GPREG)),c,4
  1905  0008FE  9827               	line	246
  1906                           ;main.c: 246:     TRISC6 = 0;
  1907                           	bcf	c:(31910/8),(31910)&7	;volatile
  1908  000900  9C94               	line	247
  1909                           	
  1910                           l1518:
  1911  000902                     ;main.c: 247:     TXSTA = 0x20;
  1912                           	movlw	low(020h)
  1913  000902  0E20               	movwf	((c:4012)),c	;volatile
  1914  000904  6EAC               	line	248
  1915                           ;main.c: 248:     RCSTA = 0x90;
  1916                           	movlw	low(090h)
  1917  000906  0E90               	movwf	((c:4011)),c	;volatile
  1918  000908  6EAB               	line	249
  1919                           ;main.c: 249:     BAUDCON = 0x0;
  1920                           	movlw	low(0)
  1921  00090A  0E00               	movwf	((c:4010)),c	;volatile
  1922  00090C  6EAA               	line	250
  1923                           ;main.c: 250:     SPBRG = 12;
  1924                           	movlw	low(0Ch)
  1925  00090E  0E0C               	movwf	((c:4015)),c	;volatile
  1926  000910  6EAF               	line	251
  1927                           	
  1928                           l185:
  1929  000912                     	return	;funcret
  1930  000912  0012               	opt stack 0
  1931                           GLOBAL	__end_of_init_UART
  1932                           	__end_of_init_UART:
  1933  000914                     	signat	_init_UART,89
  1934                           	global	_init_TMR1
  1935                           
  1936 ;; *************** function _init_TMR1 *****************
  1937 ;; Defined at:
  1938 ;;		line 192 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1952 ;;      Params:         0       0       0       0
  1953 ;;      Locals:         0       0       0       0
  1954 ;;      Temps:          0       0       0       0
  1955 ;;      Totals:         0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           psect	text6,class=CODE,space=0,reloc=2,group=0
  1966                           	line	192
  1967                           global __ptext6
  1968                           __ptext6:
  1969  000926                     psect	text6
  1970                           	file	"main.c"
  1971                           	line	192
  1972                           	global	__size_of_init_TMR1
  1973                           	__size_of_init_TMR1	equ	__end_of_init_TMR1-_init_TMR1
  1974  0000                     	
  1975                           _init_TMR1:
  1976  000926                     ;incstack = 0
  1977                           	opt	stack 29
  1978                           	line	195
  1979                           	
  1980                           l1494:
  1981  000926                     ;main.c: 195:     T1CON = 0xF9;
  1982                           	movlw	low(0F9h)
  1983  000926  0EF9               	movwf	((c:4045)),c	;volatile
  1984  000928  6ECD               	line	196
  1985                           ;main.c: 196:     TMR1 = 53035;
  1986                           	movlw	high(0CF2Bh)
  1987  00092A  0ECF               	movwf	((c:4046+1)),c	;volatile
  1988  00092C  6ECF               	movlw	low(0CF2Bh)
  1989  00092E  0E2B               	movwf	((c:4046)),c	;volatile
  1990  000930  6ECE               	line	197
  1991                           	
  1992                           l170:
  1993  000932                     	return	;funcret
  1994  000932  0012               	opt stack 0
  1995                           GLOBAL	__end_of_init_TMR1
  1996                           	__end_of_init_TMR1:
  1997  000934                     	signat	_init_TMR1,89
  1998                           	global	_init_QEI
  1999                           
  2000 ;; *************** function _init_QEI *****************
  2001 ;; Defined at:
  2002 ;;		line 227 in file "main.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2016 ;;      Params:         0       0       0       0
  2017 ;;      Locals:         0       0       0       0
  2018 ;;      Temps:          0       0       0       0
  2019 ;;      Totals:         0       0       0       0
  2020 ;;Total ram usage:        0 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           psect	text7,class=CODE,space=0,reloc=2,group=0
  2030                           	line	227
  2031                           global __ptext7
  2032                           __ptext7:
  2033  0008AA                     psect	text7
  2034                           	file	"main.c"
  2035                           	line	227
  2036                           	global	__size_of_init_QEI
  2037                           	__size_of_init_QEI	equ	__end_of_init_QEI-_init_QEI
  2038  0000                     	
  2039                           _init_QEI:
  2040  0008AA                     ;incstack = 0
  2041                           	opt	stack 29
  2042                           	line	229
  2043                           	
  2044                           l1504:
  2045  0008AA                     ;main.c: 229:     CAP1BUFL = 0;
  2046                           	movlw	low(0)
  2047  0008AA  0E00               	movwf	((c:3944)),c	;volatile
  2048  0008AC  6E68               	line	230
  2049                           ;main.c: 230:     CAP1BUFH = 0;
  2050                           	movlw	low(0)
  2051  0008AE  0E00               	movwf	((c:3945)),c	;volatile
  2052  0008B0  6E69               	line	231
  2053                           	
  2054                           l1506:
  2055  0008B2                     ;main.c: 231:     TRISA4 = 1;
  2056                           	bsf	c:(31892/8),(31892)&7	;volatile
  2057  0008B2  8892               	line	232
  2058                           	
  2059                           l1508:
  2060  0008B4                     ;main.c: 232:     TRISA5 = 1;
  2061                           	bsf	c:(31893/8),(31893)&7	;volatile
  2062  0008B4  8A92               	line	235
  2063                           ;main.c: 235:     T5CON = 0x80;
  2064                           	movlw	low(080h)
  2065  0008B6  0E80               	movwf	((c:4023)),c	;volatile
  2066  0008B8  6EB7               	line	236
  2067                           ;main.c: 236:     QEICON = 0x19;
  2068                           	movlw	low(019h)
  2069  0008BA  0E19               	movwf	((c:4022)),c	;volatile
  2070  0008BC  6EB6               	line	237
  2071                           	
  2072                           l1510:
  2073  0008BE                     ;main.c: 237:     PR5 = 0xFFFF;
  2074                           	setf	((c:3984)),c	;volatile
  2075  0008BE  6890               	setf	((c:3984+1)),c	;volatile
  2076  0008C0  6891               	line	238
  2077                           	
  2078                           l1512:
  2079  0008C2                     ;main.c: 238:     CAP1REN = 1;
  2080                           	bsf	c:(31518/8),(31518)&7	;volatile
  2081  0008C2  8C63               	line	239
  2082                           	
  2083                           l1514:
  2084  0008C4                     ;main.c: 239:     TMR5ON = 1;
  2085                           	bsf	c:(32184/8),(32184)&7	;volatile
  2086  0008C4  80B7               	line	241
  2087                           	
  2088                           l182:
  2089  0008C6                     	return	;funcret
  2090  0008C6  0012               	opt stack 0
  2091                           GLOBAL	__end_of_init_QEI
  2092                           	__end_of_init_QEI:
  2093  0008C8                     	signat	_init_QEI,89
  2094                           	global	_init_PWM
  2095                           
  2096 ;; *************** function _init_PWM *****************
  2097 ;; Defined at:
  2098 ;;		line 209 in file "main.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2112 ;;      Params:         0       0       0       0
  2113 ;;      Locals:         0       0       0       0
  2114 ;;      Temps:          0       0       0       0
  2115 ;;      Totals:         0       0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    2
  2119 ;; This function calls:
  2120 ;;		_write_PWM
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           psect	text8,class=CODE,space=0,reloc=2,group=0
  2126                           	line	209
  2127                           global __ptext8
  2128                           __ptext8:
  2129  0008C8                     psect	text8
  2130                           	file	"main.c"
  2131                           	line	209
  2132                           	global	__size_of_init_PWM
  2133                           	__size_of_init_PWM	equ	__end_of_init_PWM-_init_PWM
  2134  0000                     	
  2135                           _init_PWM:
  2136  0008C8                     ;incstack = 0
  2137                           	opt	stack 28
  2138                           	line	211
  2139                           	
  2140                           l1496:
  2141  0008C8                     ;main.c: 211:     TRISC2 = 0;
  2142                           	bcf	c:(31906/8),(31906)&7	;volatile
  2143  0008C8  9494               	line	212
  2144                           ;main.c: 212:     LATC2 = 0;
  2145                           	bcf	c:(31834/8),(31834)&7	;volatile
  2146  0008CA  948B               	line	214
  2147                           	
  2148                           l1498:
  2149  0008CC                     ;main.c: 214:     CCP1CON = 0xF;
  2150                           	movlw	low(0Fh)
  2151  0008CC  0E0F               	movwf	((c:4029)),c	;volatile
  2152  0008CE  6EBD               	line	215
  2153                           ;main.c: 215:     T2CON = 0x4;
  2154                           	movlw	low(04h)
  2155  0008D0  0E04               	movwf	((c:4042)),c	;volatile
  2156  0008D2  6ECA               	line	216
  2157                           	
  2158                           l1500:
  2159  0008D4                     ;main.c: 216:     PR2 = 255u;
  2160                           	setf	((c:4043)),c	;volatile
  2161  0008D4  68CB               	line	217
  2162                           	
  2163                           l1502:
  2164  0008D6                     ;main.c: 217:     write_PWM(0);
  2165                           	movlw	high(0)
  2166  0008D6  0E00               	movlb	0	; () banked
  2167  0008D8  0100               	movwf	((write_PWM@dutyCycle+1))&0ffh
  2168  0008DA  6F61               	movlw	low(0)
  2169  0008DC  0E00               	movwf	((write_PWM@dutyCycle))&0ffh
  2170  0008DE  6F60               	call	_write_PWM	;wreg free
  2171  0008E0  EC41  F004         	line	218
  2172                           	
  2173                           l176:
  2174  0008E4                     	return	;funcret
  2175  0008E4  0012               	opt stack 0
  2176                           GLOBAL	__end_of_init_PWM
  2177                           	__end_of_init_PWM:
  2178  0008E6                     	signat	_init_PWM,89
  2179                           	global	_write_PWM
  2180                           
  2181 ;; *************** function _write_PWM *****************
  2182 ;; Defined at:
  2183 ;;		line 220 in file "main.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  dutyCycle       2    0[BANK0 ] unsigned int 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2197 ;;      Params:         0       2       0       0
  2198 ;;      Locals:         0       0       0       0
  2199 ;;      Temps:          0       1       0       0
  2200 ;;      Totals:         0       3       0       0
  2201 ;;Total ram usage:        3 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;;		_init_PWM
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           psect	text9,class=CODE,space=0,reloc=2,group=0
  2212                           	line	220
  2213                           global __ptext9
  2214                           __ptext9:
  2215  000882                     psect	text9
  2216                           	file	"main.c"
  2217                           	line	220
  2218                           	global	__size_of_write_PWM
  2219                           	__size_of_write_PWM	equ	__end_of_write_PWM-_write_PWM
  2220  0000                     	
  2221                           _write_PWM:
  2222  000882                     ;incstack = 0
  2223                           	opt	stack 29
  2224                           	line	222
  2225                           	
  2226                           l1364:
  2227  000882                     ;main.c: 220: void write_PWM(uint16_t dutyCycle);main.c: 221: {;main.c: 222:     CCP1CON
                                 bits.DC1B = dutyCycle % 4u;
  2228                           	movff	(write_PWM@dutyCycle),??_write_PWM+0+0
  2229  000882  C060  F062         	movlw	03h
  2230  000886  0E03               	movlb	0	; () banked
  2231  000888  0100               	andwf	(??_write_PWM+0+0)&0ffh
  2232  00088A  1762               	swapf	(??_write_PWM+0+0)&0ffh
  2233  00088C  3B62               	movf	((c:4029)),c,w	;volatile
  2234  00088E  50BD               	xorwf	(??_write_PWM+0+0)&0ffh,w
  2235  000890  1962               	andlw	not (((1<<2)-1)<<4)
  2236  000892  0BCF               	xorwf	(??_write_PWM+0+0)&0ffh,w
  2237  000894  1962               	movwf	((c:4029)),c	;volatile
  2238  000896  6EBD               	line	223
  2239                           	
  2240                           l1366:; BSR set to: 0
  2241  000898                     
  2242                           ;main.c: 223:     dutyCycle >>= 2;
  2243                           	bcf	status,0
  2244  000898  90D8               	rrcf	((write_PWM@dutyCycle+1))&0ffh
  2245  00089A  3361               	rrcf	((write_PWM@dutyCycle))&0ffh
  2246  00089C  3360               	bcf	status,0
  2247  00089E  90D8               	rrcf	((write_PWM@dutyCycle+1))&0ffh
  2248  0008A0  3361               	rrcf	((write_PWM@dutyCycle))&0ffh
  2249  0008A2  3360               	line	224
  2250                           	
  2251                           l1368:; BSR set to: 0
  2252  0008A4                     
  2253                           ;main.c: 224:     CCPR1L = (uint8_t) dutyCycle;
  2254                           	movff	(write_PWM@dutyCycle),(c:4030)	;volatile
  2255  0008A4  C060  FFBE         	line	225
  2256                           	
  2257                           l179:; BSR set to: 0
  2258  0008A8                     
  2259                           	return	;funcret
  2260  0008A8  0012               	opt stack 0
  2261                           GLOBAL	__end_of_write_PWM
  2262                           	__end_of_write_PWM:
  2263  0008AA                     	signat	_write_PWM,4217
  2264                           	global	_init_ISR
  2265                           
  2266 ;; *************** function _init_ISR *****************
  2267 ;; Defined at:
  2268 ;;		line 253 in file "main.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		None
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2282 ;;      Params:         0       0       0       0
  2283 ;;      Locals:         0       0       0       0
  2284 ;;      Temps:          0       0       0       0
  2285 ;;      Totals:         0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           psect	text10,class=CODE,space=0,reloc=2,group=0
  2296                           	line	253
  2297                           global __ptext10
  2298                           __ptext10:
  2299  0008E6                     psect	text10
  2300                           	file	"main.c"
  2301                           	line	253
  2302                           	global	__size_of_init_ISR
  2303                           	__size_of_init_ISR	equ	__end_of_init_ISR-_init_ISR
  2304  0000                     	
  2305                           _init_ISR:; BSR set to: 0
  2306  0008E6                     
  2307                           ;incstack = 0
  2308                           	opt	stack 29
  2309                           	line	256
  2310                           	
  2311                           l1520:
  2312  0008E6                     ;main.c: 256:     TMR1IF = 0;
  2313                           	bcf	c:(31984/8),(31984)&7	;volatile
  2314  0008E6  909E               	line	257
  2315                           ;main.c: 257:     TMR1IE = 1;
  2316                           	bsf	c:(31976/8),(31976)&7	;volatile
  2317  0008E8  809D               	line	258
  2318                           ;main.c: 258:     TMR1IP = 1;
  2319                           	bsf	c:(31992/8),(31992)&7	;volatile
  2320  0008EA  809F               	line	261
  2321                           ;main.c: 261:     TMR5IF = 0;
  2322                           	bcf	c:(32032/8),(32032)&7	;volatile
  2323  0008EC  90A4               	line	262
  2324                           ;main.c: 262:     TMR5IE = 1;
  2325                           	bsf	c:(32024/8),(32024)&7	;volatile
  2326  0008EE  80A3               	line	263
  2327                           ;main.c: 263:     TMR5IP = 1;
  2328                           	bsf	c:(32040/8),(32040)&7	;volatile
  2329  0008F0  80A5               	line	266
  2330                           ;main.c: 266:     TXIE = 0;
  2331                           	bcf	c:(31980/8),(31980)&7	;volatile
  2332  0008F2  989D               	line	267
  2333                           ;main.c: 267:     TXIP = 1;
  2334                           	bsf	c:(31996/8),(31996)&7	;volatile
  2335  0008F4  889F               	line	268
  2336                           ;main.c: 268:     TXIF = 0;
  2337                           	bcf	c:(31988/8),(31988)&7	;volatile
  2338  0008F6  989E               	line	270
  2339                           ;main.c: 270:     IPEN=1;
  2340                           	bsf	c:(32391/8),(32391)&7	;volatile
  2341  0008F8  8ED0               	line	271
  2342                           ;main.c: 271:     GIE = 1;
  2343                           	bsf	c:(32663/8),(32663)&7	;volatile
  2344  0008FA  8EF2               	line	272
  2345                           	
  2346                           l188:
  2347  0008FC                     	return	;funcret
  2348  0008FC  0012               	opt stack 0
  2349                           GLOBAL	__end_of_init_ISR
  2350                           	__end_of_init_ISR:
  2351  0008FE                     	signat	_init_ISR,89
  2352                           	global	_calculatePWM
  2353                           
  2354 ;; *************** function _calculatePWM *****************
  2355 ;; Defined at:
  2356 ;;		line 151 in file "main.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  setpoint        1    wreg     char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  setpoint        1    0[COMRAM] char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  4   30[COMRAM] long 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2370 ;;      Params:         4       0       0       0
  2371 ;;      Locals:         0       0       0       0
  2372 ;;      Temps:          8       0       0       0
  2373 ;;      Totals:        12       0       0       0
  2374 ;;Total ram usage:       12 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    2
  2377 ;; This function calls:
  2378 ;;		___aldiv
  2379 ;;		___lldiv
  2380 ;;		___lmul
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           psect	text11,class=CODE,space=0,reloc=2,group=0
  2386                           	line	151
  2387                           global __ptext11
  2388                           __ptext11:
  2389  0000EA                     psect	text11
  2390                           	file	"main.c"
  2391                           	line	151
  2392                           	global	__size_of_calculatePWM
  2393                           	__size_of_calculatePWM	equ	__end_of_calculatePWM-_calculatePWM
  2394  0000                     	
  2395                           _calculatePWM:
  2396  0000EA                     ;incstack = 0
  2397                           	opt	stack 28
  2398                           	line	154
  2399                           	
  2400                           l1522:
  2401  0000EA                     ;main.c: 151: int32_t calculatePWM(int8_t setpoint);main.c: 152: {;main.c: 154:     if(0
                                  == GPREG.STPCRL)
  2402                           	btfsc	((c:_GPREG)),c,3
  2403  0000EA  B627               	goto	u721
  2404  0000EC  EF7A  F000         	goto	u720
  2405  0000F0  EF7C  F000         u721:
  2406  0000F4                     	goto	l1534
  2407  0000F4  EF9E  F000         u720:
  2408  0000F8                     	line	156
  2409                           	
  2410                           l1524:
  2411  0000F8                     ;main.c: 155:     {;main.c: 156:         vel = 0;
  2412                           	movlw	high(0)
  2413  0000F8  0E00               	movwf	((c:_vel+1)),c
  2414  0000FA  6E2E               	movlw	low(0)
  2415  0000FC  0E00               	movwf	((c:_vel)),c
  2416  0000FE  6E2D               	line	157
  2417                           	
  2418                           l1526:
  2419  000100                     ;main.c: 157:         vel = VELRH;
  2420                           	movff	(c:3945),(c:_vel)	;volatile
  2421  000100  CF69 F02D          	clrf	((c:_vel+1)),c
  2422  000104  6A2E               	line	158
  2423                           	
  2424                           l1528:
  2425  000106                     ;main.c: 158:         vel <<= 8;
  2426                           	movf	((c:_vel)),c,w
  2427  000106  502D               	movwf	((c:_vel+1)),c
  2428  000108  6E2E               	clrf	((c:_vel)),c
  2429  00010A  6A2D               	line	159
  2430                           	
  2431                           l1530:
  2432  00010C                     ;main.c: 159:         vel |= VELRL;
  2433                           	movf	((c:3944)),c,w	;volatile
  2434  00010C  5068               	iorwf	((c:_vel)),c
  2435  00010E  122D               	line	161
  2436                           	
  2437                           l1532:
  2438  000110                     ;main.c: 161:         vel = 571420u/vel;
  2439                           	movlw	low(08B81Ch)
  2440  000110  0E1C               	movwf	((c:___lldiv@dividend)),c
  2441  000112  6E33               	movlw	high(08B81Ch)
  2442  000114  0EB8               	movwf	((c:___lldiv@dividend+1)),c
  2443  000116  6E34               	movlw	low highword(08B81Ch)
  2444  000118  0E08               	movwf	((c:___lldiv@dividend+2)),c
  2445  00011A  6E35               	movlw	high highword(08B81Ch)
  2446  00011C  0E00               	movwf	((c:___lldiv@dividend+3)),c
  2447  00011E  6E36               	movff	(c:_vel),(c:___lldiv@divisor)
  2448  000120  C02D  F037         	movff	(c:_vel+1),(c:___lldiv@divisor+1)
  2449  000124  C02E  F038         	clrf	((c:___lldiv@divisor+2)),c
  2450  000128  6A39               	clrf	((c:___lldiv@divisor+3)),c
  2451  00012A  6A3A               
  2452                           	call	___lldiv	;wreg free
  2453  00012C  ECD7  F002         	movff	0+?___lldiv,(c:_vel)
  2454  000130  C033  F02D         	movff	1+?___lldiv,(c:_vel+1)
  2455  000134  C034  F02E         	line	163
  2456                           ;main.c: 163:     } else {
  2457                           	goto	l1538
  2458  000138  EFA5  F000         	
  2459                           l163:
  2460  00013C                     	line	164
  2461                           	
  2462                           l1534:
  2463  00013C                     ;main.c: 164:         vel = 0;
  2464                           	movlw	high(0)
  2465  00013C  0E00               	movwf	((c:_vel+1)),c
  2466  00013E  6E2E               	movlw	low(0)
  2467  000140  0E00               	movwf	((c:_vel)),c
  2468  000142  6E2D               	line	165
  2469                           	
  2470                           l1536:
  2471  000144                     ;main.c: 165:         GPREG.STPCRL = 0;
  2472                           	bcf	((c:_GPREG)),c,3
  2473  000144  9627               	goto	l1538
  2474  000146  EFA5  F000         	line	166
  2475                           ;main.c: 166:     }
  2476                           	
  2477                           l164:
  2478  00014A                     	line	168
  2479                           	
  2480                           l1538:
  2481  00014A                     ;main.c: 168:     error = (ref_vel - vel);
  2482                           	movff	(c:_vel),??_calculatePWM+0+0
  2483  00014A  C02D  F051         	movff	(c:_vel+1),??_calculatePWM+0+0+1
  2484  00014E  C02E  F052         	comf	(??_calculatePWM+0+0),c
  2485  000152  1E51               	comf	(??_calculatePWM+0+1),c
  2486  000154  1E52               	infsnz	(??_calculatePWM+0+0),c
  2487  000156  4A51               	incf	(??_calculatePWM+0+1),c
  2488  000158  2A52               	movf	((c:_ref_vel)),c,w
  2489  00015A  5059               	addwf	(??_calculatePWM+0+0),c,w
  2490  00015C  2451               	movwf	((c:_error)),c
  2491  00015E  6E21               	movf	((c:_ref_vel+1)),c,w
  2492  000160  505A               	addwfc	(??_calculatePWM+0+1),c,w
  2493  000162  2052               	movwf	1+((c:_error)),c
  2494  000164  6E22               	line	169
  2495                           	
  2496                           l1540:
  2497  000166                     ;main.c: 169:     suma_error += (50*(int32_t)error)/1000;
  2498                           	movff	(c:_error),(c:___lmul@multiplier)
  2499  000166  C021  F033         	movff	(c:_error+1),(c:___lmul@multiplier+1)
  2500  00016A  C022  F034         	movlw	0
  2501  00016E  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2502  000170  BE34               	movlw	-1
  2503  000172  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2504  000174  6E35               	movwf	((c:___lmul@multiplier+3)),c
  2505  000176  6E36               	movlw	low(032h)
  2506  000178  0E32               	movwf	((c:___lmul@multiplicand)),c
  2507  00017A  6E37               	movlw	high(032h)
  2508  00017C  0E00               	movwf	((c:___lmul@multiplicand+1)),c
  2509  00017E  6E38               	movlw	low highword(032h)
  2510  000180  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2511  000182  6E39               	movlw	high highword(032h)
  2512  000184  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2513  000186  6E3A               	call	___lmul	;wreg free
  2514  000188  ECF1  F003         	movff	0+?___lmul,(c:___aldiv@dividend)
  2515  00018C  C033  F03F         	movff	1+?___lmul,(c:___aldiv@dividend+1)
  2516  000190  C034  F040         	movff	2+?___lmul,(c:___aldiv@dividend+2)
  2517  000194  C035  F041         	movff	3+?___lmul,(c:___aldiv@dividend+3)
  2518  000198  C036  F042         	
  2519                           	movlw	low(03E8h)
  2520  00019C  0EE8               	movwf	((c:___aldiv@divisor)),c
  2521  00019E  6E43               	movlw	high(03E8h)
  2522  0001A0  0E03               	movwf	((c:___aldiv@divisor+1)),c
  2523  0001A2  6E44               	movlw	low highword(03E8h)
  2524  0001A4  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2525  0001A6  6E45               	movlw	high highword(03E8h)
  2526  0001A8  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2527  0001AA  6E46               	call	___aldiv	;wreg free
  2528  0001AC  ECDF  F001         	movf	(0+?___aldiv),c,w
  2529  0001B0  503F               	addwf	((c:_suma_error)),c
  2530  0001B2  2615               	movf	(1+?___aldiv),c,w
  2531  0001B4  5040               	addwfc	((c:_suma_error+1)),c
  2532  0001B6  2216               	movf	(2+?___aldiv),c,w
  2533  0001B8  5041               	addwfc	((c:_suma_error+2)),c
  2534  0001BA  2217               	movf	(3+?___aldiv),c,w
  2535  0001BC  5042               	addwfc	((c:_suma_error+3)),c
  2536  0001BE  2218               
  2537                           	line	170
  2538                           	
  2539                           l1542:
  2540  0001C0                     ;main.c: 170:     aceleracion = (int32_t)(error - error_ant)*20;
  2541                           	movff	(c:_error_ant),??_calculatePWM+0+0
  2542  0001C0  C01F  F051         	movff	(c:_error_ant+1),??_calculatePWM+0+0+1
  2543  0001C4  C020  F052         	comf	(??_calculatePWM+0+0),c
  2544  0001C8  1E51               	comf	(??_calculatePWM+0+1),c
  2545  0001CA  1E52               	infsnz	(??_calculatePWM+0+0),c
  2546  0001CC  4A51               	incf	(??_calculatePWM+0+1),c
  2547  0001CE  2A52               	movf	((c:_error)),c,w
  2548  0001D0  5021               	addwf	(??_calculatePWM+0+0),c
  2549  0001D2  2651               	movf	((c:_error+1)),c,w
  2550  0001D4  5022               	addwfc	(??_calculatePWM+0+1),c
  2551  0001D6  2252               	movff	??_calculatePWM+0+0,(c:___lmul@multiplier)
  2552  0001D8  C051  F033         	movff	??_calculatePWM+0+1,(c:___lmul@multiplier+1)
  2553  0001DC  C052  F034         	movlw	0
  2554  0001E0  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2555  0001E2  BE34               	movlw	-1
  2556  0001E4  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2557  0001E6  6E35               	movwf	((c:___lmul@multiplier+3)),c
  2558  0001E8  6E36               	movlw	low(014h)
  2559  0001EA  0E14               	movwf	((c:___lmul@multiplicand)),c
  2560  0001EC  6E37               	movlw	high(014h)
  2561  0001EE  0E00               	movwf	((c:___lmul@multiplicand+1)),c
  2562  0001F0  6E38               	movlw	low highword(014h)
  2563  0001F2  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2564  0001F4  6E39               	movlw	high highword(014h)
  2565  0001F6  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2566  0001F8  6E3A               	call	___lmul	;wreg free
  2567  0001FA  ECF1  F003         	movff	0+?___lmul,(c:_aceleracion)
  2568  0001FE  C033  F00D         	movff	1+?___lmul,(c:_aceleracion+1)
  2569  000202  C034  F00E         	movff	2+?___lmul,(c:_aceleracion+2)
  2570  000206  C035  F00F         	movff	3+?___lmul,(c:_aceleracion+3)
  2571  00020A  C036  F010         	
  2572                           	line	171
  2573                           	
  2574                           l1544:
  2575  00020E                     ;main.c: 171:     volt = ((PID.Kp * (int32_t)error) + ((PID.Ki * suma_error)) + (PID.Kd*
                                 aceleracion));
  2576                           	movff	(c:_error),(c:___lmul@multiplier)
  2577  00020E  C021  F033         	movff	(c:_error+1),(c:___lmul@multiplier+1)
  2578  000212  C022  F034         	movlw	0
  2579  000216  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2580  000218  BE34               	movlw	-1
  2581  00021A  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2582  00021C  6E35               	movwf	((c:___lmul@multiplier+3)),c
  2583  00021E  6E36               	movff	(c:_PID),(c:___lmul@multiplicand)
  2584  000220  C001  F037         	movff	(c:_PID+1),(c:___lmul@multiplicand+1)
  2585  000224  C002  F038         	movff	(c:_PID+2),(c:___lmul@multiplicand+2)
  2586  000228  C003  F039         	movff	(c:_PID+3),(c:___lmul@multiplicand+3)
  2587  00022C  C004  F03A         	call	___lmul	;wreg free
  2588  000230  ECF1  F003         	movff	0+?___lmul,??_calculatePWM+0+0
  2589  000234  C033  F051         	movff	1+?___lmul,??_calculatePWM+0+0+1
  2590  000238  C034  F052         	movff	2+?___lmul,??_calculatePWM+0+0+2
  2591  00023C  C035  F053         	movff	3+?___lmul,??_calculatePWM+0+0+3
  2592  000240  C036  F054         	
  2593                           	movff	0+((c:_PID)+04h),(c:___lmul@multiplier)
  2594  000244  C005  F033         	movff	1+((c:_PID)+04h),(c:___lmul@multiplier+1)
  2595  000248  C006  F034         	movff	2+((c:_PID)+04h),(c:___lmul@multiplier+2)
  2596  00024C  C007  F035         	movff	3+((c:_PID)+04h),(c:___lmul@multiplier+3)
  2597  000250  C008  F036         	movff	(c:_suma_error),(c:___lmul@multiplicand)
  2598  000254  C015  F037         	movff	(c:_suma_error+1),(c:___lmul@multiplicand+1)
  2599  000258  C016  F038         	movff	(c:_suma_error+2),(c:___lmul@multiplicand+2)
  2600  00025C  C017  F039         	movff	(c:_suma_error+3),(c:___lmul@multiplicand+3)
  2601  000260  C018  F03A         	call	___lmul	;wreg free
  2602  000264  ECF1  F003         	movf	(0+?___lmul),c,w
  2603  000268  5033               	addwf	(??_calculatePWM+0+0),c,w
  2604  00026A  2451               	movwf	(??_calculatePWM+4+0)&0ffh,c
  2605  00026C  6E55               	movf	(1+?___lmul),c,w
  2606  00026E  5034               	addwfc	(??_calculatePWM+0+1),c,w
  2607  000270  2052               	movwf	1+(??_calculatePWM+4+0)&0ffh,c
  2608  000272  6E56               	
  2609                           	movf	(2+?___lmul),c,w
  2610  000274  5035               	addwfc	(??_calculatePWM+0+2),c,w
  2611  000276  2053               	movwf	2+(??_calculatePWM+4+0)&0ffh,c
  2612  000278  6E57               	
  2613                           	movf	(3+?___lmul),c,w
  2614  00027A  5036               	addwfc	(??_calculatePWM+0+3),c,w
  2615  00027C  2054               	movwf	3+(??_calculatePWM+4+0)&0ffh,c
  2616  00027E  6E58               	movff	0+((c:_PID)+08h),(c:___lmul@multiplier)
  2617  000280  C009  F033         	movff	1+((c:_PID)+08h),(c:___lmul@multiplier+1)
  2618  000284  C00A  F034         	movff	2+((c:_PID)+08h),(c:___lmul@multiplier+2)
  2619  000288  C00B  F035         	movff	3+((c:_PID)+08h),(c:___lmul@multiplier+3)
  2620  00028C  C00C  F036         	movff	(c:_aceleracion),(c:___lmul@multiplicand)
  2621  000290  C00D  F037         	movff	(c:_aceleracion+1),(c:___lmul@multiplicand+1)
  2622  000294  C00E  F038         	movff	(c:_aceleracion+2),(c:___lmul@multiplicand+2)
  2623  000298  C00F  F039         	movff	(c:_aceleracion+3),(c:___lmul@multiplicand+3)
  2624  00029C  C010  F03A         	call	___lmul	;wreg free
  2625  0002A0  ECF1  F003         	movf	(0+?___lmul),c,w
  2626  0002A4  5033               	addwf	(??_calculatePWM+4+0),c,w
  2627  0002A6  2455               	movwf	((c:_volt)),c
  2628  0002A8  6E11               	movf	(1+?___lmul),c,w
  2629  0002AA  5034               	addwfc	(??_calculatePWM+4+1),c,w
  2630  0002AC  2056               	movwf	1+((c:_volt)),c
  2631  0002AE  6E12               	
  2632                           	movf	(2+?___lmul),c,w
  2633  0002B0  5035               	addwfc	(??_calculatePWM+4+2),c,w
  2634  0002B2  2057               	movwf	2+((c:_volt)),c
  2635  0002B4  6E13               	
  2636                           	movf	(3+?___lmul),c,w
  2637  0002B6  5036               	addwfc	(??_calculatePWM+4+3),c,w
  2638  0002B8  2058               	movwf	3+((c:_volt)),c
  2639  0002BA  6E14               	line	172
  2640                           	
  2641                           l1546:
  2642  0002BC                     ;main.c: 172:     volt /= 10;
  2643                           	movff	(c:_volt),(c:___aldiv@dividend)
  2644  0002BC  C011  F03F         	movff	(c:_volt+1),(c:___aldiv@dividend+1)
  2645  0002C0  C012  F040         	movff	(c:_volt+2),(c:___aldiv@dividend+2)
  2646  0002C4  C013  F041         	movff	(c:_volt+3),(c:___aldiv@dividend+3)
  2647  0002C8  C014  F042         	movlw	low(0Ah)
  2648  0002CC  0E0A               	movwf	((c:___aldiv@divisor)),c
  2649  0002CE  6E43               	movlw	high(0Ah)
  2650  0002D0  0E00               	movwf	((c:___aldiv@divisor+1)),c
  2651  0002D2  6E44               	movlw	low highword(0Ah)
  2652  0002D4  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2653  0002D6  6E45               	movlw	high highword(0Ah)
  2654  0002D8  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2655  0002DA  6E46               	call	___aldiv	;wreg free
  2656  0002DC  ECDF  F001         	movff	0+?___aldiv,(c:_volt)
  2657  0002E0  C03F  F011         	movff	1+?___aldiv,(c:_volt+1)
  2658  0002E4  C040  F012         	movff	2+?___aldiv,(c:_volt+2)
  2659  0002E8  C041  F013         	movff	3+?___aldiv,(c:_volt+3)
  2660  0002EC  C042  F014         	
  2661                           	line	173
  2662                           	
  2663                           l1548:
  2664  0002F0                     ;main.c: 173:     error_ant = error;
  2665                           	movff	(c:_error),(c:_error_ant)
  2666  0002F0  C021  F01F         	movff	(c:_error+1),(c:_error_ant+1)
  2667  0002F4  C022  F020         	line	176
  2668                           	
  2669                           l1550:
  2670  0002F8                     ;main.c: 176:     if(0 > volt)
  2671                           	btfsc	((c:_volt+3)),c,7
  2672  0002F8  BE14               	goto	u730
  2673  0002FA  EF83  F001         	goto	u731
  2674  0002FE  EF81  F001         
  2675                           u731:
  2676  000302                     	goto	l1554
  2677  000302  EF8D  F001         u730:
  2678  000306                     	line	178
  2679                           	
  2680                           l1552:
  2681  000306                     ;main.c: 177:     {;main.c: 178:         volt = 0;
  2682                           	movlw	low(0)
  2683  000306  0E00               	movwf	((c:_volt)),c
  2684  000308  6E11               	movlw	high(0)
  2685  00030A  0E00               	movwf	((c:_volt+1)),c
  2686  00030C  6E12               	movlw	low highword(0)
  2687  00030E  0E00               	movwf	((c:_volt+2)),c
  2688  000310  6E13               	movlw	high highword(0)
  2689  000312  0E00               	movwf	((c:_volt+3)),c
  2690  000314  6E14               	goto	l1554
  2691  000316  EF8D  F001         	line	179
  2692                           ;main.c: 179:     }
  2693                           	
  2694                           l165:
  2695  00031A                     	line	181
  2696                           	
  2697                           l1554:
  2698  00031A                     ;main.c: 181:     if(800 < volt)
  2699                           	btfsc	((c:_volt+3)),c,7
  2700  00031A  BE14               	goto	u741
  2701  00031C  EF9C  F001         	movf	((c:_volt+3)),c,w
  2702  000320  5014               	iorwf	((c:_volt+2)),c,w
  2703  000322  1013               	bnz	u740
  2704  000324  E10B               	movlw	33
  2705  000326  0E21               	subwf	 ((c:_volt)),c,w
  2706  000328  5C11               	movlw	3
  2707  00032A  0E03               	subwfb	((c:_volt+1)),c,w
  2708  00032C  5812               	btfss	status,0
  2709  00032E  A0D8               	goto	u741
  2710  000330  EF9C  F001         	goto	u740
  2711  000334  EF9E  F001         
  2712                           u741:
  2713  000338                     	goto	l1558
  2714  000338  EFA8  F001         u740:
  2715  00033C                     	line	183
  2716                           	
  2717                           l1556:
  2718  00033C                     ;main.c: 182:     {;main.c: 183:         volt = 800;
  2719                           	movlw	low(0320h)
  2720  00033C  0E20               	movwf	((c:_volt)),c
  2721  00033E  6E11               	movlw	high(0320h)
  2722  000340  0E03               	movwf	((c:_volt+1)),c
  2723  000342  6E12               	movlw	low highword(0320h)
  2724  000344  0E00               	movwf	((c:_volt+2)),c
  2725  000346  6E13               	movlw	high highword(0320h)
  2726  000348  0E00               	movwf	((c:_volt+3)),c
  2727  00034A  6E14               	goto	l1558
  2728  00034C  EFA8  F001         	line	184
  2729                           ;main.c: 184:     }
  2730                           	
  2731                           l166:
  2732  000350                     	line	186
  2733                           	
  2734                           l1558:
  2735  000350                     ;main.c: 186:     volt = (volt*1022u)/800;
  2736                           	movff	(c:_volt),(c:___lmul@multiplier)
  2737  000350  C011  F033         	movff	(c:_volt+1),(c:___lmul@multiplier+1)
  2738  000354  C012  F034         	movff	(c:_volt+2),(c:___lmul@multiplier+2)
  2739  000358  C013  F035         	movff	(c:_volt+3),(c:___lmul@multiplier+3)
  2740  00035C  C014  F036         	movlw	low(03FEh)
  2741  000360  0EFE               	movwf	((c:___lmul@multiplicand)),c
  2742  000362  6E37               	movlw	high(03FEh)
  2743  000364  0E03               	movwf	((c:___lmul@multiplicand+1)),c
  2744  000366  6E38               	movlw	low highword(03FEh)
  2745  000368  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2746  00036A  6E39               	movlw	high highword(03FEh)
  2747  00036C  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2748  00036E  6E3A               	call	___lmul	;wreg free
  2749  000370  ECF1  F003         	movff	0+?___lmul,(c:___aldiv@dividend)
  2750  000374  C033  F03F         	movff	1+?___lmul,(c:___aldiv@dividend+1)
  2751  000378  C034  F040         	movff	2+?___lmul,(c:___aldiv@dividend+2)
  2752  00037C  C035  F041         	movff	3+?___lmul,(c:___aldiv@dividend+3)
  2753  000380  C036  F042         	
  2754                           	movlw	low(0320h)
  2755  000384  0E20               	movwf	((c:___aldiv@divisor)),c
  2756  000386  6E43               	movlw	high(0320h)
  2757  000388  0E03               	movwf	((c:___aldiv@divisor+1)),c
  2758  00038A  6E44               	movlw	low highword(0320h)
  2759  00038C  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2760  00038E  6E45               	movlw	high highword(0320h)
  2761  000390  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2762  000392  6E46               	call	___aldiv	;wreg free
  2763  000394  ECDF  F001         	movff	0+?___aldiv,(c:_volt)
  2764  000398  C03F  F011         	movff	1+?___aldiv,(c:_volt+1)
  2765  00039C  C040  F012         	movff	2+?___aldiv,(c:_volt+2)
  2766  0003A0  C041  F013         	movff	3+?___aldiv,(c:_volt+3)
  2767  0003A4  C042  F014         	
  2768                           	line	189
  2769                           	
  2770                           l1560:
  2771  0003A8                     ;main.c: 189:     return volt;
  2772                           	movff	(c:_volt),(c:?_calculatePWM)
  2773  0003A8  C011  F04D         	movff	(c:_volt+1),(c:?_calculatePWM+1)
  2774  0003AC  C012  F04E         	movff	(c:_volt+2),(c:?_calculatePWM+2)
  2775  0003B0  C013  F04F         	movff	(c:_volt+3),(c:?_calculatePWM+3)
  2776  0003B4  C014  F050         	goto	l167
  2777  0003B8  EFDE  F001         	
  2778                           l1562:
  2779  0003BC                     	line	190
  2780                           	
  2781                           l167:
  2782  0003BC                     	return	;funcret
  2783  0003BC  0012               	opt stack 0
  2784                           GLOBAL	__end_of_calculatePWM
  2785                           	__end_of_calculatePWM:
  2786  0003BE                     	signat	_calculatePWM,4220
  2787                           	global	___lmul
  2788                           
  2789 ;; *************** function ___lmul *****************
  2790 ;; Defined at:
  2791 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  multiplier      4    4[COMRAM] unsigned long 
  2794 ;;  multiplicand    4    8[COMRAM] unsigned long 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  product         4   12[COMRAM] unsigned long 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  4    4[COMRAM] unsigned long 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2806 ;;      Params:         8       0       0       0
  2807 ;;      Locals:         4       0       0       0
  2808 ;;      Temps:          0       0       0       0
  2809 ;;      Totals:        12       0       0       0
  2810 ;;Total ram usage:       12 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    1
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_calculatePWM
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           psect	text12,class=CODE,space=0,reloc=2,group=1
  2820                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  2821                           	line	15
  2822                           global __ptext12
  2823                           __ptext12:
  2824  0007E2                     psect	text12
  2825                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  2826                           	line	15
  2827                           	global	__size_of___lmul
  2828                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  2829  0000                     	
  2830                           ___lmul:
  2831  0007E2                     ;incstack = 0
  2832                           	opt	stack 28
  2833                           	line	119
  2834                           	
  2835                           l1370:
  2836  0007E2                     	movlw	low(0)
  2837  0007E2  0E00               	movwf	((c:___lmul@product)),c
  2838  0007E4  6E3B               	movlw	high(0)
  2839  0007E6  0E00               	movwf	((c:___lmul@product+1)),c
  2840  0007E8  6E3C               	movlw	low highword(0)
  2841  0007EA  0E00               	movwf	((c:___lmul@product+2)),c
  2842  0007EC  6E3D               	movlw	high highword(0)
  2843  0007EE  0E00               	movwf	((c:___lmul@product+3)),c
  2844  0007F0  6E3E               	goto	l1372
  2845  0007F2  EFFB  F003         	line	120
  2846                           	
  2847                           l208:
  2848  0007F6                     	line	121
  2849                           	
  2850                           l1372:
  2851  0007F6                     	
  2852                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  2853  0007F6  A033               	goto	u551
  2854  0007F8  EF00  F004         	goto	u550
  2855  0007FC  EF02  F004         u551:
  2856  000800                     	goto	l1376
  2857  000800  EF0C  F004         u550:
  2858  000804                     	line	122
  2859                           	
  2860                           l1374:
  2861  000804                     	movf	((c:___lmul@multiplicand)),c,w
  2862  000804  5037               	addwf	((c:___lmul@product)),c
  2863  000806  263B               	movf	((c:___lmul@multiplicand+1)),c,w
  2864  000808  5038               	addwfc	((c:___lmul@product+1)),c
  2865  00080A  223C               	movf	((c:___lmul@multiplicand+2)),c,w
  2866  00080C  5039               	addwfc	((c:___lmul@product+2)),c
  2867  00080E  223D               	movf	((c:___lmul@multiplicand+3)),c,w
  2868  000810  503A               	addwfc	((c:___lmul@product+3)),c
  2869  000812  223E               	goto	l1376
  2870  000814  EF0C  F004         	
  2871                           l209:
  2872  000818                     	line	123
  2873                           	
  2874                           l1376:
  2875  000818                     	bcf	status,0
  2876  000818  90D8               	rlcf	((c:___lmul@multiplicand)),c
  2877  00081A  3637               	rlcf	((c:___lmul@multiplicand+1)),c
  2878  00081C  3638               	rlcf	((c:___lmul@multiplicand+2)),c
  2879  00081E  3639               	rlcf	((c:___lmul@multiplicand+3)),c
  2880  000820  363A               	line	124
  2881                           	
  2882                           l1378:
  2883  000822                     	bcf	status,0
  2884  000822  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  2885  000824  3236               	rrcf	((c:___lmul@multiplier+2)),c
  2886  000826  3235               	rrcf	((c:___lmul@multiplier+1)),c
  2887  000828  3234               	rrcf	((c:___lmul@multiplier)),c
  2888  00082A  3233               	line	125
  2889                           	movf	((c:___lmul@multiplier)),c,w
  2890  00082C  5033               iorwf	((c:___lmul@multiplier+1)),c,w
  2891  00082E  1034               iorwf	((c:___lmul@multiplier+2)),c,w
  2892  000830  1035               iorwf	((c:___lmul@multiplier+3)),c,w
  2893  000832  1036               	btfss	status,2
  2894  000834  A4D8               	goto	u561
  2895  000836  EF1F  F004         	goto	u560
  2896  00083A  EF21  F004         
  2897                           u561:
  2898  00083E                     	goto	l1372
  2899  00083E  EFFB  F003         u560:
  2900  000842                     	
  2901                           l210:
  2902  000842                     	line	128
  2903                           	movff	(c:___lmul@product),(c:?___lmul)
  2904  000842  C03B  F033         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  2905  000846  C03C  F034         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  2906  00084A  C03D  F035         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  2907  00084E  C03E  F036         	line	129
  2908                           	
  2909                           l211:
  2910  000852                     	return	;funcret
  2911  000852  0012               	opt stack 0
  2912                           GLOBAL	__end_of___lmul
  2913                           	__end_of___lmul:
  2914  000854                     	signat	___lmul,8316
  2915                           	global	___lldiv
  2916                           
  2917 ;; *************** function ___lldiv *****************
  2918 ;; Defined at:
  2919 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  dividend        4    4[COMRAM] unsigned long 
  2922 ;;  divisor         4    8[COMRAM] unsigned long 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  quotient        4   12[COMRAM] unsigned long 
  2925 ;;  counter         1   16[COMRAM] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  4    4[COMRAM] unsigned long 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2935 ;;      Params:         8       0       0       0
  2936 ;;      Locals:         5       0       0       0
  2937 ;;      Temps:          0       0       0       0
  2938 ;;      Totals:        13       0       0       0
  2939 ;;Total ram usage:       13 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_calculatePWM
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           psect	text13,class=CODE,space=0,reloc=2,group=1
  2949                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  2950                           	line	7
  2951                           global __ptext13
  2952                           __ptext13:
  2953  0005AE                     psect	text13
  2954                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  2955                           	line	7
  2956                           	global	__size_of___lldiv
  2957                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  2958  0000                     	
  2959                           ___lldiv:
  2960  0005AE                     ;incstack = 0
  2961                           	opt	stack 28
  2962                           	line	13
  2963                           	
  2964                           l1380:
  2965  0005AE                     	movlw	low(0)
  2966  0005AE  0E00               	movwf	((c:___lldiv@quotient)),c
  2967  0005B0  6E3B               	movlw	high(0)
  2968  0005B2  0E00               	movwf	((c:___lldiv@quotient+1)),c
  2969  0005B4  6E3C               	movlw	low highword(0)
  2970  0005B6  0E00               	movwf	((c:___lldiv@quotient+2)),c
  2971  0005B8  6E3D               	movlw	high highword(0)
  2972  0005BA  0E00               	movwf	((c:___lldiv@quotient+3)),c
  2973  0005BC  6E3E               	line	14
  2974                           	
  2975                           l1382:
  2976  0005BE                     	movf	((c:___lldiv@divisor)),c,w
  2977  0005BE  5037               iorwf	((c:___lldiv@divisor+1)),c,w
  2978  0005C0  1038               iorwf	((c:___lldiv@divisor+2)),c,w
  2979  0005C2  1039               iorwf	((c:___lldiv@divisor+3)),c,w
  2980  0005C4  103A               	btfsc	status,2
  2981  0005C6  B4D8               	goto	u571
  2982  0005C8  EFE8  F002         	goto	u570
  2983  0005CC  EFEA  F002         
  2984                           u571:
  2985  0005D0                     	goto	l226
  2986  0005D0  EF2A  F003         u570:
  2987  0005D4                     	line	15
  2988                           	
  2989                           l1384:
  2990  0005D4                     	movlw	low(01h)
  2991  0005D4  0E01               	movwf	((c:___lldiv@counter)),c
  2992  0005D6  6E3F               	line	16
  2993                           	goto	l1388
  2994  0005D8  EFF6  F002         	
  2995                           l228:
  2996  0005DC                     	line	17
  2997                           	
  2998                           l1386:
  2999  0005DC                     	bcf	status,0
  3000  0005DC  90D8               	rlcf	((c:___lldiv@divisor)),c
  3001  0005DE  3637               	rlcf	((c:___lldiv@divisor+1)),c
  3002  0005E0  3638               	rlcf	((c:___lldiv@divisor+2)),c
  3003  0005E2  3639               	rlcf	((c:___lldiv@divisor+3)),c
  3004  0005E4  363A               	line	18
  3005                           	incf	((c:___lldiv@counter)),c
  3006  0005E6  2A3F               	goto	l1388
  3007  0005E8  EFF6  F002         	line	19
  3008                           	
  3009                           l227:
  3010  0005EC                     	line	16
  3011                           	
  3012                           l1388:
  3013  0005EC                     	
  3014                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
  3015  0005EC  AE3A               	goto	u581
  3016  0005EE  EFFB  F002         	goto	u580
  3017  0005F2  EFFD  F002         u581:
  3018  0005F6                     	goto	l1386
  3019  0005F6  EFEE  F002         u580:
  3020  0005FA                     	goto	l1390
  3021  0005FA  EF01  F003         	
  3022                           l229:
  3023  0005FE                     	goto	l1390
  3024  0005FE  EF01  F003         	line	20
  3025                           	
  3026                           l230:
  3027  000602                     	line	21
  3028                           	
  3029                           l1390:
  3030  000602                     	bcf	status,0
  3031  000602  90D8               	rlcf	((c:___lldiv@quotient)),c
  3032  000604  363B               	rlcf	((c:___lldiv@quotient+1)),c
  3033  000606  363C               	rlcf	((c:___lldiv@quotient+2)),c
  3034  000608  363D               	rlcf	((c:___lldiv@quotient+3)),c
  3035  00060A  363E               	line	22
  3036                           	
  3037                           l1392:
  3038  00060C                     		movf	((c:___lldiv@divisor)),c,w
  3039  00060C  5037               	subwf	((c:___lldiv@dividend)),c,w
  3040  00060E  5C33               	movf	((c:___lldiv@divisor+1)),c,w
  3041  000610  5038               	subwfb	((c:___lldiv@dividend+1)),c,w
  3042  000612  5834               	movf	((c:___lldiv@divisor+2)),c,w
  3043  000614  5039               	subwfb	((c:___lldiv@dividend+2)),c,w
  3044  000616  5835               	movf	((c:___lldiv@divisor+3)),c,w
  3045  000618  503A               	subwfb	((c:___lldiv@dividend+3)),c,w
  3046  00061A  5836               	btfss	status,0
  3047  00061C  A0D8               	goto	u591
  3048  00061E  EF13  F003         	goto	u590
  3049  000622  EF15  F003         
  3050                           u591:
  3051  000626                     	goto	l1398
  3052  000626  EF20  F003         u590:
  3053  00062A                     	line	23
  3054                           	
  3055                           l1394:
  3056  00062A                     	movf	((c:___lldiv@divisor)),c,w
  3057  00062A  5037               	subwf	((c:___lldiv@dividend)),c
  3058  00062C  5E33               	movf	((c:___lldiv@divisor+1)),c,w
  3059  00062E  5038               	subwfb	((c:___lldiv@dividend+1)),c
  3060  000630  5A34               	movf	((c:___lldiv@divisor+2)),c,w
  3061  000632  5039               	subwfb	((c:___lldiv@dividend+2)),c
  3062  000634  5A35               	movf	((c:___lldiv@divisor+3)),c,w
  3063  000636  503A               	subwfb	((c:___lldiv@dividend+3)),c
  3064  000638  5A36               	line	24
  3065                           	
  3066                           l1396:
  3067  00063A                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
  3068  00063A  803B               	goto	l1398
  3069  00063C  EF20  F003         	line	25
  3070                           	
  3071                           l231:
  3072  000640                     	line	26
  3073                           	
  3074                           l1398:
  3075  000640                     	bcf	status,0
  3076  000640  90D8               	rrcf	((c:___lldiv@divisor+3)),c
  3077  000642  323A               	rrcf	((c:___lldiv@divisor+2)),c
  3078  000644  3239               	rrcf	((c:___lldiv@divisor+1)),c
  3079  000646  3238               	rrcf	((c:___lldiv@divisor)),c
  3080  000648  3237               	line	27
  3081                           	
  3082                           l1400:
  3083  00064A                     	decfsz	((c:___lldiv@counter)),c
  3084  00064A  2E3F               	
  3085                           	goto	l1390
  3086  00064C  EF01  F003         	goto	l226
  3087  000650  EF2A  F003         	
  3088                           l232:
  3089  000654                     	line	28
  3090                           	
  3091                           l226:
  3092  000654                     	line	29
  3093                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
  3094  000654  C03B  F033         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
  3095  000658  C03C  F034         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
  3096  00065C  C03D  F035         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
  3097  000660  C03E  F036         	line	30
  3098                           	
  3099                           l233:
  3100  000664                     	return	;funcret
  3101  000664  0012               	opt stack 0
  3102                           GLOBAL	__end_of___lldiv
  3103                           	__end_of___lldiv:
  3104  000666                     	signat	___lldiv,8316
  3105                           	global	___aldiv
  3106                           
  3107 ;; *************** function ___aldiv *****************
  3108 ;; Defined at:
  3109 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  dividend        4   16[COMRAM] long 
  3112 ;;  divisor         4   20[COMRAM] long 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  quotient        4   26[COMRAM] long 
  3115 ;;  sign            1   25[COMRAM] unsigned char 
  3116 ;;  counter         1   24[COMRAM] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  4   16[COMRAM] long 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3126 ;;      Params:         8       0       0       0
  3127 ;;      Locals:         6       0       0       0
  3128 ;;      Temps:          0       0       0       0
  3129 ;;      Totals:        14       0       0       0
  3130 ;;Total ram usage:       14 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    1
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_calculatePWM
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           psect	text14,class=CODE,space=0,reloc=2,group=1
  3140                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3141                           	line	7
  3142                           global __ptext14
  3143                           __ptext14:
  3144  0003BE                     psect	text14
  3145                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3146                           	line	7
  3147                           	global	__size_of___aldiv
  3148                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  3149  0000                     	
  3150                           ___aldiv:
  3151  0003BE                     ;incstack = 0
  3152                           	opt	stack 28
  3153                           	line	13
  3154                           	
  3155                           l1402:
  3156  0003BE                     	movlw	low(0)
  3157  0003BE  0E00               	movwf	((c:___aldiv@sign)),c
  3158  0003C0  6E48               	line	14
  3159                           	
  3160                           l1404:
  3161  0003C2                     	btfsc	((c:___aldiv@divisor+3)),c,7
  3162  0003C2  BE46               	goto	u600
  3163  0003C4  EFE8  F001         	goto	u601
  3164  0003C8  EFE6  F001         
  3165                           u601:
  3166  0003CC                     	goto	l1410
  3167  0003CC  EFF4  F001         u600:
  3168  0003D0                     	line	15
  3169                           	
  3170                           l1406:
  3171  0003D0                     	comf	((c:___aldiv@divisor+3)),c
  3172  0003D0  1E46               	comf	((c:___aldiv@divisor+2)),c
  3173  0003D2  1E45               	comf	((c:___aldiv@divisor+1)),c
  3174  0003D4  1E44               	negf	((c:___aldiv@divisor)),c
  3175  0003D6  6C43               	movlw	0
  3176  0003D8  0E00               	addwfc	((c:___aldiv@divisor+1)),c
  3177  0003DA  2244               	addwfc	((c:___aldiv@divisor+2)),c
  3178  0003DC  2245               	addwfc	((c:___aldiv@divisor+3)),c
  3179  0003DE  2246               	line	16
  3180                           	
  3181                           l1408:
  3182  0003E0                     	movlw	low(01h)
  3183  0003E0  0E01               	movwf	((c:___aldiv@sign)),c
  3184  0003E2  6E48               	goto	l1410
  3185  0003E4  EFF4  F001         	line	17
  3186                           	
  3187                           l268:
  3188  0003E8                     	line	18
  3189                           	
  3190                           l1410:
  3191  0003E8                     	btfsc	((c:___aldiv@dividend+3)),c,7
  3192  0003E8  BE42               	goto	u610
  3193  0003EA  EFFB  F001         	goto	u611
  3194  0003EE  EFF9  F001         
  3195                           u611:
  3196  0003F2                     	goto	l1416
  3197  0003F2  EF07  F002         u610:
  3198  0003F6                     	line	19
  3199                           	
  3200                           l1412:
  3201  0003F6                     	comf	((c:___aldiv@dividend+3)),c
  3202  0003F6  1E42               	comf	((c:___aldiv@dividend+2)),c
  3203  0003F8  1E41               	comf	((c:___aldiv@dividend+1)),c
  3204  0003FA  1E40               	negf	((c:___aldiv@dividend)),c
  3205  0003FC  6C3F               	movlw	0
  3206  0003FE  0E00               	addwfc	((c:___aldiv@dividend+1)),c
  3207  000400  2240               	addwfc	((c:___aldiv@dividend+2)),c
  3208  000402  2241               	addwfc	((c:___aldiv@dividend+3)),c
  3209  000404  2242               	line	20
  3210                           	
  3211                           l1414:
  3212  000406                     	movlw	(01h)&0ffh
  3213  000406  0E01               	xorwf	((c:___aldiv@sign)),c
  3214  000408  1A48               	goto	l1416
  3215  00040A  EF07  F002         	line	21
  3216                           	
  3217                           l269:
  3218  00040E                     	line	22
  3219                           	
  3220                           l1416:
  3221  00040E                     	movlw	low(0)
  3222  00040E  0E00               	movwf	((c:___aldiv@quotient)),c
  3223  000410  6E49               	movlw	high(0)
  3224  000412  0E00               	movwf	((c:___aldiv@quotient+1)),c
  3225  000414  6E4A               	movlw	low highword(0)
  3226  000416  0E00               	movwf	((c:___aldiv@quotient+2)),c
  3227  000418  6E4B               	movlw	high highword(0)
  3228  00041A  0E00               	movwf	((c:___aldiv@quotient+3)),c
  3229  00041C  6E4C               	line	23
  3230                           	
  3231                           l1418:
  3232  00041E                     	movf	((c:___aldiv@divisor)),c,w
  3233  00041E  5043               iorwf	((c:___aldiv@divisor+1)),c,w
  3234  000420  1044               iorwf	((c:___aldiv@divisor+2)),c,w
  3235  000422  1045               iorwf	((c:___aldiv@divisor+3)),c,w
  3236  000424  1046               	btfsc	status,2
  3237  000426  B4D8               	goto	u621
  3238  000428  EF18  F002         	goto	u620
  3239  00042C  EF1A  F002         
  3240                           u621:
  3241  000430                     	goto	l1438
  3242  000430  EF5C  F002         u620:
  3243  000434                     	line	24
  3244                           	
  3245                           l1420:
  3246  000434                     	movlw	low(01h)
  3247  000434  0E01               	movwf	((c:___aldiv@counter)),c
  3248  000436  6E47               	line	25
  3249                           	goto	l1424
  3250  000438  EF26  F002         	
  3251                           l272:
  3252  00043C                     	line	26
  3253                           	
  3254                           l1422:
  3255  00043C                     	bcf	status,0
  3256  00043C  90D8               	rlcf	((c:___aldiv@divisor)),c
  3257  00043E  3643               	rlcf	((c:___aldiv@divisor+1)),c
  3258  000440  3644               	rlcf	((c:___aldiv@divisor+2)),c
  3259  000442  3645               	rlcf	((c:___aldiv@divisor+3)),c
  3260  000444  3646               	line	27
  3261                           	incf	((c:___aldiv@counter)),c
  3262  000446  2A47               	goto	l1424
  3263  000448  EF26  F002         	line	28
  3264                           	
  3265                           l271:
  3266  00044C                     	line	25
  3267                           	
  3268                           l1424:
  3269  00044C                     	
  3270                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
  3271  00044C  AE46               	goto	u631
  3272  00044E  EF2B  F002         	goto	u630
  3273  000452  EF2D  F002         u631:
  3274  000456                     	goto	l1422
  3275  000456  EF1E  F002         u630:
  3276  00045A                     	goto	l1426
  3277  00045A  EF31  F002         	
  3278                           l273:
  3279  00045E                     	goto	l1426
  3280  00045E  EF31  F002         	line	29
  3281                           	
  3282                           l274:
  3283  000462                     	line	30
  3284                           	
  3285                           l1426:
  3286  000462                     	bcf	status,0
  3287  000462  90D8               	rlcf	((c:___aldiv@quotient)),c
  3288  000464  3649               	rlcf	((c:___aldiv@quotient+1)),c
  3289  000466  364A               	rlcf	((c:___aldiv@quotient+2)),c
  3290  000468  364B               	rlcf	((c:___aldiv@quotient+3)),c
  3291  00046A  364C               	line	31
  3292                           	
  3293                           l1428:
  3294  00046C                     		movf	((c:___aldiv@divisor)),c,w
  3295  00046C  5043               	subwf	((c:___aldiv@dividend)),c,w
  3296  00046E  5C3F               	movf	((c:___aldiv@divisor+1)),c,w
  3297  000470  5044               	subwfb	((c:___aldiv@dividend+1)),c,w
  3298  000472  5840               	movf	((c:___aldiv@divisor+2)),c,w
  3299  000474  5045               	subwfb	((c:___aldiv@dividend+2)),c,w
  3300  000476  5841               	movf	((c:___aldiv@divisor+3)),c,w
  3301  000478  5046               	subwfb	((c:___aldiv@dividend+3)),c,w
  3302  00047A  5842               	btfss	status,0
  3303  00047C  A0D8               	goto	u641
  3304  00047E  EF43  F002         	goto	u640
  3305  000482  EF45  F002         
  3306                           u641:
  3307  000486                     	goto	l1434
  3308  000486  EF50  F002         u640:
  3309  00048A                     	line	32
  3310                           	
  3311                           l1430:
  3312  00048A                     	movf	((c:___aldiv@divisor)),c,w
  3313  00048A  5043               	subwf	((c:___aldiv@dividend)),c
  3314  00048C  5E3F               	movf	((c:___aldiv@divisor+1)),c,w
  3315  00048E  5044               	subwfb	((c:___aldiv@dividend+1)),c
  3316  000490  5A40               	movf	((c:___aldiv@divisor+2)),c,w
  3317  000492  5045               	subwfb	((c:___aldiv@dividend+2)),c
  3318  000494  5A41               	movf	((c:___aldiv@divisor+3)),c,w
  3319  000496  5046               	subwfb	((c:___aldiv@dividend+3)),c
  3320  000498  5A42               	line	33
  3321                           	
  3322                           l1432:
  3323  00049A                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
  3324  00049A  8049               	goto	l1434
  3325  00049C  EF50  F002         	line	34
  3326                           	
  3327                           l275:
  3328  0004A0                     	line	35
  3329                           	
  3330                           l1434:
  3331  0004A0                     	bcf	status,0
  3332  0004A0  90D8               	rrcf	((c:___aldiv@divisor+3)),c
  3333  0004A2  3246               	rrcf	((c:___aldiv@divisor+2)),c
  3334  0004A4  3245               	rrcf	((c:___aldiv@divisor+1)),c
  3335  0004A6  3244               	rrcf	((c:___aldiv@divisor)),c
  3336  0004A8  3243               	line	36
  3337                           	
  3338                           l1436:
  3339  0004AA                     	decfsz	((c:___aldiv@counter)),c
  3340  0004AA  2E47               	
  3341                           	goto	l1426
  3342  0004AC  EF31  F002         	goto	l1438
  3343  0004B0  EF5C  F002         	
  3344                           l276:
  3345  0004B4                     	goto	l1438
  3346  0004B4  EF5C  F002         	line	37
  3347                           	
  3348                           l270:
  3349  0004B8                     	line	38
  3350                           	
  3351                           l1438:
  3352  0004B8                     	movf	((c:___aldiv@sign)),c,w
  3353  0004B8  5048               	btfsc	status,2
  3354  0004BA  B4D8               	goto	u651
  3355  0004BC  EF62  F002         	goto	u650
  3356  0004C0  EF64  F002         u651:
  3357  0004C4                     	goto	l1442
  3358  0004C4  EF6E  F002         u650:
  3359  0004C8                     	line	39
  3360                           	
  3361                           l1440:
  3362  0004C8                     	comf	((c:___aldiv@quotient+3)),c
  3363  0004C8  1E4C               	comf	((c:___aldiv@quotient+2)),c
  3364  0004CA  1E4B               	comf	((c:___aldiv@quotient+1)),c
  3365  0004CC  1E4A               	negf	((c:___aldiv@quotient)),c
  3366  0004CE  6C49               	movlw	0
  3367  0004D0  0E00               	addwfc	((c:___aldiv@quotient+1)),c
  3368  0004D2  224A               	addwfc	((c:___aldiv@quotient+2)),c
  3369  0004D4  224B               	addwfc	((c:___aldiv@quotient+3)),c
  3370  0004D6  224C               	goto	l1442
  3371  0004D8  EF6E  F002         	
  3372                           l277:
  3373  0004DC                     	line	40
  3374                           	
  3375                           l1442:
  3376  0004DC                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
  3377  0004DC  C049  F03F         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
  3378  0004E0  C04A  F040         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
  3379  0004E4  C04B  F041         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
  3380  0004E8  C04C  F042         	goto	l278
  3381  0004EC  EF78  F002         	
  3382                           l1444:
  3383  0004F0                     	line	41
  3384                           	
  3385                           l278:
  3386  0004F0                     	return	;funcret
  3387  0004F0  0012               	opt stack 0
  3388                           GLOBAL	__end_of___aldiv
  3389                           	__end_of___aldiv:
  3390  0004F2                     	signat	___aldiv,8316
  3391                           	global	_ISR_high
  3392                           
  3393 ;; *************** function _ISR_high *****************
  3394 ;; Defined at:
  3395 ;;		line 61 in file "main.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3409 ;;      Params:         0       0       0       0
  3410 ;;      Locals:         0       0       0       0
  3411 ;;      Temps:          4       0       0       0
  3412 ;;      Totals:         4       0       0       0
  3413 ;;Total ram usage:        4 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		Interrupt level 2
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           psect	intcode,class=CODE,space=0,reloc=2
  3422                           global __pintcode
  3423                           __pintcode:
  3424  000008                     psect	intcode
  3425                           	file	"main.c"
  3426                           	line	61
  3427                           	global	__size_of_ISR_high
  3428                           	__size_of_ISR_high	equ	__end_of_ISR_high-_ISR_high
  3429  0000                     	
  3430                           _ISR_high:
  3431  000008                     ;incstack = 0
  3432                           	opt	stack 28
  3433                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  3434  000008  825B               	movff	fsr2l+0,??_ISR_high+2
  3435  00000A  CFD9 F031          	movff	fsr2h+0,??_ISR_high+3
  3436  00000E  CFDA F032          	line	63
  3437                           	
  3438                           i2l1088:
  3439  000012                     ;main.c: 63:     if(1 == TMR5IE && 1 == TMR5IF)
  3440                           	btfss	c:(32024/8),(32024)&7	;volatile
  3441  000012  A0A3               	goto	i2u22_41
  3442  000014  EF0E  F000         	goto	i2u22_40
  3443  000018  EF10  F000         i2u22_41:
  3444  00001C                     	goto	i2l143
  3445  00001C  EF19  F000         i2u22_40:
  3446  000020                     	
  3447                           i2l1090:
  3448  000020                     	btfss	c:(32032/8),(32032)&7	;volatile
  3449  000020  A0A4               	goto	i2u23_41
  3450  000022  EF15  F000         	goto	i2u23_40
  3451  000026  EF17  F000         i2u23_41:
  3452  00002A                     	goto	i2l143
  3453  00002A  EF19  F000         i2u23_40:
  3454  00002E                     	line	65
  3455                           	
  3456                           i2l1092:
  3457  00002E                     ;main.c: 64:     {;main.c: 65:         TMR5IF = 0;
  3458                           	bcf	c:(32032/8),(32032)&7	;volatile
  3459  00002E  90A4               	line	66
  3460                           ;main.c: 66:         GPREG.STPCRL = 1;
  3461                           	bsf	((c:_GPREG)),c,3
  3462  000030  8627               	line	67
  3463                           ;main.c: 67:     }
  3464                           	
  3465                           i2l143:
  3466  000032                     	line	69
  3467                           ;main.c: 69:     if(1 == TMR1IE && 1 == TMR1IF)
  3468                           	btfss	c:(31976/8),(31976)&7	;volatile
  3469  000032  A09D               	goto	i2u24_41
  3470  000034  EF1E  F000         	goto	i2u24_40
  3471  000038  EF20  F000         i2u24_41:
  3472  00003C                     	goto	i2l1100
  3473  00003C  EF30  F000         i2u24_40:
  3474  000040                     	
  3475                           i2l1094:
  3476  000040                     	btfss	c:(31984/8),(31984)&7	;volatile
  3477  000040  A09E               	goto	i2u25_41
  3478  000042  EF25  F000         	goto	i2u25_40
  3479  000046  EF27  F000         i2u25_41:
  3480  00004A                     	goto	i2l1100
  3481  00004A  EF30  F000         i2u25_40:
  3482  00004E                     	line	71
  3483                           	
  3484                           i2l1096:
  3485  00004E                     ;main.c: 70:     {;main.c: 71:         GPREG.STCTRL = 1;
  3486                           	bsf	((c:_GPREG)),c,1
  3487  00004E  8227               	line	72
  3488                           ;main.c: 72:         TMR1IF = 0;
  3489                           	bcf	c:(31984/8),(31984)&7	;volatile
  3490  000050  909E               	line	73
  3491                           ;main.c: 73:         TMR1ON = 0;
  3492                           	bcf	c:(32360/8),(32360)&7	;volatile
  3493  000052  90CD               	line	74
  3494                           	
  3495                           i2l1098:
  3496  000054                     ;main.c: 74:         TMR1 = 65485;
  3497                           	movlw	high(0FFCDh)
  3498  000054  0EFF               	movwf	((c:4046+1)),c	;volatile
  3499  000056  6ECF               	movlw	low(0FFCDh)
  3500  000058  0ECD               	movwf	((c:4046)),c	;volatile
  3501  00005A  6ECE               	goto	i2l1100
  3502  00005C  EF30  F000         	line	76
  3503                           ;main.c: 76:     }
  3504                           	
  3505                           i2l144:
  3506  000060                     	line	78
  3507                           	
  3508                           i2l1100:
  3509  000060                     ;main.c: 78:     if((1 == TXIE) && (1 == TXIF))
  3510                           	btfss	c:(31980/8),(31980)&7	;volatile
  3511  000060  A89D               	goto	i2u26_41
  3512  000062  EF35  F000         	goto	i2u26_40
  3513  000066  EF37  F000         i2u26_41:
  3514  00006A                     	goto	i2l149
  3515  00006A  EF6D  F000         i2u26_40:
  3516  00006E                     	
  3517                           i2l1102:
  3518  00006E                     	btfss	c:(31988/8),(31988)&7	;volatile
  3519  00006E  A89E               	goto	i2u27_41
  3520  000070  EF3C  F000         	goto	i2u27_40
  3521  000074  EF3E  F000         i2u27_41:
  3522  000078                     	goto	i2l149
  3523  000078  EF6D  F000         i2u27_40:
  3524  00007C                     	line	80
  3525                           	
  3526                           i2l1104:
  3527  00007C                     ;main.c: 79:     {;main.c: 80:         if(4 < cursor)
  3528                           		movf	((c:_cursor)),c,w
  3529  00007C  5025               	xorlw	80h
  3530  00007E  0A80               	addlw	-(80h^05h)
  3531  000080  0F7B               	btfss	status,0
  3532  000082  A0D8               	goto	i2u28_41
  3533  000084  EF46  F000         	goto	i2u28_40
  3534  000088  EF48  F000         
  3535                           i2u28_41:
  3536  00008C                     	goto	i2l1108
  3537  00008C  EF4C  F000         i2u28_40:
  3538  000090                     	line	82
  3539                           	
  3540                           i2l1106:
  3541  000090                     ;main.c: 81:         {;main.c: 82:             TXREG = 0x2C;
  3542                           	movlw	low(02Ch)
  3543  000090  0E2C               	movwf	((c:4013)),c	;volatile
  3544  000092  6EAD               	line	83
  3545                           ;main.c: 83:         } else {
  3546                           	goto	i2l1110
  3547  000094  EF5B  F000         	
  3548                           i2l146:
  3549  000098                     	line	84
  3550                           	
  3551                           i2l1108:
  3552  000098                     ;main.c: 84:             TXREG = *(string_vel + cursor);
  3553                           	movff	(c:_cursor),??_ISR_high+0+0
  3554  000098  C025  F02F         	clrf	(??_ISR_high+0+0+1)&0ffh,c
  3555  00009C  6A30               	btfsc	(??_ISR_high+0+0)&0ffh,c,7
  3556  00009E  BE2F               	decf	(??_ISR_high+0+0+1)&0ffh,c
  3557  0000A0  0630               	movf	(??_ISR_high+0+0),c,w
  3558  0000A2  502F               	addwf	((c:_string_vel)),c,w
  3559  0000A4  241B               	movwf	c:fsr2l
  3560  0000A6  6ED9               	movf	(??_ISR_high+0+1),c,w
  3561  0000A8  5030               	addwfc	((c:_string_vel+1)),c,w
  3562  0000AA  201C               	movwf	1+c:fsr2l
  3563  0000AC  6EDA               	movf	indf2,w
  3564  0000AE  50DF               	movwf	((c:4013)),c	;volatile
  3565  0000B0  6EAD               	goto	i2l1110
  3566  0000B2  EF5B  F000         	line	85
  3567                           ;main.c: 85:         }
  3568                           	
  3569                           i2l147:
  3570  0000B6                     	line	86
  3571                           	
  3572                           i2l1110:
  3573  0000B6                     ;main.c: 86:         cursor++;
  3574                           	incf	((c:_cursor)),c
  3575  0000B6  2A25               	line	87
  3576                           	
  3577                           i2l1112:
  3578  0000B8                     ;main.c: 87:         if(5 < cursor)
  3579                           		movf	((c:_cursor)),c,w
  3580  0000B8  5025               	xorlw	80h
  3581  0000BA  0A80               	addlw	-(80h^06h)
  3582  0000BC  0F7A               	btfss	status,0
  3583  0000BE  A0D8               	goto	i2u29_41
  3584  0000C0  EF64  F000         	goto	i2u29_40
  3585  0000C4  EF66  F000         
  3586                           i2u29_41:
  3587  0000C8                     	goto	i2l149
  3588  0000C8  EF6D  F000         i2u29_40:
  3589  0000CC                     	line	89
  3590                           	
  3591                           i2l1114:
  3592  0000CC                     ;main.c: 88:         {;main.c: 89:             TXIE = 0;
  3593                           	bcf	c:(31980/8),(31980)&7	;volatile
  3594  0000CC  989D               	line	90
  3595                           	
  3596                           i2l1116:
  3597  0000CE                     ;main.c: 90:             cursor = 0;
  3598                           	movlw	low(0)
  3599  0000CE  0E00               	movwf	((c:_cursor)),c
  3600  0000D0  6E25               	goto	i2l149
  3601  0000D2  EF6D  F000         	line	91
  3602                           ;main.c: 91:         }
  3603                           	
  3604                           i2l148:
  3605  0000D6                     	goto	i2l149
  3606  0000D6  EF6D  F000         	line	92
  3607                           ;main.c: 92:     }
  3608                           	
  3609                           i2l145:
  3610  0000DA                     	line	94
  3611                           	
  3612                           i2l149:
  3613  0000DA                     	movff	??_ISR_high+3,fsr2h+0
  3614  0000DA  C032  FFDA         	movff	??_ISR_high+2,fsr2l+0
  3615  0000DE  C031  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  3616  0000E2  925B               	retfie f
  3617  0000E4  0011               	opt stack 0
  3618                           GLOBAL	__end_of_ISR_high
  3619                           	__end_of_ISR_high:
  3620  0000E6                     	signat	_ISR_high,89
  3621                           	GLOBAL	__activetblptr
  3622                           __activetblptr	EQU	0
  3623  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  3624                           	PSECT	rparam,class=COMRAM,space=1,noexec
  3625                           	GLOBAL	__Lrparam
  3626                           	FNCONF	rparam,??,?
  3627                           	GLOBAL	___rparam_used
  3628                           	___rparam_used EQU 1
  3629  0000                     	GLOBAL	___param_bank
  3630                           	___param_bank EQU 0
  3631  0000                     GLOBAL	__Lparam, __Hparam
  3632                           GLOBAL	__Lrparam, __Hrparam
  3633                           __Lparam	EQU	__Lrparam
  3634  0000                     __Hparam	EQU	__Hrparam
  3635  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  3636                           	global	btemp
  3637                           btemp:
  3638  00005B                     	ds	1
  3639  00005B                     	global	int$flags
  3640                           	int$flags	set btemp
  3641  0000                     	global	wtemp8
  3642                           	wtemp8 set btemp+1
  3643  0000                     	global	ttemp5
  3644                           	ttemp5 set btemp+1
  3645  0000                     	global	ttemp6
  3646                           	ttemp6 set btemp+4
  3647  0000                     	global	ttemp7
  3648                           	ttemp7 set btemp+8
  3649  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      90
    BANK0           160      4       4
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    string_input	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__int2char	PTR unsigned char  size(2) Largest target is 5
		 -> int2char@string(COMRAM[5]), 

    string_vel	PTR unsigned char  size(2) Largest target is 5
		 -> NULL(NULL[0]), int2char@string(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_calculatePWM
    _int2char->___lwdiv
    _write_PWM->_calculatePWM
    _calculatePWM->___aldiv
    ___aldiv->___lmul

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_write_PWM
    _init_PWM->_write_PWM

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4345
                                              3 BANK0      1     1      0
                       _calculatePWM
                           _init_ISR
                           _init_PWM
                           _init_QEI
                          _init_TMR1
                          _init_UART
                         _init_VNHIO
                           _int2char
                          _write_PWM
 ---------------------------------------------------------------------------------
 (1) _int2char                                             5     3      2    1090
                                             11 COMRAM     5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _init_VNHIO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_QEI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PWM                                             0     0      0     245
                          _write_PWM
 ---------------------------------------------------------------------------------
 (1) _write_PWM                                            3     1      2     245
                                              0 BANK0      3     1      2
                       _calculatePWM (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calculatePWM                                        13     9      4    2762
                                             30 COMRAM    12     8      4
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1356
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             16 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_high                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculatePWM
     ___aldiv
       ___lmul (ARG)
     ___lldiv
     ___lmul
   _init_ISR
   _init_PWM
     _write_PWM
       _calculatePWM (ARG)
         ___aldiv
           ___lmul (ARG)
         ___lldiv
         ___lmul
   _init_QEI
   _init_TMR1
   _init_UART
   _init_VNHIO
   _int2char
     ___lwdiv
     ___lwmod
   _write_PWM
     _calculatePWM (ARG)
       ___aldiv
         ___lmul (ARG)
       ___lldiv
       ___lmul

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4       4       5        2.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E       3        0.0%
DATA                 0      0      5E      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Oct 29 18:59:20 2018

           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$RC 000000                      l210 0842  
                    l211 0852                      l230 0602                      l231 0640  
                    l232 0654                      l208 07F6                      l160 05AA  
                    l233 0664                      l209 0818                      l226 0654  
                    l170 0932                      l154 054A                      l227 05EC  
                    l163 013C                      l155 05A2                      l228 05DC  
                    l164 014A                      l156 0596                      l229 05FE  
                    l165 031A                      l173 0924                      l157 059A  
                    l270 04B8                      l166 0350                      l182 08C6  
                    l158 05A6                      l271 044C                      l167 03BC  
                    l159 05AA                      l272 043C                      l176 08E4  
                    l273 045E                      l185 0912                      l193 074A  
                    l274 0462                      l194 06FE                      l275 04A0  
                    l179 08A8                      l195 075C                      l276 04B4  
                    l268 03E8                      l188 08FC                      l700 07D8  
                    l196 0768                      l277 04DC                      l269 040E  
                    l701 0790                      l278 04F0                      l702 0784  
                    l703 07A2                      l704 07A6                      l705 07C8  
                    l706 07D8                      l707 07E0                      l690 06E4  
                    l691 0694                      l692 0688                      l693 06A6  
                    l694 06AA                      l695 06D4                      l696 06E4  
                    l697 06EC                      _GIE 007F97             __CFG_CPB$OFF 000000  
                    _PR2 000FCB                      _PID 0001                      u600 03D0  
                    u601 03CC                      _PR5 000F90                      u610 03F6  
           __CFG_CPD$OFF 000000                      u611 03F2                      u620 0434  
                    u700 079E                      u621 0430                      u701 079A  
                    u630 045A                      u550 0804                      u710 07BC  
                    u631 0456                      u551 0800                      u711 07B8  
                    u640 048A                      u560 0842                      u720 00F8  
                    u641 0486                      u561 083E                      u721 00F4  
                    u650 04C8                      u570 05D4                      u730 0306  
                    u651 04C4                      u571 05D0                      u731 0302  
                    u580 05FA                      u740 033C                      u660 0680  
                    u581 05F6                      u741 0338                      u661 067C  
                    u590 062A                      u670 06A2                      u750 0758  
                    u591 0626                      u671 069E                      u751 0754  
                    u680 06C6                      u760 0558                      u681 06C2  
                    u761 0554                      u690 077C                      u770 058E  
                    u691 0778                      u771 058A                      _vel 002D  
                    prod 000FF3                      wreg 000FE8             __CFG_IESO$ON 000000  
            int2char@num 003C             __CFG_LVP$OFF 000000                     l1400 064A  
                   l1410 03E8                     l1402 03BE                     l1420 0434  
                   l1412 03F6                     l1404 03C2                     l1500 08D4  
                   l1430 048A                     l1422 043C                     l1414 0406  
                   l1406 03D0                     l1502 08D6                     l1510 08BE  
                   l1440 04C8                     l1432 049A                     l1424 044C  
                   l1416 040E                     l1408 03E0                     l1520 08E6  
                   l1512 08C2                     l1504 08AA                     l1600 0558  
                   l1442 04DC                     l1434 04A0                     l1426 0462  
                   l1418 041E                     l1370 07E2                     l1530 010C  
                   l1522 00EA                     l1514 08C4                     l1506 08B2  
                   l1450 0680                     l1602 056A                     l1444 04F0  
                   l1436 04AA                     l1428 046C                     l1380 05AE  
                   l1372 07F6                     l1540 0166                     l1532 0110  
                   l1524 00F8                     l1364 0882                     l1508 08B4  
                   l1516 08FE                     l1460 06C6                     l1452 0688  
                   l1604 057E                     l1438 04B8                     l1390 0602  
                   l1382 05BE                     l1374 0804                     l1550 02F8  
                   l1542 01C0                     l1526 0100                     l1534 013C  
                   l1366 0898                     l1518 0902                     l1462 06CE  
                   l1454 0694                     l1446 0666                     l1470 077C  
                   l1606 0580                     l1392 060C                     l1384 05D4  
                   l1376 0818                     l1560 03A8                     l1552 0306  
                   l1544 020E                     l1536 0144                     l1528 0106  
                   l1368 08A4                     l1464 06D4                     l1456 06AA  
                   l1448 066E                     l1480 07C8                     l1472 0784  
                   l1608 058E                     l1394 062A                     l1386 05DC  
                   l1378 0822                     l1562 03BC                     l1554 031A  
                   l1546 02BC                     l1538 014A                     l1490 0920  
                   l1466 06DA                     l1458 06B0                     l1482 07CE  
                   l1474 0790                     l1570 0728                     l1396 063A  
                   l1388 05EC                     l1556 033C                     l1548 02F0  
                   l1492 0922                     l1484 0914                     l1476 07A6  
                   l1468 076A                     l1572 0744                     l1564 06EE  
                   l1580 04F2                     l1398 0640                     l1558 0350  
                   l1494 0926                     l1486 091C                     l1478 07BC  
                   l1574 074A                     l1566 06F6                     l1590 0536  
                   l1582 0526                     l1496 08C8                     l1488 091E  
                   l1576 075C                     l1568 06FE                     l1592 053A  
                   l1584 052A                     l1498 08CC                     l1578 0768  
                   l1594 053E                     l1586 052E                     l1596 0540  
                   l1588 0532                     l1598 054A                     _IPEN 007E87  
            main@counter 0063                     _TMR1 000FCE                     _TXIE 007CEC  
                   _TXIF 007CF4                     _TXIP 007CFC            __CFG_FCMEN$ON 000000  
                   _main 04F2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     btemp 005B                     _volt 0011  
          __CFG_BOREN$ON 000000                     prodl 000FF3                     start 00E6  
          __CFG_MCLRE$ON 000000             ___param_bank 000000          __end_of___aldiv 04F2  
                  ?_main 002F          __end_of___lldiv 0666                    _T1CON 000FCD  
                  _T2CON 000FCA                    _LATA0 007C48                    _LATA1 007C49  
                  _LATC2 007C5A                    _T5CON 000FB7          __end_of___lwdiv 06EE  
                  _GPREG 0027          __end_of___lwmod 07E2                    i2l143 0032  
                  i2l144 0060                    i2l145 00DA                    i2l146 0098  
                  i2l147 00B6                    i2l148 00D6                    i2l149 00DA  
                  _RCSTA 000FAB                    _SPBRG 000FAF                    _VELRH 000F69  
                  _VELRL 000F68                    _TXREG 000FAD                    _TXSTA 000FAC  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
    ___lmul@multiplicand 0037            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
       __end_of_ISR_high 00E6            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _error 0021  
                  _input 0023                    tablat 000FF5                    ttemp5 005C  
                  ttemp6 005F                    ttemp7 0063                    status 000FD8  
                  wtemp8 005C            int2char@digit 003E          __initialization 0854  
         __CFG_HPOL$HIGH 000000             __end_of_main 05AE             _string_input 0019  
         __CFG_LPOL$HIGH 000000                   ??_main 0059            __activetblptr 000000  
                 _CCPR1L 000FBE                   _ANSEL0 000FB8                   _ANSEL1 000FB9  
  __size_of_calculatePWM 02D4                   i2l1100 0060                   i2l1110 00B6  
                 i2l1102 006E                   i2l1112 00B8                   i2l1104 007C  
                 i2l1114 00CC                   i2l1106 0090                   i2l1116 00CE  
                 i2l1108 0098                   i2l1090 0020                   i2l1092 002E  
                 i2l1094 0040                   i2l1096 004E                   i2l1088 0012  
                 i2l1098 0054           __CFG_WDTEN$OFF 000000                   _QEICON 000FB6  
                 _OSCCON 000FD3                   _TMR1IE 007CE8                   _TMR1IF 007CF0  
         __CFG_WINEN$OFF 000000                   _TMR1IP 007CF8                   _TMR5IE 007D18  
                 _TMR5IF 007D20                   _TMR1ON 007E68                   _TMR5IP 007D28  
                 _TMR5ON 007DB8                   _TRISA0 007C90                   _TRISA1 007C91  
                 _TRISA4 007C94                   _TRISA5 007C95                   _TRISC2 007CA2  
                 _TRISC6 007CA6           __CFG_SSPMX$RC7 000000         __end_of_int2char 076A  
                 ___lmul 07E2                ??___aldiv 0047           __CFG_STVREN$ON 000000  
              ??___lldiv 003B                ??___lwdiv 0037                ??___lwmod 0037  
       __end_of_init_QEI 08C8         __end_of_init_ISR 08FE         __end_of_init_PWM 08E6  
                 _cursor 0025                   clear_0 0872             __pdataCOMRAM 0059  
           _calculatePWM 00EA                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0878  
        __CFG_FLTAMX$RC1 000000            ___rparam_used 000001          __CFG_T1OSCMX$ON 000000  
         __pcstackCOMRAM 002F                ?_ISR_high 002F           int2char@number 003A  
         int2char@string 0028       __size_of_init_UART 0016       __size_of_init_TMR1 000E  
                ?___lmul 0033               ??_ISR_high 002F          __CFG_WDPS$32768 000000  
                _CAP1REN 007B1E                  _CCP1CON 000FBD                  _BAUDCON 000FAA  
         ___lmul@product 003B          __CFG_PWM4MX$RB5 000000                  i2u22_40 0020  
                i2u22_41 001C                  i2u23_40 002E                  i2u23_41 002A  
                i2u24_40 0040                  i2u24_41 003C                  i2u25_40 004E  
                i2u25_41 004A                  i2u26_40 006E                  i2u26_41 006A  
                i2u27_40 007C                  i2u27_41 0078                  i2u28_40 0090  
                i2u28_41 008C                  i2u29_40 00CC                  i2u29_41 00C8  
              ?_int2char 003A          __CFG_PWMPIN$OFF 000000                ?_init_QEI 002F  
              ?_init_ISR 002F                ?_init_PWM 002F       __size_of_write_PWM 0028  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
             _init_VNHIO 0914                  ___aldiv 03BE          __size_of___lmul 0072  
                ___lldiv 05AE                  ___lwdiv 0666                  ___lwmod 076A  
                __pcinit 0854                  __ramtop 0300                  __ptext0 04F2  
                __ptext1 06EE                  __ptext2 076A                  __ptext3 0666  
                __ptext4 0914                  __ptext5 08FE                  __ptext6 0926  
                __ptext7 08AA                  __ptext8 08C8                  __ptext9 0882  
      __end_of_init_UART 0914        __end_of_init_TMR1 0934                  _ref_vel 0059  
       ___aldiv@dividend 003F                  _vel_ant 001D                  _vel_rpm 0026  
             ??_int2char 003C     end_of_initialization 0878               ??_init_QEI 0033  
             ??_init_ISR 0033               ??_init_PWM 0059          ___lldiv@divisor 0037  
        ___lldiv@counter 003F         ___aldiv@quotient 0049                  postinc0 000FEE  
      __end_of_write_PWM 08AA               _suma_error 0015              _CCP1CONbits 000FBD  
            ?_init_VNHIO 002F               _string_vel 001B         __CFG_EXCLKMX$RC3 000000  
         __end_of___lmul 0854            __pidataCOMRAM 0934        __size_of_ISR_high 00DE  
    start_initialization 0854              _aceleracion 000D                 ??___lmul 003B  
     write_PWM@dutyCycle 0060              __pbssCOMRAM 0001            __pcstackBANK0 0060  
    __size_of_init_VNHIO 0012        __size_of_int2char 007C        __size_of_init_QEI 001E  
      __size_of_init_ISR 0018        __size_of_init_PWM 001E         ___lwdiv@dividend 0033  
              __pintcode 0008                 ?___aldiv 003F                 ?___lldiv 0033  
               ?___lwdiv 0033                 ?___lwmod 0033                 _CAP1BUFH 000F69  
               _CAP1BUFL 000F68                _init_UART 08FE                _init_TMR1 0926  
       ___lwdiv@quotient 0038                _error_ant 001F          ___aldiv@divisor 0043  
        ___aldiv@counter 0047                 _ISR_high 0008            ?_calculatePWM 004D  
             ?_init_UART 002F               ?_init_TMR1 002F                _write_PWM 0882  
      ___lmul@multiplier 0033                 __Hrparam 0000             ??_init_VNHIO 0033  
               __Lrparam 0000         __size_of___aldiv 0134         __size_of___lldiv 00B8  
       __size_of___lwdiv 0088         __size_of___lwmod 0078           ??_calculatePWM 0051  
        ___lwdiv@divisor 0035          ___lwdiv@counter 0037                 __ptext10 08E6  
               __ptext11 00EA                 __ptext12 07E2                 __ptext13 05AE  
               __ptext14 03BE               ?_write_PWM 0060       __end_of_init_VNHIO 0926  
               _int2char 06EE                 _init_QEI 08AA                 _init_ISR 08E6  
               _init_PWM 08C8            __size_of_main 00BC                 int$flags 005B  
            ??_init_UART 0033              ??_init_TMR1 0033     calculatePWM@setpoint 002F  
               intlevel2 0000         ___lwmod@dividend 0033         ___lldiv@dividend 0033  
       ___lldiv@quotient 003B          ___lwmod@divisor 0035          ___lwmod@counter 0037  
           ___aldiv@sign 0048              ??_write_PWM 0062     __end_of_calculatePWM 03BE  
