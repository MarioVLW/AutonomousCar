

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Nov 13 00:06:53 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4431 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   108                           DFLTCON equ 0F60h ;# 
   109  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   110                           CAP3CON equ 0F61h ;# 
   111  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   112                           CAP2CON equ 0F62h ;# 
   113  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   114                           CAP1CON equ 0F63h ;# 
   115  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   116                           CAP3BUFL equ 0F64h ;# 
   117  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   118                           MAXCNTL equ 0F64h ;# 
   119  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   120                           CAP3BUFH equ 0F65h ;# 
   121  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   122                           MAXCNTH equ 0F65h ;# 
   123  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   124                           CAP2BUFL equ 0F66h ;# 
   125  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   126                           POSCNTL equ 0F66h ;# 
   127  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   128                           CAP2BUFH equ 0F67h ;# 
   129  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   130                           POSCNTH equ 0F67h ;# 
   131  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   132                           CAP1BUFL equ 0F68h ;# 
   133  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   134                           VELRL equ 0F68h ;# 
   135  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   136                           CAP1BUFH equ 0F69h ;# 
   137  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   138                           VELRH equ 0F69h ;# 
   139  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   140                           OVDCONS equ 0F6Ah ;# 
   141  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   142                           OVDCOND equ 0F6Bh ;# 
   143  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   144                           FLTCONFIG equ 0F6Ch ;# 
   145  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   146                           DTCON equ 0F6Dh ;# 
   147  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   148                           PWMCON1 equ 0F6Eh ;# 
   149  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   150                           PWMCON0 equ 0F6Fh ;# 
   151  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   152                           SEVTCMPH equ 0F70h ;# 
   153  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   154                           SEVTCMPL equ 0F71h ;# 
   155  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   156                           PDC3H equ 0F72h ;# 
   157  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   158                           PDC3L equ 0F73h ;# 
   159  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   160                           PDC2H equ 0F74h ;# 
   161  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   162                           PDC2L equ 0F75h ;# 
   163  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   164                           PDC1H equ 0F76h ;# 
   165  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   166                           PDC1L equ 0F77h ;# 
   167  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   168                           PDC0H equ 0F78h ;# 
   169  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   170                           PDC0L equ 0F79h ;# 
   171  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   172                           PTPERH equ 0F7Ah ;# 
   173  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   174                           PTPERL equ 0F7Bh ;# 
   175  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   176                           PTMRH equ 0F7Ch ;# 
   177  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   178                           PTMRL equ 0F7Dh ;# 
   179  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   180                           PTCON1 equ 0F7Eh ;# 
   181  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   182                           PTCON0 equ 0F7Fh ;# 
   183  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   184                           PORTA equ 0F80h ;# 
   185  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   186                           PORTB equ 0F81h ;# 
   187  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   188                           PORTC equ 0F82h ;# 
   189  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   190                           PORTD equ 0F83h ;# 
   191  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   192                           PORTE equ 0F84h ;# 
   193  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   194                           TMR5 equ 0F87h ;# 
   195  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   196                           TMR5L equ 0F87h ;# 
   197  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   198                           TMR5H equ 0F88h ;# 
   199  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   200                           LATA equ 0F89h ;# 
   201  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   202                           LATB equ 0F8Ah ;# 
   203  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   204                           LATC equ 0F8Bh ;# 
   205  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   206                           LATD equ 0F8Ch ;# 
   207  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   208                           LATE equ 0F8Dh ;# 
   209  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   210                           PR5 equ 0F90h ;# 
   211  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   212                           PR5L equ 0F90h ;# 
   213  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   214                           PR5H equ 0F91h ;# 
   215  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   216                           TRISA equ 0F92h ;# 
   217  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   218                           DDRA equ 0F92h ;# 
   219  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   220                           TRISB equ 0F93h ;# 
   221  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   222                           DDRB equ 0F93h ;# 
   223  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   224                           TRISC equ 0F94h ;# 
   225  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   226                           DDRC equ 0F94h ;# 
   227  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   228                           TRISD equ 0F95h ;# 
   229  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   230                           DDRD equ 0F95h ;# 
   231  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   232                           TRISE equ 0F96h ;# 
   233  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   234                           DDRE equ 0F96h ;# 
   235  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   236                           ADCHS equ 0F99h ;# 
   237  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   238                           ADCON3 equ 0F9Ah ;# 
   239  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   240                           OSCTUNE equ 0F9Bh ;# 
   241  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   242                           PIE1 equ 0F9Dh ;# 
   243  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   244                           PIR1 equ 0F9Eh ;# 
   245  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   246                           IPR1 equ 0F9Fh ;# 
   247  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   248                           PIE2 equ 0FA0h ;# 
   249  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   250                           PIR2 equ 0FA1h ;# 
   251  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   252                           IPR2 equ 0FA2h ;# 
   253  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   254                           PIE3 equ 0FA3h ;# 
   255  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   256                           PIR3 equ 0FA4h ;# 
   257  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   258                           IPR3 equ 0FA5h ;# 
   259  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   260                           EECON1 equ 0FA6h ;# 
   261  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   262                           EECON2 equ 0FA7h ;# 
   263  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   264                           EEDATA equ 0FA8h ;# 
   265  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   266                           EEADR equ 0FA9h ;# 
   267  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   268                           BAUDCON equ 0FAAh ;# 
   269  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   270                           BAUDCTL equ 0FAAh ;# 
   271  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   272                           RCSTA equ 0FABh ;# 
   273  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   274                           RCSTA1 equ 0FABh ;# 
   275  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   276                           TXSTA equ 0FACh ;# 
   277  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   278                           TXSTA1 equ 0FACh ;# 
   279  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   280                           TXREG equ 0FADh ;# 
   281  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   282                           TXREG1 equ 0FADh ;# 
   283  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   284                           RCREG equ 0FAEh ;# 
   285  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   286                           RCREG1 equ 0FAEh ;# 
   287  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   288                           SPBRG equ 0FAFh ;# 
   289  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   290                           SPBRG1 equ 0FAFh ;# 
   291  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   292                           SPBRGH equ 0FB0h ;# 
   293  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   294                           QEICON equ 0FB6h ;# 
   295  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   296                           T5CON equ 0FB7h ;# 
   297  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   298                           ANSEL0 equ 0FB8h ;# 
   299  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   300                           ANSEL1 equ 0FB9h ;# 
   301  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   302                           CCP2CON equ 0FBAh ;# 
   303  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   304                           CCPR2 equ 0FBBh ;# 
   305  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   306                           CCPR2L equ 0FBBh ;# 
   307  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   308                           CCPR2H equ 0FBCh ;# 
   309  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   310                           CCP1CON equ 0FBDh ;# 
   311  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   312                           CCPR1 equ 0FBEh ;# 
   313  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   314                           CCPR1L equ 0FBEh ;# 
   315  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   316                           CCPR1H equ 0FBFh ;# 
   317  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   318                           ADCON2 equ 0FC0h ;# 
   319  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   320                           ADCON1 equ 0FC1h ;# 
   321  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   322                           ADCON0 equ 0FC2h ;# 
   323  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   324                           ADRES equ 0FC3h ;# 
   325  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   326                           ADRESL equ 0FC3h ;# 
   327  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   328                           ADRESH equ 0FC4h ;# 
   329  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   330                           SSPCON equ 0FC6h ;# 
   331  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   332                           SSPCON1 equ 0FC6h ;# 
   333  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   334                           SSPSTAT equ 0FC7h ;# 
   335  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   336                           SSPADD equ 0FC8h ;# 
   337  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   338                           SSPBUF equ 0FC9h ;# 
   339  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   340                           T2CON equ 0FCAh ;# 
   341  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   342                           PR2 equ 0FCBh ;# 
   343  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   344                           MEMCON equ 0FCBh ;# 
   345  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   346                           TMR2 equ 0FCCh ;# 
   347  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   348                           T1CON equ 0FCDh ;# 
   349  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   350                           TMR1 equ 0FCEh ;# 
   351  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   352                           TMR1L equ 0FCEh ;# 
   353  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   354                           TMR1H equ 0FCFh ;# 
   355  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   356                           RCON equ 0FD0h ;# 
   357  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   358                           WDTCON equ 0FD1h ;# 
   359  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   360                           LVDCON equ 0FD2h ;# 
   361  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   362                           OSCCON equ 0FD3h ;# 
   363  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   364                           T0CON equ 0FD5h ;# 
   365  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   366                           TMR0 equ 0FD6h ;# 
   367  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   368                           TMR0L equ 0FD6h ;# 
   369  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   370                           TMR0H equ 0FD7h ;# 
   371  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   372                           STATUS equ 0FD8h ;# 
   373  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   374                           FSR2 equ 0FD9h ;# 
   375  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   376                           FSR2L equ 0FD9h ;# 
   377  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   378                           FSR2H equ 0FDAh ;# 
   379  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   380                           PLUSW2 equ 0FDBh ;# 
   381  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   382                           PREINC2 equ 0FDCh ;# 
   383  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   384                           POSTDEC2 equ 0FDDh ;# 
   385  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   386                           POSTINC2 equ 0FDEh ;# 
   387  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   388                           INDF2 equ 0FDFh ;# 
   389  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   390                           BSR equ 0FE0h ;# 
   391  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   392                           FSR1 equ 0FE1h ;# 
   393  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   394                           FSR1L equ 0FE1h ;# 
   395  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   396                           FSR1H equ 0FE2h ;# 
   397  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   398                           PLUSW1 equ 0FE3h ;# 
   399  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   400                           PREINC1 equ 0FE4h ;# 
   401  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   402                           POSTDEC1 equ 0FE5h ;# 
   403  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   404                           POSTINC1 equ 0FE6h ;# 
   405  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   406                           INDF1 equ 0FE7h ;# 
   407  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   408                           WREG equ 0FE8h ;# 
   409  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   410                           FSR0 equ 0FE9h ;# 
   411  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   412                           FSR0L equ 0FE9h ;# 
   413  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   414                           FSR0H equ 0FEAh ;# 
   415  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   416                           PLUSW0 equ 0FEBh ;# 
   417  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   418                           PREINC0 equ 0FECh ;# 
   419  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   420                           POSTDEC0 equ 0FEDh ;# 
   421  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   422                           POSTINC0 equ 0FEEh ;# 
   423  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   424                           INDF0 equ 0FEFh ;# 
   425  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   426                           INTCON3 equ 0FF0h ;# 
   427  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   428                           INTCON2 equ 0FF1h ;# 
   429  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   430                           INTCON equ 0FF2h ;# 
   431  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   432                           PROD equ 0FF3h ;# 
   433  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   434                           PRODL equ 0FF3h ;# 
   435  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   436                           PRODH equ 0FF4h ;# 
   437  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   438                           TABLAT equ 0FF5h ;# 
   439  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   440                           TBLPTR equ 0FF6h ;# 
   441  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   442                           TBLPTRL equ 0FF6h ;# 
   443  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   444                           TBLPTRH equ 0FF7h ;# 
   445  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   446                           TBLPTRU equ 0FF8h ;# 
   447  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   448                           PCLAT equ 0FF9h ;# 
   449  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   450                           PC equ 0FF9h ;# 
   451  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   452                           PCL equ 0FF9h ;# 
   453  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   454                           PCLATH equ 0FFAh ;# 
   455  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   456                           PCLATU equ 0FFBh ;# 
   457  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   458                           STKPTR equ 0FFCh ;# 
   459  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   460                           TOS equ 0FFDh ;# 
   461  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   462                           TOSL equ 0FFDh ;# 
   463  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   464                           TOSH equ 0FFEh ;# 
   465  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   466                           TOSU equ 0FFFh ;# 
   467  0000                     	FNCALL	_main,_calculatePWM
   468                           	FNCALL	_main,_dataToVel
   469                           	FNCALL	_main,_init_I2C
   470                           	FNCALL	_main,_init_ISR
   471                           	FNCALL	_main,_init_PWM
   472                           	FNCALL	_main,_init_QEI
   473                           	FNCALL	_main,_init_TMR1
   474                           	FNCALL	_main,_init_UART
   475                           	FNCALL	_main,_init_VNHIO
   476                           	FNCALL	_main,_int2char
   477                           	FNCALL	_main,_write_PWM
   478                           	FNCALL	_int2char,___lwdiv
   479                           	FNCALL	_int2char,___lwmod
   480                           	FNCALL	_init_PWM,_write_PWM
   481                           	FNCALL	_calculatePWM,___aldiv
   482                           	FNCALL	_calculatePWM,___lldiv
   483                           	FNCALL	_calculatePWM,___lmul
   484                           	FNROOT	_main
   485                           	FNCALL	intlevel2,_ISR_high
   486                           	global	intlevel2
   487                           	FNROOT	intlevel2
   488                           	global	_PID
   489                           	global	_aceleracion
   490                           	global	_volt
   491                           	global	_suma_error
   492                           	global	_string_vel
   493                           	global	_error_ant
   494                           	global	_error
   495                           	global	_i2cData
   496                           	global	_cursor
   497                           	global	_GPREG
   498                           	global	int2char@string
   499                           	global	_vel
   500                           	global	_ref_vel
   501                           psect	nvCOMRAM,class=COMRAM,space=1,noexec
   502                           global __pnvCOMRAM
   503                           __pnvCOMRAM:
   504  000058                     	global	_ref_vel
   505                           _ref_vel:
   506  000058                            ds      2
   507  000058                     	global	_PR5
   508                           _PR5	set	0xF90
   509  0000                     	global	_TMR1
   510                           _TMR1	set	0xFCE
   511  0000                     	global	_SSPCON
   512                           _SSPCON	set	0xFC6
   513  0000                     	global	_SPBRG
   514                           _SPBRG	set	0xFAF
   515  0000                     	global	_BAUDCON
   516                           _BAUDCON	set	0xFAA
   517  0000                     	global	_RCSTA
   518                           _RCSTA	set	0xFAB
   519  0000                     	global	_TXSTA
   520                           _TXSTA	set	0xFAC
   521  0000                     	global	_QEICON
   522                           _QEICON	set	0xFB6
   523  0000                     	global	_T5CON
   524                           _T5CON	set	0xFB7
   525  0000                     	global	_CAP1BUFH
   526                           _CAP1BUFH	set	0xF69
   527  0000                     	global	_CAP1BUFL
   528                           _CAP1BUFL	set	0xF68
   529  0000                     	global	_CCPR1L
   530                           _CCPR1L	set	0xFBE
   531  0000                     	global	_CCP1CONbits
   532                           _CCP1CONbits	set	0xFBD
   533  0000                     	global	_PR2
   534                           _PR2	set	0xFCB
   535  0000                     	global	_T2CON
   536                           _T2CON	set	0xFCA
   537  0000                     	global	_CCP1CON
   538                           _CCP1CON	set	0xFBD
   539  0000                     	global	_ANSEL1
   540                           _ANSEL1	set	0xFB9
   541  0000                     	global	_ANSEL0
   542                           _ANSEL0	set	0xFB8
   543  0000                     	global	_T1CON
   544                           _T1CON	set	0xFCD
   545  0000                     	global	_VELRL
   546                           _VELRL	set	0xF68
   547  0000                     	global	_VELRH
   548                           _VELRH	set	0xF69
   549  0000                     	global	_OSCCON
   550                           _OSCCON	set	0xFD3
   551  0000                     	global	_TXREG
   552                           _TXREG	set	0xFAD
   553  0000                     	global	_SSPADD
   554                           _SSPADD	set	0xFC8
   555  0000                     	global	_SSPBUF
   556                           _SSPBUF	set	0xFC9
   557  0000                     	global	_TRISC4
   558                           _TRISC4	set	0x7CA4
   559  0000                     	global	_TRISC5
   560                           _TRISC5	set	0x7CA5
   561  0000                     	global	_GIE
   562                           _GIE	set	0x7F97
   563  0000                     	global	_IPEN
   564                           _IPEN	set	0x7E87
   565  0000                     	global	_TXIP
   566                           _TXIP	set	0x7CFC
   567  0000                     	global	_SSPIP
   568                           _SSPIP	set	0x7CFB
   569  0000                     	global	_TMR5IP
   570                           _TMR5IP	set	0x7D28
   571  0000                     	global	_TMR1IP
   572                           _TMR1IP	set	0x7CF8
   573  0000                     	global	_TRISC6
   574                           _TRISC6	set	0x7CA6
   575  0000                     	global	_TMR5ON
   576                           _TMR5ON	set	0x7DB8
   577  0000                     	global	_CAP1REN
   578                           _CAP1REN	set	0x7B1E
   579  0000                     	global	_TRISA5
   580                           _TRISA5	set	0x7C95
   581  0000                     	global	_TRISA4
   582                           _TRISA4	set	0x7C94
   583  0000                     	global	_LATC2
   584                           _LATC2	set	0x7C5A
   585  0000                     	global	_TRISC2
   586                           _TRISC2	set	0x7CA2
   587  0000                     	global	_TRISA1
   588                           _TRISA1	set	0x7C91
   589  0000                     	global	_TRISA0
   590                           _TRISA0	set	0x7C90
   591  0000                     	global	_LATA1
   592                           _LATA1	set	0x7C49
   593  0000                     	global	_LATA0
   594                           _LATA0	set	0x7C48
   595  0000                     	global	_TXIF
   596                           _TXIF	set	0x7CF4
   597  0000                     	global	_TXIE
   598                           _TXIE	set	0x7CEC
   599  0000                     	global	_TMR1ON
   600                           _TMR1ON	set	0x7E68
   601  0000                     	global	_TMR1IF
   602                           _TMR1IF	set	0x7CF0
   603  0000                     	global	_TMR1IE
   604                           _TMR1IE	set	0x7CE8
   605  0000                     	global	_TMR5IF
   606                           _TMR5IF	set	0x7D20
   607  0000                     	global	_TMR5IE
   608                           _TMR5IE	set	0x7D18
   609  0000                     	global	_BF
   610                           _BF	set	0x7E38
   611  0000                     	global	_CKP
   612                           _CKP	set	0x7E34
   613  0000                     	global	_WCOL
   614                           _WCOL	set	0x7E37
   615  0000                     	global	_SSPOV
   616                           _SSPOV	set	0x7E36
   617  0000                     	global	_SSPIF
   618                           _SSPIF	set	0x7CF3
   619  0000                     	global	_SSPIE
   620                           _SSPIE	set	0x7CEB
   621  0000                     ; #config settings
   622                           global __CFG_OSC$RC
   623                           __CFG_OSC$RC equ 0x0
   624  0000                     global __CFG_FCMEN$ON
   625                           __CFG_FCMEN$ON equ 0x0
   626  0000                     global __CFG_IESO$ON
   627                           __CFG_IESO$ON equ 0x0
   628  0000                     global __CFG_PWRTEN$OFF
   629                           __CFG_PWRTEN$OFF equ 0x0
   630  0000                     global __CFG_BOREN$ON
   631                           __CFG_BOREN$ON equ 0x0
   632  0000                     global __CFG_WDTEN$OFF
   633                           __CFG_WDTEN$OFF equ 0x0
   634  0000                     global __CFG_WDPS$32768
   635                           __CFG_WDPS$32768 equ 0x0
   636  0000                     global __CFG_WINEN$OFF
   637                           __CFG_WINEN$OFF equ 0x0
   638  0000                     global __CFG_PWMPIN$OFF
   639                           __CFG_PWMPIN$OFF equ 0x0
   640  0000                     global __CFG_LPOL$HIGH
   641                           __CFG_LPOL$HIGH equ 0x0
   642  0000                     global __CFG_HPOL$HIGH
   643                           __CFG_HPOL$HIGH equ 0x0
   644  0000                     global __CFG_T1OSCMX$ON
   645                           __CFG_T1OSCMX$ON equ 0x0
   646  0000                     global __CFG_FLTAMX$RC1
   647                           __CFG_FLTAMX$RC1 equ 0x0
   648  0000                     global __CFG_SSPMX$RD1
   649                           __CFG_SSPMX$RD1 equ 0x0
   650  0000                     global __CFG_PWM4MX$RB5
   651                           __CFG_PWM4MX$RB5 equ 0x0
   652  0000                     global __CFG_EXCLKMX$RC3
   653                           __CFG_EXCLKMX$RC3 equ 0x0
   654  0000                     global __CFG_MCLRE$ON
   655                           __CFG_MCLRE$ON equ 0x0
   656  0000                     global __CFG_STVREN$ON
   657                           __CFG_STVREN$ON equ 0x0
   658  0000                     global __CFG_LVP$OFF
   659                           __CFG_LVP$OFF equ 0x0
   660  0000                     global __CFG_CP0$OFF
   661                           __CFG_CP0$OFF equ 0x0
   662  0000                     global __CFG_CP1$OFF
   663                           __CFG_CP1$OFF equ 0x0
   664  0000                     global __CFG_CP2$OFF
   665                           __CFG_CP2$OFF equ 0x0
   666  0000                     global __CFG_CP3$OFF
   667                           __CFG_CP3$OFF equ 0x0
   668  0000                     global __CFG_CPB$OFF
   669                           __CFG_CPB$OFF equ 0x0
   670  0000                     global __CFG_CPD$OFF
   671                           __CFG_CPD$OFF equ 0x0
   672  0000                     global __CFG_WRT0$OFF
   673                           __CFG_WRT0$OFF equ 0x0
   674  0000                     global __CFG_WRT1$OFF
   675                           __CFG_WRT1$OFF equ 0x0
   676  0000                     global __CFG_WRT2$OFF
   677                           __CFG_WRT2$OFF equ 0x0
   678  0000                     global __CFG_WRT3$OFF
   679                           __CFG_WRT3$OFF equ 0x0
   680  0000                     global __CFG_WRTC$OFF
   681                           __CFG_WRTC$OFF equ 0x0
   682  0000                     global __CFG_WRTB$OFF
   683                           __CFG_WRTB$OFF equ 0x0
   684  0000                     global __CFG_WRTD$OFF
   685                           __CFG_WRTD$OFF equ 0x0
   686  0000                     global __CFG_EBTR0$OFF
   687                           __CFG_EBTR0$OFF equ 0x0
   688  0000                     global __CFG_EBTR1$OFF
   689                           __CFG_EBTR1$OFF equ 0x0
   690  0000                     global __CFG_EBTR2$OFF
   691                           __CFG_EBTR2$OFF equ 0x0
   692  0000                     global __CFG_EBTR3$OFF
   693                           __CFG_EBTR3$OFF equ 0x0
   694  0000                     global __CFG_EBTRB$OFF
   695                           __CFG_EBTRB$OFF equ 0x0
   696  0000                     	file	"C:\Users\MarioVL\AppData\Local\Temp\s50c."
   697                           	line	#
   698                           psect	cinit,class=CODE,delta=1,reloc=2
   699                           global __pcinit
   700                           __pcinit:
   701  0009D4                     global start_initialization
   702                           start_initialization:
   703  0009D4                     
   704                           global __initialization
   705                           __initialization:
   706  0009D4                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   707                           global __pbssCOMRAM
   708                           __pbssCOMRAM:
   709  00002E                     	global	_PID
   710                           _PID:
   711  00002E                            ds      12
   712  00002E                     	global	_aceleracion
   713                           _aceleracion:
   714  00003A                            ds      4
   715  00003A                     	global	_volt
   716                           _volt:
   717  00003E                            ds      4
   718  00003E                     	global	_suma_error
   719                           _suma_error:
   720  000042                            ds      4
   721  000042                     	global	_string_vel
   722                           _string_vel:
   723  000046                            ds      2
   724  000046                     	global	_vel_ant
   725                           	global	_vel_ant
   726                           _vel_ant:
   727  000048                            ds      2
   728  000048                     	global	_error_ant
   729                           _error_ant:
   730  00004A                            ds      2
   731  00004A                     	global	_error
   732                           _error:
   733  00004C                            ds      2
   734  00004C                     	global	_i2cData
   735                           _i2cData:
   736  00004E                            ds      1
   737  00004E                     	global	_cursor
   738                           _cursor:
   739  00004F                            ds      1
   740  00004F                     	global	_GPREG
   741                           _GPREG:
   742  000050                            ds      1
   743  000050                     int2char@string:
   744  000051                            ds      5
   745  000051                     	global	_vel
   746                           _vel:
   747  000056                            ds      2
   748  000056                     	file	"C:\Users\MarioVL\AppData\Local\Temp\s50c."
   749                           	line	#
   750                           psect	cinit
   751                           ; Clear objects allocated to COMRAM (42 bytes)
   752                           	global __pbssCOMRAM
   753                           lfsr	0,__pbssCOMRAM
   754  0009D4  EE00  F02E         movlw	42
   755  0009D8  0E2A               clear_0:
   756  0009DA                     clrf	postinc0,c
   757  0009DA  6AEE               decf	wreg
   758  0009DC  06E8               bnz	clear_0
   759  0009DE  E1FD               psect cinit,class=CODE,delta=1
   760                           global end_of_initialization,__end_of__initialization
   761                           
   762                           ;End of C runtime variable initialization code
   763                           
   764                           end_of_initialization:
   765  0009E0                     __end_of__initialization:
   766  0009E0                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   767  0009E0  905A               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   768  0009E2  925A               movlb 0
   769  0009E4  0100               goto _main	;jump to C main() function
   770  0009E6  EFC5  F002         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   771                           global __pcstackCOMRAM
   772                           __pcstackCOMRAM:
   773  000001                     ?_init_VNHIO:	; 1 bytes @ 0x0
   774  000001                     ?_init_TMR1:	; 1 bytes @ 0x0
   775  000001                     ?_init_PWM:	; 1 bytes @ 0x0
   776  000001                     ?_init_QEI:	; 1 bytes @ 0x0
   777  000001                     ?_init_I2C:	; 1 bytes @ 0x0
   778  000001                     ?_init_UART:	; 1 bytes @ 0x0
   779  000001                     ?_init_ISR:	; 1 bytes @ 0x0
   780  000001                     ?_ISR_high:	; 1 bytes @ 0x0
   781  000001                     ??_ISR_high:	; 1 bytes @ 0x0
   782  000001                     ?_main:	; 1 bytes @ 0x0
   783  000001                     calculatePWM@setpoint:	; 1 bytes @ 0x0
   784  000001                     	ds   4
   785  000001                     ??_init_VNHIO:	; 1 bytes @ 0x4
   786  000005                     ??_init_TMR1:	; 1 bytes @ 0x4
   787  000005                     ??_init_QEI:	; 1 bytes @ 0x4
   788  000005                     ??_init_I2C:	; 1 bytes @ 0x4
   789  000005                     ??_init_UART:	; 1 bytes @ 0x4
   790  000005                     ??_init_ISR:	; 1 bytes @ 0x4
   791  000005                     	global	?_dataToVel
   792                           ?_dataToVel:	; 2 bytes @ 0x4
   793  000005                     	global	?___lwdiv
   794                           ?___lwdiv:	; 2 bytes @ 0x4
   795  000005                     	global	?___lwmod
   796                           ?___lwmod:	; 2 bytes @ 0x4
   797  000005                     	global	?___lmul
   798                           ?___lmul:	; 4 bytes @ 0x4
   799  000005                     	global	?___lldiv
   800                           ?___lldiv:	; 4 bytes @ 0x4
   801  000005                     	global	___lwdiv@dividend
   802                           ___lwdiv@dividend:	; 2 bytes @ 0x4
   803  000005                     	global	___lwmod@dividend
   804                           ___lwmod@dividend:	; 2 bytes @ 0x4
   805  000005                     	global	___lmul@multiplier
   806                           ___lmul@multiplier:	; 4 bytes @ 0x4
   807  000005                     	global	___lldiv@dividend
   808                           ___lldiv@dividend:	; 4 bytes @ 0x4
   809  000005                     	ds   2
   810  000005                     ??_dataToVel:	; 1 bytes @ 0x6
   811  000007                     	global	dataToVel@data
   812                           dataToVel@data:	; 1 bytes @ 0x6
   813  000007                     	global	___lwdiv@divisor
   814                           ___lwdiv@divisor:	; 2 bytes @ 0x6
   815  000007                     	global	___lwmod@divisor
   816                           ___lwmod@divisor:	; 2 bytes @ 0x6
   817  000007                     	ds   1
   818  000007                     	global	dataToVel@vel
   819                           dataToVel@vel:	; 2 bytes @ 0x7
   820  000008                     	ds   1
   821  000008                     ??___lwdiv:	; 1 bytes @ 0x8
   822  000009                     ??___lwmod:	; 1 bytes @ 0x8
   823  000009                     	global	___lwmod@counter
   824                           ___lwmod@counter:	; 1 bytes @ 0x8
   825  000009                     	global	___lwdiv@quotient
   826                           ___lwdiv@quotient:	; 2 bytes @ 0x8
   827  000009                     	global	___lmul@multiplicand
   828                           ___lmul@multiplicand:	; 4 bytes @ 0x8
   829  000009                     	global	___lldiv@divisor
   830                           ___lldiv@divisor:	; 4 bytes @ 0x8
   831  000009                     	ds   2
   832  000009                     	global	___lwdiv@counter
   833                           ___lwdiv@counter:	; 1 bytes @ 0xA
   834  00000B                     	ds   1
   835  00000B                     	global	?_int2char
   836                           ?_int2char:	; 2 bytes @ 0xB
   837  00000C                     	global	int2char@number
   838                           int2char@number:	; 2 bytes @ 0xB
   839  00000C                     	ds   1
   840  00000C                     ??___lmul:	; 1 bytes @ 0xC
   841  00000D                     ??___lldiv:	; 1 bytes @ 0xC
   842  00000D                     	global	___lmul@product
   843                           ___lmul@product:	; 4 bytes @ 0xC
   844  00000D                     	global	___lldiv@quotient
   845                           ___lldiv@quotient:	; 4 bytes @ 0xC
   846  00000D                     	ds   1
   847  00000D                     ??_int2char:	; 1 bytes @ 0xD
   848  00000E                     	global	int2char@num
   849                           int2char@num:	; 2 bytes @ 0xD
   850  00000E                     	ds   2
   851  00000E                     	global	int2char@digit
   852                           int2char@digit:	; 1 bytes @ 0xF
   853  000010                     	ds   1
   854  000010                     	global	?___aldiv
   855                           ?___aldiv:	; 4 bytes @ 0x10
   856  000011                     	global	___lldiv@counter
   857                           ___lldiv@counter:	; 1 bytes @ 0x10
   858  000011                     	global	___aldiv@dividend
   859                           ___aldiv@dividend:	; 4 bytes @ 0x10
   860  000011                     	ds   4
   861  000011                     	global	___aldiv@divisor
   862                           ___aldiv@divisor:	; 4 bytes @ 0x14
   863  000015                     	ds   4
   864  000015                     ??___aldiv:	; 1 bytes @ 0x18
   865  000019                     	global	___aldiv@counter
   866                           ___aldiv@counter:	; 1 bytes @ 0x18
   867  000019                     	ds   1
   868  000019                     	global	___aldiv@sign
   869                           ___aldiv@sign:	; 1 bytes @ 0x19
   870  00001A                     	ds   1
   871  00001A                     	global	___aldiv@quotient
   872                           ___aldiv@quotient:	; 4 bytes @ 0x1A
   873  00001B                     	ds   4
   874  00001B                     	global	?_calculatePWM
   875                           ?_calculatePWM:	; 4 bytes @ 0x1E
   876  00001F                     	ds   4
   877  00001F                     ??_calculatePWM:	; 1 bytes @ 0x22
   878  000023                     	ds   8
   879  000023                     ?_write_PWM:	; 1 bytes @ 0x2A
   880  00002B                     	global	write_PWM@dutyCycle
   881                           write_PWM@dutyCycle:	; 2 bytes @ 0x2A
   882  00002B                     	ds   2
   883  00002B                     ??_write_PWM:	; 1 bytes @ 0x2C
   884  00002D                     	ds   1
   885  00002D                     ??_init_PWM:	; 1 bytes @ 0x2D
   886  00002E                     ??_main:	; 1 bytes @ 0x2D
   887  00002E                     ;!
   888                           ;!Data Sizes:
   889                           ;!    Strings     0
   890                           ;!    Constant    0
   891                           ;!    Data        0
   892                           ;!    BSS         42
   893                           ;!    Persistent  2
   894                           ;!    Stack       0
   895                           ;!
   896                           ;!Auto Spaces:
   897                           ;!    Space          Size  Autos    Used
   898                           ;!    COMRAM           94     45      89
   899                           ;!    BANK0           160      0       0
   900                           ;!    BANK1           256      0       0
   901                           ;!    BANK2           256      0       0
   902                           
   903                           ;!
   904                           ;!Pointer List with Targets:
   905                           ;!
   906                           ;!    sp__int2char	PTR unsigned char  size(2) Largest target is 5
   907                           ;!		 -> int2char@string(COMRAM[5]), 
   908                           ;!
   909                           ;!    string_vel	PTR unsigned char  size(2) Largest target is 5
   910                           ;!		 -> NULL(NULL[0]), int2char@string(COMRAM[5]), 
   911                           ;!
   912                           
   913                           
   914                           ;!
   915                           ;!Critical Paths under _main in COMRAM
   916                           ;!
   917                           ;!    _main->_write_PWM
   918                           ;!    _int2char->___lwdiv
   919                           ;!    _init_PWM->_write_PWM
   920                           ;!    _write_PWM->_calculatePWM
   921                           ;!    _calculatePWM->___aldiv
   922                           ;!    ___aldiv->___lmul
   923                           ;!
   924                           ;!Critical Paths under _ISR_high in COMRAM
   925                           ;!
   926                           ;!    None.
   927                           ;!
   928                           ;!Critical Paths under _main in BANK0
   929                           ;!
   930                           ;!    None.
   931                           ;!
   932                           ;!Critical Paths under _ISR_high in BANK0
   933                           ;!
   934                           ;!    None.
   935                           ;!
   936                           ;!Critical Paths under _main in BANK1
   937                           ;!
   938                           ;!    None.
   939                           ;!
   940                           ;!Critical Paths under _ISR_high in BANK1
   941                           ;!
   942                           ;!    None.
   943                           ;!
   944                           ;!Critical Paths under _main in BANK2
   945                           ;!
   946                           ;!    None.
   947                           ;!
   948                           ;!Critical Paths under _ISR_high in BANK2
   949                           ;!
   950                           ;!    None.
   951                           
   952 ;;
   953 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   954 ;;
   955                           
   956                           ;!
   957                           ;!Call Graph Tables:
   958                           ;!
   959                           ;! ---------------------------------------------------------------------------------
   960                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   961                           ;! ---------------------------------------------------------------------------------
   962                           ;! (0) _main                                                 0     0      0    3500
   963                           ;!                       _calculatePWM
   964                           ;!                          _dataToVel
   965                           ;!                           _init_I2C
   966                           ;!                           _init_ISR
   967                           ;!                           _init_PWM
   968                           ;!                           _init_QEI
   969                           ;!                          _init_TMR1
   970                           ;!                          _init_UART
   971                           ;!                         _init_VNHIO
   972                           ;!                           _int2char
   973                           ;!                          _write_PWM
   974                           ;! ---------------------------------------------------------------------------------
   975                           ;! (1) _int2char                                             5     3      2     815
   976                           ;!                                             11 COMRAM     5     3      2
   977                           ;!                            ___lwdiv
   978                           ;!                            ___lwmod
   979                           ;! ---------------------------------------------------------------------------------
   980                           ;! (2) ___lwmod                                              5     1      4     311
   981                           ;!                                              4 COMRAM     5     1      4
   982                           ;! ---------------------------------------------------------------------------------
   983                           ;! (2) ___lwdiv                                              7     3      4     314
   984                           ;!                                              4 COMRAM     7     3      4
   985                           ;! ---------------------------------------------------------------------------------
   986                           ;! (1) _init_VNHIO                                           0     0      0       0
   987                           ;! ---------------------------------------------------------------------------------
   988                           ;! (1) _init_UART                                            0     0      0       0
   989                           ;! ---------------------------------------------------------------------------------
   990                           ;! (1) _init_TMR1                                            0     0      0       0
   991                           ;! ---------------------------------------------------------------------------------
   992                           ;! (1) _init_QEI                                             0     0      0       0
   993                           ;! ---------------------------------------------------------------------------------
   994                           ;! (1) _init_PWM                                             0     0      0     197
   995                           ;!                          _write_PWM
   996                           ;! ---------------------------------------------------------------------------------
   997                           ;! (1) _write_PWM                                            3     1      2     197
   998                           ;!                                             42 COMRAM     3     1      2
   999                           ;!                       _calculatePWM (ARG)
  1000                           ;! ---------------------------------------------------------------------------------
  1001                           ;! (1) _init_ISR                                             0     0      0       0
  1002                           ;! ---------------------------------------------------------------------------------
  1003                           ;! (1) _init_I2C                                             0     0      0       0
  1004                           ;! ---------------------------------------------------------------------------------
  1005                           ;! (1) _dataToVel                                            5     3      2      91
  1006                           ;!                                              4 COMRAM     5     3      2
  1007                           ;! ---------------------------------------------------------------------------------
  1008                           ;! (1) _calculatePWM                                        13     9      4    2200
  1009                           ;!                                             30 COMRAM    12     8      4
  1010                           ;!                            ___aldiv
  1011                           ;!                            ___lldiv
  1012                           ;!                             ___lmul
  1013                           ;! ---------------------------------------------------------------------------------
  1014                           ;! (2) ___lmul                                              12     4      8    1130
  1015                           ;!                                              4 COMRAM    12     4      8
  1016                           ;! ---------------------------------------------------------------------------------
  1017                           ;! (2) ___lldiv                                             13     5      8     314
  1018                           ;!                                              4 COMRAM    13     5      8
  1019                           ;! ---------------------------------------------------------------------------------
  1020                           ;! (2) ___aldiv                                             14     6      8     756
  1021                           ;!                                             16 COMRAM    14     6      8
  1022                           ;!                             ___lmul (ARG)
  1023                           ;! ---------------------------------------------------------------------------------
  1024                           ;! Estimated maximum stack depth 2
  1025                           ;! ---------------------------------------------------------------------------------
  1026                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1027                           ;! ---------------------------------------------------------------------------------
  1028                           ;! (3) _ISR_high                                             4     4      0       0
  1029                           ;!                                              0 COMRAM     4     4      0
  1030                           ;! ---------------------------------------------------------------------------------
  1031                           ;! Estimated maximum stack depth 3
  1032                           ;! ---------------------------------------------------------------------------------
  1033                           ;!
  1034                           ;! Call Graph Graphs:
  1035                           ;!
  1036                           ;! _main (ROOT)
  1037                           ;!   _calculatePWM
  1038                           ;!     ___aldiv
  1039                           ;!       ___lmul (ARG)
  1040                           ;!     ___lldiv
  1041                           ;!     ___lmul
  1042                           ;!   _dataToVel
  1043                           ;!   _init_I2C
  1044                           ;!   _init_ISR
  1045                           ;!   _init_PWM
  1046                           ;!     _write_PWM
  1047                           ;!       _calculatePWM (ARG)
  1048                           ;!         ___aldiv
  1049                           ;!           ___lmul (ARG)
  1050                           ;!         ___lldiv
  1051                           ;!         ___lmul
  1052                           ;!   _init_QEI
  1053                           ;!   _init_TMR1
  1054                           ;!   _init_UART
  1055                           ;!   _init_VNHIO
  1056                           ;!   _int2char
  1057                           ;!     ___lwdiv
  1058                           ;!     ___lwmod
  1059                           ;!   _write_PWM
  1060                           ;!     _calculatePWM (ARG)
  1061                           ;!       ___aldiv
  1062                           ;!         ___lmul (ARG)
  1063                           ;!       ___lldiv
  1064                           ;!       ___lmul
  1065                           ;!
  1066                           ;! _ISR_high (ROOT)
  1067                           ;!
  1068                           
  1069                           ;! Address spaces:
  1070                           
  1071                           ;!Name               Size   Autos  Total    Cost      Usage
  1072                           ;!BIGRAM             2FF      0       0      10        0.0%
  1073                           ;!EEDATA             100      0       0       0        0.0%
  1074                           ;!BITBANK2           100      0       0       8        0.0%
  1075                           ;!BANK2              100      0       0       9        0.0%
  1076                           ;!BITBANK1           100      0       0       6        0.0%
  1077                           ;!BANK1              100      0       0       7        0.0%
  1078                           ;!BITBANK0            A0      0       0       4        0.0%
  1079                           ;!BANK0               A0      0       0       5        0.0%
  1080                           ;!BITCOMRAM           5E      0       0       0        0.0%
  1081                           ;!COMRAM              5E     2D      59       1       94.7%
  1082                           ;!BITSFR               0      0       0     200        0.0%
  1083                           ;!SFR                  0      0       0     200        0.0%
  1084                           ;!STACK                0      0       0       2        0.0%
  1085                           ;!NULL                 0      0       0       0        0.0%
  1086                           ;!ABS                  0      0      59       3        0.0%
  1087                           ;!DATA                 0      0      59      11        0.0%
  1088                           ;!CODE                 0      0       0       0        0.0%
  1089                           
  1090                           	global	_main
  1091                           
  1092 ;; *************** function _main *****************
  1093 ;; Defined at:
  1094 ;;		line 129 in file "main.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1108 ;;      Params:         0       0       0       0
  1109 ;;      Locals:         0       0       0       0
  1110 ;;      Temps:          0       0       0       0
  1111 ;;      Totals:         0       0       0       0
  1112 ;;Total ram usage:        0 bytes
  1113 ;; Hardware stack levels required when called:    3
  1114 ;; This function calls:
  1115 ;;		_calculatePWM
  1116 ;;		_dataToVel
  1117 ;;		_init_I2C
  1118 ;;		_init_ISR
  1119 ;;		_init_PWM
  1120 ;;		_init_QEI
  1121 ;;		_init_TMR1
  1122 ;;		_init_UART
  1123 ;;		_init_VNHIO
  1124 ;;		_int2char
  1125 ;;		_write_PWM
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1131                           	file	"main.c"
  1132                           	line	129
  1133                           global __ptext0
  1134                           __ptext0:
  1135  00058A                     psect	text0
  1136                           	file	"main.c"
  1137                           	line	129
  1138                           	global	__size_of_main
  1139                           	__size_of_main	equ	__end_of_main-_main
  1140  0000                     	
  1141                           _main:
  1142  00058A                     ;incstack = 0
  1143                           	opt	stack 28
  1144                           	line	131
  1145                           	
  1146                           l1422:
  1147  00058A                     ;main.c: 131:     OSCCON = 0x70;
  1148                           	movlw	low(070h)
  1149  00058A  0E70               	movwf	((c:4051)),c	;volatile
  1150  00058C  6ED3               	line	133
  1151                           ;main.c: 133:     PID.Kp = 48087;
  1152                           	movlw	low(0BBD7h)
  1153  00058E  0ED7               	movwf	((c:_PID)),c
  1154  000590  6E2E               	movlw	high(0BBD7h)
  1155  000592  0EBB               	movwf	((c:_PID+1)),c
  1156  000594  6E2F               	movlw	low highword(0BBD7h)
  1157  000596  0E00               	movwf	((c:_PID+2)),c
  1158  000598  6E30               	movlw	high highword(0BBD7h)
  1159  00059A  0E00               	movwf	((c:_PID+3)),c
  1160  00059C  6E31               	line	134
  1161                           ;main.c: 134:     PID.Ki = 64120;
  1162                           	movlw	low(0FA78h)
  1163  00059E  0E78               	movwf	(0+((c:_PID)+04h)),c
  1164  0005A0  6E32               	movlw	high(0FA78h)
  1165  0005A2  0EFA               	movwf	(1+((c:_PID)+04h)),c
  1166  0005A4  6E33               	movlw	low highword(0FA78h)
  1167  0005A6  0E00               	movwf	(2+((c:_PID)+04h)),c
  1168  0005A8  6E34               	movlw	high highword(0FA78h)
  1169  0005AA  0E00               	movwf	(3+((c:_PID)+04h)),c
  1170  0005AC  6E35               	line	135
  1171                           ;main.c: 135:     PID.Kd = 90;
  1172                           	movlw	low(05Ah)
  1173  0005AE  0E5A               	movwf	(0+((c:_PID)+08h)),c
  1174  0005B0  6E36               	movlw	high(05Ah)
  1175  0005B2  0E00               	movwf	(1+((c:_PID)+08h)),c
  1176  0005B4  6E37               	movlw	low highword(05Ah)
  1177  0005B6  0E00               	movwf	(2+((c:_PID)+08h)),c
  1178  0005B8  6E38               	movlw	high highword(05Ah)
  1179  0005BA  0E00               	movwf	(3+((c:_PID)+08h)),c
  1180  0005BC  6E39               	line	137
  1181                           	
  1182                           l1424:
  1183  0005BE                     ;main.c: 137:     init_VNHIO();
  1184                           	call	_init_VNHIO	;wreg free
  1185  0005BE  EC00  F005         	line	138
  1186                           	
  1187                           l1426:
  1188  0005C2                     ;main.c: 138:     init_TMR1();
  1189                           	call	_init_TMR1	;wreg free
  1190  0005C2  EC09  F005         	line	139
  1191                           	
  1192                           l1428:
  1193  0005C6                     ;main.c: 139:     init_PWM();
  1194                           	call	_init_PWM	;wreg free
  1195  0005C6  ECCE  F004         	line	140
  1196                           	
  1197                           l1430:
  1198  0005CA                     ;main.c: 140:     init_QEI();
  1199                           	call	_init_QEI	;wreg free
  1200  0005CA  ECBF  F004         	line	141
  1201                           	
  1202                           l1432:
  1203  0005CE                     ;main.c: 141:     init_I2C();
  1204                           	call	_init_I2C	;wreg free
  1205  0005CE  EC10  F005         	line	142
  1206                           	
  1207                           l1434:
  1208  0005D2                     ;main.c: 142:     init_UART();
  1209                           	call	_init_UART	;wreg free
  1210  0005D2  ECF5  F004         	line	143
  1211                           	
  1212                           l1436:
  1213  0005D6                     ;main.c: 143:     init_ISR();
  1214                           	call	_init_ISR	;wreg free
  1215  0005D6  ECDC  F004         	line	144
  1216                           	
  1217                           l1438:
  1218  0005DA                     ;main.c: 144:     GPREG.DIRCTRL = 1;
  1219                           	bsf	((c:_GPREG)),c,0
  1220  0005DA  8050               	goto	l1440
  1221  0005DC  EFF0  F002         	line	146
  1222                           ;main.c: 146:     while(1)
  1223                           	
  1224                           l184:
  1225  0005E0                     	line	149
  1226                           	
  1227                           l1440:
  1228  0005E0                     ;main.c: 147:     {;main.c: 149:         ref_vel = dataToVel(i2cData);
  1229                           	movf	((c:_i2cData)),c,w
  1230  0005E0  504E               	
  1231                           	call	_dataToVel
  1232  0005E2  EC7C  F004         	movff	0+?_dataToVel,(c:_ref_vel)
  1233  0005E6  C005  F058         	movff	1+?_dataToVel,(c:_ref_vel+1)
  1234  0005EA  C006  F059         	line	151
  1235                           	
  1236                           l1442:
  1237  0005EE                     ;main.c: 151:         if(1 == GPREG.STCTRL)
  1238                           	btfss	((c:_GPREG)),c,1
  1239  0005EE  A250               	goto	u651
  1240  0005F0  EFFC  F002         	goto	u650
  1241  0005F4  EFFE  F002         u651:
  1242  0005F8                     	goto	l1440
  1243  0005F8  EFF0  F002         u650:
  1244  0005FC                     	line	153
  1245                           	
  1246                           l1444:
  1247  0005FC                     ;main.c: 152:         {;main.c: 153:             write_PWM(calculatePWM(ref_vel));
  1248                           	movf	((c:_ref_vel)),c,w
  1249  0005FC  5058               	
  1250                           	call	_calculatePWM
  1251  0005FE  ECC1  F000         	movff	0+?_calculatePWM,(c:write_PWM@dutyCycle)
  1252  000602  C01F  F02B         	movff	1+?_calculatePWM,(c:write_PWM@dutyCycle+1)
  1253  000606  C020  F02C         	call	_write_PWM	;wreg free
  1254  00060A  ECAC  F004         	line	155
  1255                           	
  1256                           l1446:
  1257  00060E                     ;main.c: 155:             string_vel = int2char(vel);
  1258                           	movff	(c:_vel),(c:int2char@number)
  1259  00060E  C056  F00C         	movff	(c:_vel+1),(c:int2char@number+1)
  1260  000612  C057  F00D         	call	_int2char	;wreg free
  1261  000616  ECC9  F003         	movff	0+?_int2char,(c:_string_vel)
  1262  00061A  C00C  F046         	movff	1+?_int2char,(c:_string_vel+1)
  1263  00061E  C00D  F047         	line	156
  1264                           	
  1265                           l1448:
  1266  000622                     ;main.c: 156:             TXIE = 1;
  1267                           	bsf	c:(31980/8),(31980)&7	;volatile
  1268  000622  889D               	line	158
  1269                           	
  1270                           l1450:
  1271  000624                     ;main.c: 158:             if(1 == GPREG.DIRCTRL)
  1272                           	btfss	((c:_GPREG)),c,0
  1273  000624  A050               	goto	u661
  1274  000626  EF17  F003         	goto	u660
  1275  00062A  EF19  F003         u661:
  1276  00062E                     	goto	l186
  1277  00062E  EF1D  F003         u660:
  1278  000632                     	line	166
  1279                           	
  1280                           l1452:
  1281  000632                     ;main.c: 159:             {;main.c: 166:                 LATA0 = 1;
  1282                           	bsf	c:(31816/8),(31816)&7	;volatile
  1283  000632  8089               	line	167
  1284                           ;main.c: 167:                 LATA1 = 0;
  1285                           	bcf	c:(31817/8),(31817)&7	;volatile
  1286  000634  9289               	line	168
  1287                           ;main.c: 168:             } else {
  1288                           	goto	l187
  1289  000636  EF1F  F003         	
  1290                           l186:
  1291  00063A                     	line	175
  1292                           ;main.c: 175:                 LATA0 = 0;
  1293                           	bcf	c:(31816/8),(31816)&7	;volatile
  1294  00063A  9089               	line	176
  1295                           ;main.c: 176:                 LATA1 = 1;
  1296                           	bsf	c:(31817/8),(31817)&7	;volatile
  1297  00063C  8289               	line	177
  1298                           ;main.c: 177:             }
  1299                           	
  1300                           l187:
  1301  00063E                     	line	179
  1302                           ;main.c: 179:             GPREG.STCTRL = 0;
  1303                           	bcf	((c:_GPREG)),c,1
  1304  00063E  9250               	line	180
  1305                           ;main.c: 180:             TMR1ON = 1;
  1306                           	bsf	c:(32360/8),(32360)&7	;volatile
  1307  000640  80CD               	goto	l1440
  1308  000642  EFF0  F002         	line	181
  1309                           ;main.c: 181:         }
  1310                           	
  1311                           l185:
  1312  000646                     	goto	l1440
  1313  000646  EFF0  F002         	line	182
  1314                           ;main.c: 182:     }
  1315                           	
  1316                           l188:
  1317  00064A                     	goto	l1440
  1318  00064A  EFF0  F002         	
  1319                           l189:
  1320  00064E                     	line	184
  1321                           	
  1322                           l190:
  1323  00064E                     	global	start
  1324                           	goto	start
  1325  00064E  EFBF  F000         	opt stack 0
  1326                           GLOBAL	__end_of_main
  1327                           	__end_of_main:
  1328  000652                     	signat	_main,89
  1329                           	global	_int2char
  1330                           
  1331 ;; *************** function _int2char *****************
  1332 ;; Defined at:
  1333 ;;		line 313 in file "main.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  number          2   11[COMRAM] unsigned int 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  digit           1   15[COMRAM] char 
  1338 ;;  num             2   13[COMRAM] unsigned int 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  2   11[COMRAM] PTR unsigned char 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1348 ;;      Params:         2       0       0       0
  1349 ;;      Locals:         3       0       0       0
  1350 ;;      Temps:          0       0       0       0
  1351 ;;      Totals:         5       0       0       0
  1352 ;;Total ram usage:        5 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    2
  1355 ;; This function calls:
  1356 ;;		___lwdiv
  1357 ;;		___lwmod
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1363                           	line	313
  1364                           global __ptext1
  1365                           __ptext1:
  1366  000792                     psect	text1
  1367                           	file	"main.c"
  1368                           	line	313
  1369                           	global	__size_of_int2char
  1370                           	__size_of_int2char	equ	__end_of_int2char-_int2char
  1371  0000                     	
  1372                           _int2char:
  1373  000792                     ;incstack = 0
  1374                           	opt	stack 28
  1375                           	line	316
  1376                           	
  1377                           l1406:
  1378  000792                     ;main.c: 313: uint8_t * int2char(uint16_t number);main.c: 314: {;main.c: 315:     static
                                  uint8_t string[5];;main.c: 316:     uint16_t num = number;
  1379                           	movff	(c:int2char@number),(c:int2char@num)
  1380  000792  C00C  F00E         	movff	(c:int2char@number+1),(c:int2char@num+1)
  1381  000796  C00D  F00F         	line	318
  1382                           	
  1383                           l1408:
  1384  00079A                     ;main.c: 318:     for(int8_t digit = 4; 0 <= digit; digit--)
  1385                           	movlw	low(04h)
  1386  00079A  0E04               	movwf	((c:int2char@digit)),c
  1387  00079C  6E10               	goto	l1416
  1388  00079E  EFF7  F003         	
  1389                           l224:
  1390  0007A2                     	line	320
  1391                           	
  1392                           l1410:
  1393  0007A2                     ;main.c: 319:     {;main.c: 320:         string[digit] = 0x30 + num%10;
  1394                           	movf	((c:int2char@digit)),c,w
  1395  0007A2  5010               	mullw	01h
  1396  0007A4  0D01               	movlw	low(int2char@string)
  1397  0007A6  0E51               	addwf	(prodl),c,w
  1398  0007A8  24F3               	movwf	c:fsr2l
  1399  0007AA  6ED9               	movlw	high(int2char@string)
  1400  0007AC  0E00               	addwfc	prod+1,w
  1401  0007AE  20F4               	movwf	1+c:fsr2l
  1402  0007B0  6EDA               	movff	(c:int2char@num),(c:___lwmod@dividend)
  1403  0007B2  C00E  F005         	movff	(c:int2char@num+1),(c:___lwmod@dividend+1)
  1404  0007B6  C00F  F006         	movlw	high(0Ah)
  1405  0007BA  0E00               	movwf	((c:___lwmod@divisor+1)),c
  1406  0007BC  6E08               	movlw	low(0Ah)
  1407  0007BE  0E0A               	movwf	((c:___lwmod@divisor)),c
  1408  0007C0  6E07               	call	___lwmod	;wreg free
  1409  0007C2  EC07  F004         	movf	(0+?___lwmod),c,w
  1410  0007C6  5005               	addlw	low(030h)
  1411  0007C8  0F30               	movwf	indf2,c
  1412  0007CA  6EDF               
  1413                           	line	321
  1414                           	
  1415                           l1412:
  1416  0007CC                     ;main.c: 321:         num = num/10;
  1417                           	movff	(c:int2char@num),(c:___lwdiv@dividend)
  1418  0007CC  C00E  F005         	movff	(c:int2char@num+1),(c:___lwdiv@dividend+1)
  1419  0007D0  C00F  F006         	movlw	high(0Ah)
  1420  0007D4  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  1421  0007D6  6E08               	movlw	low(0Ah)
  1422  0007D8  0E0A               	movwf	((c:___lwdiv@divisor)),c
  1423  0007DA  6E07               	call	___lwdiv	;wreg free
  1424  0007DC  EC85  F003         	movff	0+?___lwdiv,(c:int2char@num)
  1425  0007E0  C005  F00E         	movff	1+?___lwdiv,(c:int2char@num+1)
  1426  0007E4  C006  F00F         	line	322
  1427                           	
  1428                           l1414:
  1429  0007E8                     ;main.c: 322:     }
  1430                           	decf	((c:int2char@digit)),c
  1431  0007E8  0610               	goto	l1416
  1432  0007EA  EFF7  F003         	
  1433                           l223:
  1434  0007EE                     	
  1435                           l1416:
  1436  0007EE                     	btfsc	((c:int2char@digit)),c,7
  1437  0007EE  BE10               	goto	u640
  1438  0007F0  EFFE  F003         	goto	u641
  1439  0007F4  EFFC  F003         
  1440                           u641:
  1441  0007F8                     	goto	l1410
  1442  0007F8  EFD1  F003         u640:
  1443  0007FC                     	goto	l1418
  1444  0007FC  EF00  F004         	
  1445                           l225:
  1446  000800                     	line	324
  1447                           	
  1448                           l1418:
  1449  000800                     ;main.c: 324:     return string;
  1450                           		movlw	low(int2char@string)
  1451  000800  0E51               	movwf	((c:?_int2char)),c
  1452  000802  6E0C               	movlw	high(int2char@string)
  1453  000804  0E00               	movwf	((c:?_int2char+1)),c
  1454  000806  6E0D               
  1455                           	goto	l226
  1456  000808  EF06  F004         	
  1457                           l1420:
  1458  00080C                     	line	325
  1459                           	
  1460                           l226:
  1461  00080C                     	return	;funcret
  1462  00080C  0012               	opt stack 0
  1463                           GLOBAL	__end_of_int2char
  1464                           	__end_of_int2char:
  1465  00080E                     	signat	_int2char,4218
  1466                           	global	___lwmod
  1467                           
  1468 ;; *************** function ___lwmod *****************
  1469 ;; Defined at:
  1470 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  dividend        2    4[COMRAM] unsigned int 
  1473 ;;  divisor         2    6[COMRAM] unsigned int 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  counter         1    8[COMRAM] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  2    4[COMRAM] unsigned int 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1485 ;;      Params:         4       0       0       0
  1486 ;;      Locals:         1       0       0       0
  1487 ;;      Temps:          0       0       0       0
  1488 ;;      Totals:         5       0       0       0
  1489 ;;Total ram usage:        5 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_int2char
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           psect	text2,class=CODE,space=0,reloc=2,group=1
  1499                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1500                           	line	7
  1501                           global __ptext2
  1502                           __ptext2:
  1503  00080E                     psect	text2
  1504                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1505                           	line	7
  1506                           	global	__size_of___lwmod
  1507                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1508  0000                     	
  1509                           ___lwmod:
  1510  00080E                     ;incstack = 0
  1511                           	opt	stack 28
  1512                           	line	12
  1513                           	
  1514                           l1326:
  1515  00080E                     	movf	((c:___lwmod@divisor)),c,w
  1516  00080E  5007               iorwf	((c:___lwmod@divisor+1)),c,w
  1517  000810  1008               	btfsc	status,2
  1518  000812  B4D8               	goto	u561
  1519  000814  EF0E  F004         	goto	u560
  1520  000818  EF10  F004         
  1521                           u561:
  1522  00081C                     	goto	l738
  1523  00081C  EF3E  F004         u560:
  1524  000820                     	line	13
  1525                           	
  1526                           l1328:
  1527  000820                     	movlw	low(01h)
  1528  000820  0E01               	movwf	((c:___lwmod@counter)),c
  1529  000822  6E09               	line	14
  1530                           	goto	l1332
  1531  000824  EF1A  F004         	
  1532                           l740:
  1533  000828                     	line	15
  1534                           	
  1535                           l1330:
  1536  000828                     	bcf	status,0
  1537  000828  90D8               	rlcf	((c:___lwmod@divisor)),c
  1538  00082A  3607               	rlcf	((c:___lwmod@divisor+1)),c
  1539  00082C  3608               	line	16
  1540                           	incf	((c:___lwmod@counter)),c
  1541  00082E  2A09               	goto	l1332
  1542  000830  EF1A  F004         	line	17
  1543                           	
  1544                           l739:
  1545  000834                     	line	14
  1546                           	
  1547                           l1332:
  1548  000834                     	
  1549                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  1550  000834  AE08               	goto	u571
  1551  000836  EF1F  F004         	goto	u570
  1552  00083A  EF21  F004         u571:
  1553  00083E                     	goto	l1330
  1554  00083E  EF14  F004         u570:
  1555  000842                     	goto	l1334
  1556  000842  EF25  F004         	
  1557                           l741:
  1558  000846                     	goto	l1334
  1559  000846  EF25  F004         	line	18
  1560                           	
  1561                           l742:
  1562  00084A                     	line	19
  1563                           	
  1564                           l1334:
  1565  00084A                     		movf	((c:___lwmod@divisor)),c,w
  1566  00084A  5007               	subwf	((c:___lwmod@dividend)),c,w
  1567  00084C  5C05               	movf	((c:___lwmod@divisor+1)),c,w
  1568  00084E  5008               	subwfb	((c:___lwmod@dividend+1)),c,w
  1569  000850  5806               	btfss	status,0
  1570  000852  A0D8               	goto	u581
  1571  000854  EF2E  F004         	goto	u580
  1572  000858  EF30  F004         
  1573                           u581:
  1574  00085C                     	goto	l1338
  1575  00085C  EF36  F004         u580:
  1576  000860                     	line	20
  1577                           	
  1578                           l1336:
  1579  000860                     	movf	((c:___lwmod@divisor)),c,w
  1580  000860  5007               	subwf	((c:___lwmod@dividend)),c
  1581  000862  5E05               	movf	((c:___lwmod@divisor+1)),c,w
  1582  000864  5008               	subwfb	((c:___lwmod@dividend+1)),c
  1583  000866  5A06               
  1584                           	goto	l1338
  1585  000868  EF36  F004         	
  1586                           l743:
  1587  00086C                     	line	21
  1588                           	
  1589                           l1338:
  1590  00086C                     	bcf	status,0
  1591  00086C  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  1592  00086E  3208               	rrcf	((c:___lwmod@divisor)),c
  1593  000870  3207               	line	22
  1594                           	
  1595                           l1340:
  1596  000872                     	decfsz	((c:___lwmod@counter)),c
  1597  000872  2E09               	
  1598                           	goto	l1334
  1599  000874  EF25  F004         	goto	l738
  1600  000878  EF3E  F004         	
  1601                           l744:
  1602  00087C                     	line	23
  1603                           	
  1604                           l738:
  1605  00087C                     	line	24
  1606                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  1607  00087C  C005  F005         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  1608  000880  C006  F006         	line	25
  1609                           	
  1610                           l745:
  1611  000884                     	return	;funcret
  1612  000884  0012               	opt stack 0
  1613                           GLOBAL	__end_of___lwmod
  1614                           	__end_of___lwmod:
  1615  000886                     	signat	___lwmod,8314
  1616                           	global	___lwdiv
  1617                           
  1618 ;; *************** function ___lwdiv *****************
  1619 ;; Defined at:
  1620 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  dividend        2    4[COMRAM] unsigned int 
  1623 ;;  divisor         2    6[COMRAM] unsigned int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  quotient        2    8[COMRAM] unsigned int 
  1626 ;;  counter         1   10[COMRAM] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2    4[COMRAM] unsigned int 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1636 ;;      Params:         4       0       0       0
  1637 ;;      Locals:         3       0       0       0
  1638 ;;      Temps:          0       0       0       0
  1639 ;;      Totals:         7       0       0       0
  1640 ;;Total ram usage:        7 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_int2char
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           psect	text3,class=CODE,space=0,reloc=2,group=1
  1650                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1651                           	line	7
  1652                           global __ptext3
  1653                           __ptext3:
  1654  00070A                     psect	text3
  1655                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1656                           	line	7
  1657                           	global	__size_of___lwdiv
  1658                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1659  0000                     	
  1660                           ___lwdiv:
  1661  00070A                     ;incstack = 0
  1662                           	opt	stack 28
  1663                           	line	13
  1664                           	
  1665                           l1304:
  1666  00070A                     	movlw	high(0)
  1667  00070A  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  1668  00070C  6E0A               	movlw	low(0)
  1669  00070E  0E00               	movwf	((c:___lwdiv@quotient)),c
  1670  000710  6E09               	line	14
  1671                           	
  1672                           l1306:
  1673  000712                     	movf	((c:___lwdiv@divisor)),c,w
  1674  000712  5007               iorwf	((c:___lwdiv@divisor+1)),c,w
  1675  000714  1008               	btfsc	status,2
  1676  000716  B4D8               	goto	u531
  1677  000718  EF90  F003         	goto	u530
  1678  00071C  EF92  F003         
  1679                           u531:
  1680  000720                     	goto	l728
  1681  000720  EFC4  F003         u530:
  1682  000724                     	line	15
  1683                           	
  1684                           l1308:
  1685  000724                     	movlw	low(01h)
  1686  000724  0E01               	movwf	((c:___lwdiv@counter)),c
  1687  000726  6E0B               	line	16
  1688                           	goto	l1312
  1689  000728  EF9C  F003         	
  1690                           l730:
  1691  00072C                     	line	17
  1692                           	
  1693                           l1310:
  1694  00072C                     	bcf	status,0
  1695  00072C  90D8               	rlcf	((c:___lwdiv@divisor)),c
  1696  00072E  3607               	rlcf	((c:___lwdiv@divisor+1)),c
  1697  000730  3608               	line	18
  1698                           	incf	((c:___lwdiv@counter)),c
  1699  000732  2A0B               	goto	l1312
  1700  000734  EF9C  F003         	line	19
  1701                           	
  1702                           l729:
  1703  000738                     	line	16
  1704                           	
  1705                           l1312:
  1706  000738                     	
  1707                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  1708  000738  AE08               	goto	u541
  1709  00073A  EFA1  F003         	goto	u540
  1710  00073E  EFA3  F003         u541:
  1711  000742                     	goto	l1310
  1712  000742  EF96  F003         u540:
  1713  000746                     	goto	l1314
  1714  000746  EFA7  F003         	
  1715                           l731:
  1716  00074A                     	goto	l1314
  1717  00074A  EFA7  F003         	line	20
  1718                           	
  1719                           l732:
  1720  00074E                     	line	21
  1721                           	
  1722                           l1314:
  1723  00074E                     	bcf	status,0
  1724  00074E  90D8               	rlcf	((c:___lwdiv@quotient)),c
  1725  000750  3609               	rlcf	((c:___lwdiv@quotient+1)),c
  1726  000752  360A               	line	22
  1727                           	
  1728                           l1316:
  1729  000754                     		movf	((c:___lwdiv@divisor)),c,w
  1730  000754  5007               	subwf	((c:___lwdiv@dividend)),c,w
  1731  000756  5C05               	movf	((c:___lwdiv@divisor+1)),c,w
  1732  000758  5008               	subwfb	((c:___lwdiv@dividend+1)),c,w
  1733  00075A  5806               	btfss	status,0
  1734  00075C  A0D8               	goto	u551
  1735  00075E  EFB3  F003         	goto	u550
  1736  000762  EFB5  F003         
  1737                           u551:
  1738  000766                     	goto	l1322
  1739  000766  EFBC  F003         u550:
  1740  00076A                     	line	23
  1741                           	
  1742                           l1318:
  1743  00076A                     	movf	((c:___lwdiv@divisor)),c,w
  1744  00076A  5007               	subwf	((c:___lwdiv@dividend)),c
  1745  00076C  5E05               	movf	((c:___lwdiv@divisor+1)),c,w
  1746  00076E  5008               	subwfb	((c:___lwdiv@dividend+1)),c
  1747  000770  5A06               
  1748                           	line	24
  1749                           	
  1750                           l1320:
  1751  000772                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  1752  000772  8009               	goto	l1322
  1753  000774  EFBC  F003         	line	25
  1754                           	
  1755                           l733:
  1756  000778                     	line	26
  1757                           	
  1758                           l1322:
  1759  000778                     	bcf	status,0
  1760  000778  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  1761  00077A  3208               	rrcf	((c:___lwdiv@divisor)),c
  1762  00077C  3207               	line	27
  1763                           	
  1764                           l1324:
  1765  00077E                     	decfsz	((c:___lwdiv@counter)),c
  1766  00077E  2E0B               	
  1767                           	goto	l1314
  1768  000780  EFA7  F003         	goto	l728
  1769  000784  EFC4  F003         	
  1770                           l734:
  1771  000788                     	line	28
  1772                           	
  1773                           l728:
  1774  000788                     	line	29
  1775                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  1776  000788  C009  F005         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  1777  00078C  C00A  F006         	line	30
  1778                           	
  1779                           l735:
  1780  000790                     	return	;funcret
  1781  000790  0012               	opt stack 0
  1782                           GLOBAL	__end_of___lwdiv
  1783                           	__end_of___lwdiv:
  1784  000792                     	signat	___lwdiv,8314
  1785                           	global	_init_VNHIO
  1786                           
  1787 ;; *************** function _init_VNHIO *****************
  1788 ;; Defined at:
  1789 ;;		line 234 in file "main.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1803 ;;      Params:         0       0       0       0
  1804 ;;      Locals:         0       0       0       0
  1805 ;;      Temps:          0       0       0       0
  1806 ;;      Totals:         0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1817                           	file	"main.c"
  1818                           	line	234
  1819                           global __ptext4
  1820                           __ptext4:
  1821  000A00                     psect	text4
  1822                           	file	"main.c"
  1823                           	line	234
  1824                           	global	__size_of_init_VNHIO
  1825                           	__size_of_init_VNHIO	equ	__end_of_init_VNHIO-_init_VNHIO
  1826  0000                     	
  1827                           _init_VNHIO:
  1828  000A00                     ;incstack = 0
  1829                           	opt	stack 29
  1830                           	line	236
  1831                           	
  1832                           l1030:
  1833  000A00                     ;main.c: 236:     ANSEL0 = 0;
  1834                           	movlw	low(0)
  1835  000A00  0E00               	movwf	((c:4024)),c	;volatile
  1836  000A02  6EB8               	line	237
  1837                           ;main.c: 237:     ANSEL1 = 0;
  1838                           	movlw	low(0)
  1839  000A04  0E00               	movwf	((c:4025)),c	;volatile
  1840  000A06  6EB9               	line	238
  1841                           	
  1842                           l1032:
  1843  000A08                     ;main.c: 238:     TRISA0 = 0;
  1844                           	bcf	c:(31888/8),(31888)&7	;volatile
  1845  000A08  9092               	line	239
  1846                           	
  1847                           l1034:
  1848  000A0A                     ;main.c: 239:     TRISA1 = 0;
  1849                           	bcf	c:(31889/8),(31889)&7	;volatile
  1850  000A0A  9292               	line	240
  1851                           	
  1852                           l1036:
  1853  000A0C                     ;main.c: 240:     LATA0 = 0;
  1854                           	bcf	c:(31816/8),(31816)&7	;volatile
  1855  000A0C  9089               	line	241
  1856                           	
  1857                           l1038:
  1858  000A0E                     ;main.c: 241:     LATA1 = 1;
  1859                           	bsf	c:(31817/8),(31817)&7	;volatile
  1860  000A0E  8289               	line	242
  1861                           	
  1862                           l203:
  1863  000A10                     	return	;funcret
  1864  000A10  0012               	opt stack 0
  1865                           GLOBAL	__end_of_init_VNHIO
  1866                           	__end_of_init_VNHIO:
  1867  000A12                     	signat	_init_VNHIO,89
  1868                           	global	_init_UART
  1869                           
  1870 ;; *************** function _init_UART *****************
  1871 ;; Defined at:
  1872 ;;		line 278 in file "main.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1886 ;;      Params:         0       0       0       0
  1887 ;;      Locals:         0       0       0       0
  1888 ;;      Temps:          0       0       0       0
  1889 ;;      Totals:         0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    1
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1900                           	line	278
  1901                           global __ptext5
  1902                           __ptext5:
  1903  0009EA                     psect	text5
  1904                           	file	"main.c"
  1905                           	line	278
  1906                           	global	__size_of_init_UART
  1907                           	__size_of_init_UART	equ	__end_of_init_UART-_init_UART
  1908  0000                     	
  1909                           _init_UART:
  1910  0009EA                     ;incstack = 0
  1911                           	opt	stack 29
  1912                           	line	280
  1913                           	
  1914                           l1066:
  1915  0009EA                     ;main.c: 280:     GPREG.TXCTRL = 0;
  1916                           	bcf	((c:_GPREG)),c,6
  1917  0009EA  9C50               	line	281
  1918                           ;main.c: 281:     TRISC6 = 0;
  1919                           	bcf	c:(31910/8),(31910)&7	;volatile
  1920  0009EC  9C94               	line	282
  1921                           	
  1922                           l1068:
  1923  0009EE                     ;main.c: 282:     TXSTA = 0x20;
  1924                           	movlw	low(020h)
  1925  0009EE  0E20               	movwf	((c:4012)),c	;volatile
  1926  0009F0  6EAC               	line	283
  1927                           ;main.c: 283:     RCSTA = 0x90;
  1928                           	movlw	low(090h)
  1929  0009F2  0E90               	movwf	((c:4011)),c	;volatile
  1930  0009F4  6EAB               	line	284
  1931                           ;main.c: 284:     BAUDCON = 0x0;
  1932                           	movlw	low(0)
  1933  0009F6  0E00               	movwf	((c:4010)),c	;volatile
  1934  0009F8  6EAA               	line	285
  1935                           ;main.c: 285:     SPBRG = 12;
  1936                           	movlw	low(0Ch)
  1937  0009FA  0E0C               	movwf	((c:4015)),c	;volatile
  1938  0009FC  6EAF               	line	286
  1939                           	
  1940                           l215:
  1941  0009FE                     	return	;funcret
  1942  0009FE  0012               	opt stack 0
  1943                           GLOBAL	__end_of_init_UART
  1944                           	__end_of_init_UART:
  1945  000A00                     	signat	_init_UART,89
  1946                           	global	_init_TMR1
  1947                           
  1948 ;; *************** function _init_TMR1 *****************
  1949 ;; Defined at:
  1950 ;;		line 227 in file "main.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1964 ;;      Params:         0       0       0       0
  1965 ;;      Locals:         0       0       0       0
  1966 ;;      Temps:          0       0       0       0
  1967 ;;      Totals:         0       0       0       0
  1968 ;;Total ram usage:        0 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    1
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           psect	text6,class=CODE,space=0,reloc=2,group=0
  1978                           	line	227
  1979                           global __ptext6
  1980                           __ptext6:
  1981  000A12                     psect	text6
  1982                           	file	"main.c"
  1983                           	line	227
  1984                           	global	__size_of_init_TMR1
  1985                           	__size_of_init_TMR1	equ	__end_of_init_TMR1-_init_TMR1
  1986  0000                     	
  1987                           _init_TMR1:
  1988  000A12                     ;incstack = 0
  1989                           	opt	stack 29
  1990                           	line	230
  1991                           	
  1992                           l1040:
  1993  000A12                     ;main.c: 230:     T1CON = 0xF9;
  1994                           	movlw	low(0F9h)
  1995  000A12  0EF9               	movwf	((c:4045)),c	;volatile
  1996  000A14  6ECD               	line	231
  1997                           ;main.c: 231:     TMR1 = 53035;
  1998                           	movlw	high(0CF2Bh)
  1999  000A16  0ECF               	movwf	((c:4046+1)),c	;volatile
  2000  000A18  6ECF               	movlw	low(0CF2Bh)
  2001  000A1A  0E2B               	movwf	((c:4046)),c	;volatile
  2002  000A1C  6ECE               	line	232
  2003                           	
  2004                           l200:
  2005  000A1E                     	return	;funcret
  2006  000A1E  0012               	opt stack 0
  2007                           GLOBAL	__end_of_init_TMR1
  2008                           	__end_of_init_TMR1:
  2009  000A20                     	signat	_init_TMR1,89
  2010                           	global	_init_QEI
  2011                           
  2012 ;; *************** function _init_QEI *****************
  2013 ;; Defined at:
  2014 ;;		line 262 in file "main.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2028 ;;      Params:         0       0       0       0
  2029 ;;      Locals:         0       0       0       0
  2030 ;;      Temps:          0       0       0       0
  2031 ;;      Totals:         0       0       0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_main
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           psect	text7,class=CODE,space=0,reloc=2,group=0
  2042                           	line	262
  2043                           global __ptext7
  2044                           __ptext7:
  2045  00097E                     psect	text7
  2046                           	file	"main.c"
  2047                           	line	262
  2048                           	global	__size_of_init_QEI
  2049                           	__size_of_init_QEI	equ	__end_of_init_QEI-_init_QEI
  2050  0000                     	
  2051                           _init_QEI:
  2052  00097E                     ;incstack = 0
  2053                           	opt	stack 29
  2054                           	line	264
  2055                           	
  2056                           l1050:
  2057  00097E                     ;main.c: 264:     CAP1BUFL = 0;
  2058                           	movlw	low(0)
  2059  00097E  0E00               	movwf	((c:3944)),c	;volatile
  2060  000980  6E68               	line	265
  2061                           ;main.c: 265:     CAP1BUFH = 0;
  2062                           	movlw	low(0)
  2063  000982  0E00               	movwf	((c:3945)),c	;volatile
  2064  000984  6E69               	line	266
  2065                           	
  2066                           l1052:
  2067  000986                     ;main.c: 266:     TRISA4 = 1;
  2068                           	bsf	c:(31892/8),(31892)&7	;volatile
  2069  000986  8892               	line	267
  2070                           	
  2071                           l1054:
  2072  000988                     ;main.c: 267:     TRISA5 = 1;
  2073                           	bsf	c:(31893/8),(31893)&7	;volatile
  2074  000988  8A92               	line	270
  2075                           ;main.c: 270:     T5CON = 0x80;
  2076                           	movlw	low(080h)
  2077  00098A  0E80               	movwf	((c:4023)),c	;volatile
  2078  00098C  6EB7               	line	271
  2079                           ;main.c: 271:     QEICON = 0x19;
  2080                           	movlw	low(019h)
  2081  00098E  0E19               	movwf	((c:4022)),c	;volatile
  2082  000990  6EB6               	line	272
  2083                           	
  2084                           l1056:
  2085  000992                     ;main.c: 272:     PR5 = 0xFFFF;
  2086                           	setf	((c:3984)),c	;volatile
  2087  000992  6890               	setf	((c:3984+1)),c	;volatile
  2088  000994  6891               	line	273
  2089                           	
  2090                           l1058:
  2091  000996                     ;main.c: 273:     CAP1REN = 1;
  2092                           	bsf	c:(31518/8),(31518)&7	;volatile
  2093  000996  8C63               	line	274
  2094                           	
  2095                           l1060:
  2096  000998                     ;main.c: 274:     TMR5ON = 1;
  2097                           	bsf	c:(32184/8),(32184)&7	;volatile
  2098  000998  80B7               	line	276
  2099                           	
  2100                           l212:
  2101  00099A                     	return	;funcret
  2102  00099A  0012               	opt stack 0
  2103                           GLOBAL	__end_of_init_QEI
  2104                           	__end_of_init_QEI:
  2105  00099C                     	signat	_init_QEI,89
  2106                           	global	_init_PWM
  2107                           
  2108 ;; *************** function _init_PWM *****************
  2109 ;; Defined at:
  2110 ;;		line 244 in file "main.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2124 ;;      Params:         0       0       0       0
  2125 ;;      Locals:         0       0       0       0
  2126 ;;      Temps:          0       0       0       0
  2127 ;;      Totals:         0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    2
  2131 ;; This function calls:
  2132 ;;		_write_PWM
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           psect	text8,class=CODE,space=0,reloc=2,group=0
  2138                           	line	244
  2139                           global __ptext8
  2140                           __ptext8:
  2141  00099C                     psect	text8
  2142                           	file	"main.c"
  2143                           	line	244
  2144                           	global	__size_of_init_PWM
  2145                           	__size_of_init_PWM	equ	__end_of_init_PWM-_init_PWM
  2146  0000                     	
  2147                           _init_PWM:
  2148  00099C                     ;incstack = 0
  2149                           	opt	stack 28
  2150                           	line	246
  2151                           	
  2152                           l1342:
  2153  00099C                     ;main.c: 246:     TRISC2 = 0;
  2154                           	bcf	c:(31906/8),(31906)&7	;volatile
  2155  00099C  9494               	line	247
  2156                           ;main.c: 247:     LATC2 = 0;
  2157                           	bcf	c:(31834/8),(31834)&7	;volatile
  2158  00099E  948B               	line	249
  2159                           	
  2160                           l1344:
  2161  0009A0                     ;main.c: 249:     CCP1CON = 0xF;
  2162                           	movlw	low(0Fh)
  2163  0009A0  0E0F               	movwf	((c:4029)),c	;volatile
  2164  0009A2  6EBD               	line	250
  2165                           ;main.c: 250:     T2CON = 0x4;
  2166                           	movlw	low(04h)
  2167  0009A4  0E04               	movwf	((c:4042)),c	;volatile
  2168  0009A6  6ECA               	line	251
  2169                           	
  2170                           l1346:
  2171  0009A8                     ;main.c: 251:     PR2 = 255u;
  2172                           	setf	((c:4043)),c	;volatile
  2173  0009A8  68CB               	line	252
  2174                           	
  2175                           l1348:
  2176  0009AA                     ;main.c: 252:     write_PWM(0);
  2177                           	movlw	high(0)
  2178  0009AA  0E00               	movwf	((c:write_PWM@dutyCycle+1)),c
  2179  0009AC  6E2C               	movlw	low(0)
  2180  0009AE  0E00               	movwf	((c:write_PWM@dutyCycle)),c
  2181  0009B0  6E2B               	call	_write_PWM	;wreg free
  2182  0009B2  ECAC  F004         	line	253
  2183                           	
  2184                           l206:
  2185  0009B6                     	return	;funcret
  2186  0009B6  0012               	opt stack 0
  2187                           GLOBAL	__end_of_init_PWM
  2188                           	__end_of_init_PWM:
  2189  0009B8                     	signat	_init_PWM,89
  2190                           	global	_write_PWM
  2191                           
  2192 ;; *************** function _write_PWM *****************
  2193 ;; Defined at:
  2194 ;;		line 255 in file "main.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  dutyCycle       2   42[COMRAM] unsigned int 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2208 ;;      Params:         2       0       0       0
  2209 ;;      Locals:         0       0       0       0
  2210 ;;      Temps:          1       0       0       0
  2211 ;;      Totals:         3       0       0       0
  2212 ;;Total ram usage:        3 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    1
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_main
  2219 ;;		_init_PWM
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           psect	text9,class=CODE,space=0,reloc=2,group=0
  2223                           	line	255
  2224                           global __ptext9
  2225                           __ptext9:
  2226  000958                     psect	text9
  2227                           	file	"main.c"
  2228                           	line	255
  2229                           	global	__size_of_write_PWM
  2230                           	__size_of_write_PWM	equ	__end_of_write_PWM-_write_PWM
  2231  0000                     	
  2232                           _write_PWM:
  2233  000958                     ;incstack = 0
  2234                           	opt	stack 29
  2235                           	line	257
  2236                           	
  2237                           l1222:
  2238  000958                     ;main.c: 255: void write_PWM(uint16_t dutyCycle);main.c: 256: {;main.c: 257:     CCP1CON
                                 bits.DC1B = dutyCycle % 4u;
  2239                           	movff	(c:write_PWM@dutyCycle),??_write_PWM+0+0
  2240  000958  C02B  F02D         	movlw	03h
  2241  00095C  0E03               	andwf	(??_write_PWM+0+0),c
  2242  00095E  162D               	swapf	(??_write_PWM+0+0),c
  2243  000960  3A2D               	movf	((c:4029)),c,w	;volatile
  2244  000962  50BD               	xorwf	(??_write_PWM+0+0),c,w
  2245  000964  182D               	andlw	not (((1<<2)-1)<<4)
  2246  000966  0BCF               	xorwf	(??_write_PWM+0+0),c,w
  2247  000968  182D               	movwf	((c:4029)),c	;volatile
  2248  00096A  6EBD               	line	258
  2249                           	
  2250                           l1224:
  2251  00096C                     ;main.c: 258:     dutyCycle >>= 2;
  2252                           	bcf	status,0
  2253  00096C  90D8               	rrcf	((c:write_PWM@dutyCycle+1)),c
  2254  00096E  322C               	rrcf	((c:write_PWM@dutyCycle)),c
  2255  000970  322B               	bcf	status,0
  2256  000972  90D8               	rrcf	((c:write_PWM@dutyCycle+1)),c
  2257  000974  322C               	rrcf	((c:write_PWM@dutyCycle)),c
  2258  000976  322B               	line	259
  2259                           	
  2260                           l1226:
  2261  000978                     ;main.c: 259:     CCPR1L = (uint8_t) dutyCycle;
  2262                           	movff	(c:write_PWM@dutyCycle),(c:4030)	;volatile
  2263  000978  C02B  FFBE         	line	260
  2264                           	
  2265                           l209:
  2266  00097C                     	return	;funcret
  2267  00097C  0012               	opt stack 0
  2268                           GLOBAL	__end_of_write_PWM
  2269                           	__end_of_write_PWM:
  2270  00097E                     	signat	_write_PWM,4217
  2271                           	global	_init_ISR
  2272                           
  2273 ;; *************** function _init_ISR *****************
  2274 ;; Defined at:
  2275 ;;		line 288 in file "main.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;		None
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		None
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2289 ;;      Params:         0       0       0       0
  2290 ;;      Locals:         0       0       0       0
  2291 ;;      Temps:          0       0       0       0
  2292 ;;      Totals:         0       0       0       0
  2293 ;;Total ram usage:        0 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    1
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           psect	text10,class=CODE,space=0,reloc=2,group=0
  2303                           	line	288
  2304                           global __ptext10
  2305                           __ptext10:
  2306  0009B8                     psect	text10
  2307                           	file	"main.c"
  2308                           	line	288
  2309                           	global	__size_of_init_ISR
  2310                           	__size_of_init_ISR	equ	__end_of_init_ISR-_init_ISR
  2311  0000                     	
  2312                           _init_ISR:
  2313  0009B8                     ;incstack = 0
  2314                           	opt	stack 29
  2315                           	line	291
  2316                           	
  2317                           l1070:
  2318  0009B8                     ;main.c: 291:     TMR1IF = 0;
  2319                           	bcf	c:(31984/8),(31984)&7	;volatile
  2320  0009B8  909E               	line	292
  2321                           ;main.c: 292:     TMR1IE = 1;
  2322                           	bsf	c:(31976/8),(31976)&7	;volatile
  2323  0009BA  809D               	line	293
  2324                           ;main.c: 293:     TMR1IP = 1;
  2325                           	bsf	c:(31992/8),(31992)&7	;volatile
  2326  0009BC  809F               	line	296
  2327                           ;main.c: 296:     TMR5IF = 0;
  2328                           	bcf	c:(32032/8),(32032)&7	;volatile
  2329  0009BE  90A4               	line	297
  2330                           ;main.c: 297:     TMR5IE = 1;
  2331                           	bsf	c:(32024/8),(32024)&7	;volatile
  2332  0009C0  80A3               	line	298
  2333                           ;main.c: 298:     TMR5IP = 1;
  2334                           	bsf	c:(32040/8),(32040)&7	;volatile
  2335  0009C2  80A5               	line	301
  2336                           ;main.c: 301:     SSPIE = 1;
  2337                           	bsf	c:(31979/8),(31979)&7	;volatile
  2338  0009C4  869D               	line	302
  2339                           ;main.c: 302:     SSPIP = 1;
  2340                           	bsf	c:(31995/8),(31995)&7	;volatile
  2341  0009C6  869F               	line	305
  2342                           ;main.c: 305:     TXIE = 0;
  2343                           	bcf	c:(31980/8),(31980)&7	;volatile
  2344  0009C8  989D               	line	306
  2345                           ;main.c: 306:     TXIP = 1;
  2346                           	bsf	c:(31996/8),(31996)&7	;volatile
  2347  0009CA  889F               	line	307
  2348                           ;main.c: 307:     TXIF = 0;
  2349                           	bcf	c:(31988/8),(31988)&7	;volatile
  2350  0009CC  989E               	line	309
  2351                           ;main.c: 309:     IPEN=1;
  2352                           	bsf	c:(32391/8),(32391)&7	;volatile
  2353  0009CE  8ED0               	line	310
  2354                           ;main.c: 310:     GIE = 1;
  2355                           	bsf	c:(32663/8),(32663)&7	;volatile
  2356  0009D0  8EF2               	line	311
  2357                           	
  2358                           l218:
  2359  0009D2                     	return	;funcret
  2360  0009D2  0012               	opt stack 0
  2361                           GLOBAL	__end_of_init_ISR
  2362                           	__end_of_init_ISR:
  2363  0009D4                     	signat	_init_ISR,89
  2364                           	global	_init_I2C
  2365                           
  2366 ;; *************** function _init_I2C *****************
  2367 ;; Defined at:
  2368 ;;		line 327 in file "main.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2382 ;;      Params:         0       0       0       0
  2383 ;;      Locals:         0       0       0       0
  2384 ;;      Temps:          0       0       0       0
  2385 ;;      Totals:         0       0       0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           psect	text11,class=CODE,space=0,reloc=2,group=0
  2396                           	line	327
  2397                           global __ptext11
  2398                           __ptext11:
  2399  000A20                     psect	text11
  2400                           	file	"main.c"
  2401                           	line	327
  2402                           	global	__size_of_init_I2C
  2403                           	__size_of_init_I2C	equ	__end_of_init_I2C-_init_I2C
  2404  0000                     	
  2405                           _init_I2C:
  2406  000A20                     ;incstack = 0
  2407                           	opt	stack 29
  2408                           	line	329
  2409                           	
  2410                           l1062:
  2411  000A20                     ;main.c: 329:     TRISC5 = 1;
  2412                           	bsf	c:(31909/8),(31909)&7	;volatile
  2413  000A20  8A94               	line	330
  2414                           ;main.c: 330:     TRISC4 = 1;
  2415                           	bsf	c:(31908/8),(31908)&7	;volatile
  2416  000A22  8894               	line	331
  2417                           	
  2418                           l1064:
  2419  000A24                     ;main.c: 331:     SSPCON =0b00110110;
  2420                           	movlw	low(036h)
  2421  000A24  0E36               	movwf	((c:4038)),c	;volatile
  2422  000A26  6EC6               	line	333
  2423                           ;main.c: 333:     SSPADD = 0x46;
  2424                           	movlw	low(046h)
  2425  000A28  0E46               	movwf	((c:4040)),c	;volatile
  2426  000A2A  6EC8               	line	334
  2427                           	
  2428                           l229:
  2429  000A2C                     	return	;funcret
  2430  000A2C  0012               	opt stack 0
  2431                           GLOBAL	__end_of_init_I2C
  2432                           	__end_of_init_I2C:
  2433  000A2E                     	signat	_init_I2C,89
  2434                           	global	_dataToVel
  2435                           
  2436 ;; *************** function _dataToVel *****************
  2437 ;; Defined at:
  2438 ;;		line 336 in file "main.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  data            1    wreg     unsigned char 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  data            1    6[COMRAM] unsigned char 
  2443 ;;  vel             2    7[COMRAM] unsigned int 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  2    4[COMRAM] unsigned int 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0, prodl, prodh
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2453 ;;      Params:         2       0       0       0
  2454 ;;      Locals:         3       0       0       0
  2455 ;;      Temps:          0       0       0       0
  2456 ;;      Totals:         5       0       0       0
  2457 ;;Total ram usage:        5 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           psect	text12,class=CODE,space=0,reloc=2,group=0
  2467                           	line	336
  2468                           global __ptext12
  2469                           __ptext12:
  2470  0008F8                     psect	text12
  2471                           	file	"main.c"
  2472                           	line	336
  2473                           	global	__size_of_dataToVel
  2474                           	__size_of_dataToVel	equ	__end_of_dataToVel-_dataToVel
  2475  0000                     	
  2476                           _dataToVel:
  2477  0008F8                     ;incstack = 0
  2478                           	opt	stack 29
  2479                           ;dataToVel@data stored from wreg
  2480                           	movwf	((c:dataToVel@data)),c
  2481  0008F8  6E07               	line	338
  2482                           	
  2483                           l1350:
  2484  0008FA                     ;main.c: 336: uint16_t dataToVel(uint8_t data);main.c: 337: {;main.c: 338:     uint16_t 
                                 vel = (uint16_t)data*10;
  2485                           	movf	((c:dataToVel@data)),c,w
  2486  0008FA  5007               	mullw	0Ah
  2487  0008FC  0D0A               	movff	prodl,(c:dataToVel@vel)
  2488  0008FE  CFF3 F008          	movff	prodh,(c:dataToVel@vel+1)
  2489  000902  CFF4 F009          	line	340
  2490                           	
  2491                           l1352:
  2492  000906                     ;main.c: 340:     if(10u >= vel)
  2493                           		movf	((c:dataToVel@vel+1)),c,w
  2494  000906  5009               	bnz	u591
  2495  000908  E107               	movlw	11
  2496  00090A  0E0B               	subwf	 ((c:dataToVel@vel)),c,w
  2497  00090C  5C08               	btfsc	status,0
  2498  00090E  B0D8               	goto	u591
  2499  000910  EF8C  F004         	goto	u590
  2500  000914  EF8E  F004         
  2501                           u591:
  2502  000918                     	goto	l1356
  2503  000918  EF94  F004         u590:
  2504  00091C                     	line	342
  2505                           	
  2506                           l1354:
  2507  00091C                     ;main.c: 341:     {;main.c: 342:         vel = 0;
  2508                           	movlw	high(0)
  2509  00091C  0E00               	movwf	((c:dataToVel@vel+1)),c
  2510  00091E  6E09               	movlw	low(0)
  2511  000920  0E00               	movwf	((c:dataToVel@vel)),c
  2512  000922  6E08               	goto	l1356
  2513  000924  EF94  F004         	line	343
  2514                           ;main.c: 343:     }
  2515                           	
  2516                           l232:
  2517  000928                     	line	345
  2518                           	
  2519                           l1356:
  2520  000928                     ;main.c: 345:     if(800u < vel)
  2521                           		movlw	33
  2522  000928  0E21               	subwf	 ((c:dataToVel@vel)),c,w
  2523  00092A  5C08               	movlw	3
  2524  00092C  0E03               	subwfb	((c:dataToVel@vel+1)),c,w
  2525  00092E  5809               	btfss	status,0
  2526  000930  A0D8               	goto	u601
  2527  000932  EF9D  F004         	goto	u600
  2528  000936  EF9F  F004         
  2529                           u601:
  2530  00093A                     	goto	l1360
  2531  00093A  EFA5  F004         u600:
  2532  00093E                     	line	347
  2533                           	
  2534                           l1358:
  2535  00093E                     ;main.c: 346:     {;main.c: 347:         vel = 800u;
  2536                           	movlw	high(0320h)
  2537  00093E  0E03               	movwf	((c:dataToVel@vel+1)),c
  2538  000940  6E09               	movlw	low(0320h)
  2539  000942  0E20               	movwf	((c:dataToVel@vel)),c
  2540  000944  6E08               	goto	l1360
  2541  000946  EFA5  F004         	line	348
  2542                           ;main.c: 348:     }
  2543                           	
  2544                           l233:
  2545  00094A                     	line	350
  2546                           	
  2547                           l1360:
  2548  00094A                     ;main.c: 350:     return vel;
  2549                           	movff	(c:dataToVel@vel),(c:?_dataToVel)
  2550  00094A  C008  F005         	movff	(c:dataToVel@vel+1),(c:?_dataToVel+1)
  2551  00094E  C009  F006         	goto	l234
  2552  000952  EFAB  F004         	
  2553                           l1362:
  2554  000956                     	line	351
  2555                           	
  2556                           l234:
  2557  000956                     	return	;funcret
  2558  000956  0012               	opt stack 0
  2559                           GLOBAL	__end_of_dataToVel
  2560                           	__end_of_dataToVel:
  2561  000958                     	signat	_dataToVel,4218
  2562                           	global	_calculatePWM
  2563                           
  2564 ;; *************** function _calculatePWM *****************
  2565 ;; Defined at:
  2566 ;;		line 186 in file "main.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  setpoint        1    wreg     char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  setpoint        1    0[COMRAM] char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  4   30[COMRAM] long 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2580 ;;      Params:         4       0       0       0
  2581 ;;      Locals:         0       0       0       0
  2582 ;;      Temps:          8       0       0       0
  2583 ;;      Totals:        12       0       0       0
  2584 ;;Total ram usage:       12 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    2
  2587 ;; This function calls:
  2588 ;;		___aldiv
  2589 ;;		___lldiv
  2590 ;;		___lmul
  2591 ;; This function is called by:
  2592 ;;		_main
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           psect	text13,class=CODE,space=0,reloc=2,group=0
  2596                           	line	186
  2597                           global __ptext13
  2598                           __ptext13:
  2599  000182                     psect	text13
  2600                           	file	"main.c"
  2601                           	line	186
  2602                           	global	__size_of_calculatePWM
  2603                           	__size_of_calculatePWM	equ	__end_of_calculatePWM-_calculatePWM
  2604  0000                     	
  2605                           _calculatePWM:
  2606  000182                     ;incstack = 0
  2607                           	opt	stack 28
  2608                           	line	189
  2609                           	
  2610                           l1364:
  2611  000182                     ;main.c: 186: int32_t calculatePWM(int8_t setpoint);main.c: 187: {;main.c: 189:     if(0
                                  == GPREG.STPCRL)
  2612                           	btfsc	((c:_GPREG)),c,5
  2613  000182  BA50               	goto	u611
  2614  000184  EFC6  F000         	goto	u610
  2615  000188  EFC8  F000         u611:
  2616  00018C                     	goto	l1376
  2617  00018C  EFEA  F000         u610:
  2618  000190                     	line	191
  2619                           	
  2620                           l1366:
  2621  000190                     ;main.c: 190:     {;main.c: 191:         vel = 0;
  2622                           	movlw	high(0)
  2623  000190  0E00               	movwf	((c:_vel+1)),c
  2624  000192  6E57               	movlw	low(0)
  2625  000194  0E00               	movwf	((c:_vel)),c
  2626  000196  6E56               	line	192
  2627                           	
  2628                           l1368:
  2629  000198                     ;main.c: 192:         vel = VELRH;
  2630                           	movff	(c:3945),(c:_vel)	;volatile
  2631  000198  CF69 F056          	clrf	((c:_vel+1)),c
  2632  00019C  6A57               	line	193
  2633                           	
  2634                           l1370:
  2635  00019E                     ;main.c: 193:         vel <<= 8;
  2636                           	movf	((c:_vel)),c,w
  2637  00019E  5056               	movwf	((c:_vel+1)),c
  2638  0001A0  6E57               	clrf	((c:_vel)),c
  2639  0001A2  6A56               	line	194
  2640                           	
  2641                           l1372:
  2642  0001A4                     ;main.c: 194:         vel |= VELRL;
  2643                           	movf	((c:3944)),c,w	;volatile
  2644  0001A4  5068               	iorwf	((c:_vel)),c
  2645  0001A6  1256               	line	196
  2646                           	
  2647                           l1374:
  2648  0001A8                     ;main.c: 196:         vel = 571420u/vel;
  2649                           	movlw	low(08B81Ch)
  2650  0001A8  0E1C               	movwf	((c:___lldiv@dividend)),c
  2651  0001AA  6E05               	movlw	high(08B81Ch)
  2652  0001AC  0EB8               	movwf	((c:___lldiv@dividend+1)),c
  2653  0001AE  6E06               	movlw	low highword(08B81Ch)
  2654  0001B0  0E08               	movwf	((c:___lldiv@dividend+2)),c
  2655  0001B2  6E07               	movlw	high highword(08B81Ch)
  2656  0001B4  0E00               	movwf	((c:___lldiv@dividend+3)),c
  2657  0001B6  6E08               	movff	(c:_vel),(c:___lldiv@divisor)
  2658  0001B8  C056  F009         	movff	(c:_vel+1),(c:___lldiv@divisor+1)
  2659  0001BC  C057  F00A         	clrf	((c:___lldiv@divisor+2)),c
  2660  0001C0  6A0B               	clrf	((c:___lldiv@divisor+3)),c
  2661  0001C2  6A0C               
  2662                           	call	___lldiv	;wreg free
  2663  0001C4  EC29  F003         	movff	0+?___lldiv,(c:_vel)
  2664  0001C8  C005  F056         	movff	1+?___lldiv,(c:_vel+1)
  2665  0001CC  C006  F057         	line	198
  2666                           ;main.c: 198:     } else {
  2667                           	goto	l1380
  2668  0001D0  EFF1  F000         	
  2669                           l193:
  2670  0001D4                     	line	199
  2671                           	
  2672                           l1376:
  2673  0001D4                     ;main.c: 199:         vel = 0;
  2674                           	movlw	high(0)
  2675  0001D4  0E00               	movwf	((c:_vel+1)),c
  2676  0001D6  6E57               	movlw	low(0)
  2677  0001D8  0E00               	movwf	((c:_vel)),c
  2678  0001DA  6E56               	line	200
  2679                           	
  2680                           l1378:
  2681  0001DC                     ;main.c: 200:         GPREG.STPCRL = 0;
  2682                           	bcf	((c:_GPREG)),c,5
  2683  0001DC  9A50               	goto	l1380
  2684  0001DE  EFF1  F000         	line	201
  2685                           ;main.c: 201:     }
  2686                           	
  2687                           l194:
  2688  0001E2                     	line	203
  2689                           	
  2690                           l1380:
  2691  0001E2                     ;main.c: 203:     error = (ref_vel - vel);
  2692                           	movff	(c:_vel),??_calculatePWM+0+0
  2693  0001E2  C056  F023         	movff	(c:_vel+1),??_calculatePWM+0+0+1
  2694  0001E6  C057  F024         	comf	(??_calculatePWM+0+0),c
  2695  0001EA  1E23               	comf	(??_calculatePWM+0+1),c
  2696  0001EC  1E24               	infsnz	(??_calculatePWM+0+0),c
  2697  0001EE  4A23               	incf	(??_calculatePWM+0+1),c
  2698  0001F0  2A24               	movf	((c:_ref_vel)),c,w
  2699  0001F2  5058               	addwf	(??_calculatePWM+0+0),c,w
  2700  0001F4  2423               	movwf	((c:_error)),c
  2701  0001F6  6E4C               	movf	((c:_ref_vel+1)),c,w
  2702  0001F8  5059               	addwfc	(??_calculatePWM+0+1),c,w
  2703  0001FA  2024               	movwf	1+((c:_error)),c
  2704  0001FC  6E4D               	line	204
  2705                           	
  2706                           l1382:
  2707  0001FE                     ;main.c: 204:     suma_error += (50*(int32_t)error)/1000;
  2708                           	movff	(c:_error),(c:___lmul@multiplier)
  2709  0001FE  C04C  F005         	movff	(c:_error+1),(c:___lmul@multiplier+1)
  2710  000202  C04D  F006         	movlw	0
  2711  000206  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2712  000208  BE06               	movlw	-1
  2713  00020A  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2714  00020C  6E07               	movwf	((c:___lmul@multiplier+3)),c
  2715  00020E  6E08               	movlw	low(032h)
  2716  000210  0E32               	movwf	((c:___lmul@multiplicand)),c
  2717  000212  6E09               	movlw	high(032h)
  2718  000214  0E00               	movwf	((c:___lmul@multiplicand+1)),c
  2719  000216  6E0A               	movlw	low highword(032h)
  2720  000218  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2721  00021A  6E0B               	movlw	high highword(032h)
  2722  00021C  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2723  00021E  6E0C               	call	___lmul	;wreg free
  2724  000220  EC43  F004         	movff	0+?___lmul,(c:___aldiv@dividend)
  2725  000224  C005  F011         	movff	1+?___lmul,(c:___aldiv@dividend+1)
  2726  000228  C006  F012         	movff	2+?___lmul,(c:___aldiv@dividend+2)
  2727  00022C  C007  F013         	movff	3+?___lmul,(c:___aldiv@dividend+3)
  2728  000230  C008  F014         	
  2729                           	movlw	low(03E8h)
  2730  000234  0EE8               	movwf	((c:___aldiv@divisor)),c
  2731  000236  6E15               	movlw	high(03E8h)
  2732  000238  0E03               	movwf	((c:___aldiv@divisor+1)),c
  2733  00023A  6E16               	movlw	low highword(03E8h)
  2734  00023C  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2735  00023E  6E17               	movlw	high highword(03E8h)
  2736  000240  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2737  000242  6E18               	call	___aldiv	;wreg free
  2738  000244  EC2B  F002         	movf	(0+?___aldiv),c,w
  2739  000248  5011               	addwf	((c:_suma_error)),c
  2740  00024A  2642               	movf	(1+?___aldiv),c,w
  2741  00024C  5012               	addwfc	((c:_suma_error+1)),c
  2742  00024E  2243               	movf	(2+?___aldiv),c,w
  2743  000250  5013               	addwfc	((c:_suma_error+2)),c
  2744  000252  2244               	movf	(3+?___aldiv),c,w
  2745  000254  5014               	addwfc	((c:_suma_error+3)),c
  2746  000256  2245               
  2747                           	line	205
  2748                           	
  2749                           l1384:
  2750  000258                     ;main.c: 205:     aceleracion = (int32_t)(error - error_ant)*20;
  2751                           	movff	(c:_error_ant),??_calculatePWM+0+0
  2752  000258  C04A  F023         	movff	(c:_error_ant+1),??_calculatePWM+0+0+1
  2753  00025C  C04B  F024         	comf	(??_calculatePWM+0+0),c
  2754  000260  1E23               	comf	(??_calculatePWM+0+1),c
  2755  000262  1E24               	infsnz	(??_calculatePWM+0+0),c
  2756  000264  4A23               	incf	(??_calculatePWM+0+1),c
  2757  000266  2A24               	movf	((c:_error)),c,w
  2758  000268  504C               	addwf	(??_calculatePWM+0+0),c
  2759  00026A  2623               	movf	((c:_error+1)),c,w
  2760  00026C  504D               	addwfc	(??_calculatePWM+0+1),c
  2761  00026E  2224               	movff	??_calculatePWM+0+0,(c:___lmul@multiplier)
  2762  000270  C023  F005         	movff	??_calculatePWM+0+1,(c:___lmul@multiplier+1)
  2763  000274  C024  F006         	movlw	0
  2764  000278  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2765  00027A  BE06               	movlw	-1
  2766  00027C  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2767  00027E  6E07               	movwf	((c:___lmul@multiplier+3)),c
  2768  000280  6E08               	movlw	low(014h)
  2769  000282  0E14               	movwf	((c:___lmul@multiplicand)),c
  2770  000284  6E09               	movlw	high(014h)
  2771  000286  0E00               	movwf	((c:___lmul@multiplicand+1)),c
  2772  000288  6E0A               	movlw	low highword(014h)
  2773  00028A  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2774  00028C  6E0B               	movlw	high highword(014h)
  2775  00028E  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2776  000290  6E0C               	call	___lmul	;wreg free
  2777  000292  EC43  F004         	movff	0+?___lmul,(c:_aceleracion)
  2778  000296  C005  F03A         	movff	1+?___lmul,(c:_aceleracion+1)
  2779  00029A  C006  F03B         	movff	2+?___lmul,(c:_aceleracion+2)
  2780  00029E  C007  F03C         	movff	3+?___lmul,(c:_aceleracion+3)
  2781  0002A2  C008  F03D         	
  2782                           	line	206
  2783                           	
  2784                           l1386:
  2785  0002A6                     ;main.c: 206:     volt = ((PID.Kp * (int32_t)error) + ((PID.Ki * suma_error)) + (PID.Kd*
                                 aceleracion));
  2786                           	movff	(c:_error),(c:___lmul@multiplier)
  2787  0002A6  C04C  F005         	movff	(c:_error+1),(c:___lmul@multiplier+1)
  2788  0002AA  C04D  F006         	movlw	0
  2789  0002AE  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2790  0002B0  BE06               	movlw	-1
  2791  0002B2  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2792  0002B4  6E07               	movwf	((c:___lmul@multiplier+3)),c
  2793  0002B6  6E08               	movff	(c:_PID),(c:___lmul@multiplicand)
  2794  0002B8  C02E  F009         	movff	(c:_PID+1),(c:___lmul@multiplicand+1)
  2795  0002BC  C02F  F00A         	movff	(c:_PID+2),(c:___lmul@multiplicand+2)
  2796  0002C0  C030  F00B         	movff	(c:_PID+3),(c:___lmul@multiplicand+3)
  2797  0002C4  C031  F00C         	call	___lmul	;wreg free
  2798  0002C8  EC43  F004         	movff	0+?___lmul,??_calculatePWM+0+0
  2799  0002CC  C005  F023         	movff	1+?___lmul,??_calculatePWM+0+0+1
  2800  0002D0  C006  F024         	movff	2+?___lmul,??_calculatePWM+0+0+2
  2801  0002D4  C007  F025         	movff	3+?___lmul,??_calculatePWM+0+0+3
  2802  0002D8  C008  F026         	
  2803                           	movff	0+((c:_PID)+04h),(c:___lmul@multiplier)
  2804  0002DC  C032  F005         	movff	1+((c:_PID)+04h),(c:___lmul@multiplier+1)
  2805  0002E0  C033  F006         	movff	2+((c:_PID)+04h),(c:___lmul@multiplier+2)
  2806  0002E4  C034  F007         	movff	3+((c:_PID)+04h),(c:___lmul@multiplier+3)
  2807  0002E8  C035  F008         	movff	(c:_suma_error),(c:___lmul@multiplicand)
  2808  0002EC  C042  F009         	movff	(c:_suma_error+1),(c:___lmul@multiplicand+1)
  2809  0002F0  C043  F00A         	movff	(c:_suma_error+2),(c:___lmul@multiplicand+2)
  2810  0002F4  C044  F00B         	movff	(c:_suma_error+3),(c:___lmul@multiplicand+3)
  2811  0002F8  C045  F00C         	call	___lmul	;wreg free
  2812  0002FC  EC43  F004         	movf	(0+?___lmul),c,w
  2813  000300  5005               	addwf	(??_calculatePWM+0+0),c,w
  2814  000302  2423               	movwf	(??_calculatePWM+4+0)&0ffh,c
  2815  000304  6E27               	movf	(1+?___lmul),c,w
  2816  000306  5006               	addwfc	(??_calculatePWM+0+1),c,w
  2817  000308  2024               	movwf	1+(??_calculatePWM+4+0)&0ffh,c
  2818  00030A  6E28               	
  2819                           	movf	(2+?___lmul),c,w
  2820  00030C  5007               	addwfc	(??_calculatePWM+0+2),c,w
  2821  00030E  2025               	movwf	2+(??_calculatePWM+4+0)&0ffh,c
  2822  000310  6E29               	
  2823                           	movf	(3+?___lmul),c,w
  2824  000312  5008               	addwfc	(??_calculatePWM+0+3),c,w
  2825  000314  2026               	movwf	3+(??_calculatePWM+4+0)&0ffh,c
  2826  000316  6E2A               	movff	0+((c:_PID)+08h),(c:___lmul@multiplier)
  2827  000318  C036  F005         	movff	1+((c:_PID)+08h),(c:___lmul@multiplier+1)
  2828  00031C  C037  F006         	movff	2+((c:_PID)+08h),(c:___lmul@multiplier+2)
  2829  000320  C038  F007         	movff	3+((c:_PID)+08h),(c:___lmul@multiplier+3)
  2830  000324  C039  F008         	movff	(c:_aceleracion),(c:___lmul@multiplicand)
  2831  000328  C03A  F009         	movff	(c:_aceleracion+1),(c:___lmul@multiplicand+1)
  2832  00032C  C03B  F00A         	movff	(c:_aceleracion+2),(c:___lmul@multiplicand+2)
  2833  000330  C03C  F00B         	movff	(c:_aceleracion+3),(c:___lmul@multiplicand+3)
  2834  000334  C03D  F00C         	call	___lmul	;wreg free
  2835  000338  EC43  F004         	movf	(0+?___lmul),c,w
  2836  00033C  5005               	addwf	(??_calculatePWM+4+0),c,w
  2837  00033E  2427               	movwf	((c:_volt)),c
  2838  000340  6E3E               	movf	(1+?___lmul),c,w
  2839  000342  5006               	addwfc	(??_calculatePWM+4+1),c,w
  2840  000344  2028               	movwf	1+((c:_volt)),c
  2841  000346  6E3F               	
  2842                           	movf	(2+?___lmul),c,w
  2843  000348  5007               	addwfc	(??_calculatePWM+4+2),c,w
  2844  00034A  2029               	movwf	2+((c:_volt)),c
  2845  00034C  6E40               	
  2846                           	movf	(3+?___lmul),c,w
  2847  00034E  5008               	addwfc	(??_calculatePWM+4+3),c,w
  2848  000350  202A               	movwf	3+((c:_volt)),c
  2849  000352  6E41               	line	207
  2850                           	
  2851                           l1388:
  2852  000354                     ;main.c: 207:     volt /= 10;
  2853                           	movff	(c:_volt),(c:___aldiv@dividend)
  2854  000354  C03E  F011         	movff	(c:_volt+1),(c:___aldiv@dividend+1)
  2855  000358  C03F  F012         	movff	(c:_volt+2),(c:___aldiv@dividend+2)
  2856  00035C  C040  F013         	movff	(c:_volt+3),(c:___aldiv@dividend+3)
  2857  000360  C041  F014         	movlw	low(0Ah)
  2858  000364  0E0A               	movwf	((c:___aldiv@divisor)),c
  2859  000366  6E15               	movlw	high(0Ah)
  2860  000368  0E00               	movwf	((c:___aldiv@divisor+1)),c
  2861  00036A  6E16               	movlw	low highword(0Ah)
  2862  00036C  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2863  00036E  6E17               	movlw	high highword(0Ah)
  2864  000370  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2865  000372  6E18               	call	___aldiv	;wreg free
  2866  000374  EC2B  F002         	movff	0+?___aldiv,(c:_volt)
  2867  000378  C011  F03E         	movff	1+?___aldiv,(c:_volt+1)
  2868  00037C  C012  F03F         	movff	2+?___aldiv,(c:_volt+2)
  2869  000380  C013  F040         	movff	3+?___aldiv,(c:_volt+3)
  2870  000384  C014  F041         	
  2871                           	line	208
  2872                           	
  2873                           l1390:
  2874  000388                     ;main.c: 208:     error_ant = error;
  2875                           	movff	(c:_error),(c:_error_ant)
  2876  000388  C04C  F04A         	movff	(c:_error+1),(c:_error_ant+1)
  2877  00038C  C04D  F04B         	line	211
  2878                           	
  2879                           l1392:
  2880  000390                     ;main.c: 211:     if(0 > volt)
  2881                           	btfsc	((c:_volt+3)),c,7
  2882  000390  BE41               	goto	u620
  2883  000392  EFCF  F001         	goto	u621
  2884  000396  EFCD  F001         
  2885                           u621:
  2886  00039A                     	goto	l1396
  2887  00039A  EFD9  F001         u620:
  2888  00039E                     	line	213
  2889                           	
  2890                           l1394:
  2891  00039E                     ;main.c: 212:     {;main.c: 213:         volt = 0;
  2892                           	movlw	low(0)
  2893  00039E  0E00               	movwf	((c:_volt)),c
  2894  0003A0  6E3E               	movlw	high(0)
  2895  0003A2  0E00               	movwf	((c:_volt+1)),c
  2896  0003A4  6E3F               	movlw	low highword(0)
  2897  0003A6  0E00               	movwf	((c:_volt+2)),c
  2898  0003A8  6E40               	movlw	high highword(0)
  2899  0003AA  0E00               	movwf	((c:_volt+3)),c
  2900  0003AC  6E41               	goto	l1396
  2901  0003AE  EFD9  F001         	line	214
  2902                           ;main.c: 214:     }
  2903                           	
  2904                           l195:
  2905  0003B2                     	line	216
  2906                           	
  2907                           l1396:
  2908  0003B2                     ;main.c: 216:     if(800 < volt)
  2909                           	btfsc	((c:_volt+3)),c,7
  2910  0003B2  BE41               	goto	u631
  2911  0003B4  EFE8  F001         	movf	((c:_volt+3)),c,w
  2912  0003B8  5041               	iorwf	((c:_volt+2)),c,w
  2913  0003BA  1040               	bnz	u630
  2914  0003BC  E10B               	movlw	33
  2915  0003BE  0E21               	subwf	 ((c:_volt)),c,w
  2916  0003C0  5C3E               	movlw	3
  2917  0003C2  0E03               	subwfb	((c:_volt+1)),c,w
  2918  0003C4  583F               	btfss	status,0
  2919  0003C6  A0D8               	goto	u631
  2920  0003C8  EFE8  F001         	goto	u630
  2921  0003CC  EFEA  F001         
  2922                           u631:
  2923  0003D0                     	goto	l1400
  2924  0003D0  EFF4  F001         u630:
  2925  0003D4                     	line	218
  2926                           	
  2927                           l1398:
  2928  0003D4                     ;main.c: 217:     {;main.c: 218:         volt = 800;
  2929                           	movlw	low(0320h)
  2930  0003D4  0E20               	movwf	((c:_volt)),c
  2931  0003D6  6E3E               	movlw	high(0320h)
  2932  0003D8  0E03               	movwf	((c:_volt+1)),c
  2933  0003DA  6E3F               	movlw	low highword(0320h)
  2934  0003DC  0E00               	movwf	((c:_volt+2)),c
  2935  0003DE  6E40               	movlw	high highword(0320h)
  2936  0003E0  0E00               	movwf	((c:_volt+3)),c
  2937  0003E2  6E41               	goto	l1400
  2938  0003E4  EFF4  F001         	line	219
  2939                           ;main.c: 219:     }
  2940                           	
  2941                           l196:
  2942  0003E8                     	line	221
  2943                           	
  2944                           l1400:
  2945  0003E8                     ;main.c: 221:     volt = (volt*1022u)/800;
  2946                           	movff	(c:_volt),(c:___lmul@multiplier)
  2947  0003E8  C03E  F005         	movff	(c:_volt+1),(c:___lmul@multiplier+1)
  2948  0003EC  C03F  F006         	movff	(c:_volt+2),(c:___lmul@multiplier+2)
  2949  0003F0  C040  F007         	movff	(c:_volt+3),(c:___lmul@multiplier+3)
  2950  0003F4  C041  F008         	movlw	low(03FEh)
  2951  0003F8  0EFE               	movwf	((c:___lmul@multiplicand)),c
  2952  0003FA  6E09               	movlw	high(03FEh)
  2953  0003FC  0E03               	movwf	((c:___lmul@multiplicand+1)),c
  2954  0003FE  6E0A               	movlw	low highword(03FEh)
  2955  000400  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2956  000402  6E0B               	movlw	high highword(03FEh)
  2957  000404  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2958  000406  6E0C               	call	___lmul	;wreg free
  2959  000408  EC43  F004         	movff	0+?___lmul,(c:___aldiv@dividend)
  2960  00040C  C005  F011         	movff	1+?___lmul,(c:___aldiv@dividend+1)
  2961  000410  C006  F012         	movff	2+?___lmul,(c:___aldiv@dividend+2)
  2962  000414  C007  F013         	movff	3+?___lmul,(c:___aldiv@dividend+3)
  2963  000418  C008  F014         	
  2964                           	movlw	low(0320h)
  2965  00041C  0E20               	movwf	((c:___aldiv@divisor)),c
  2966  00041E  6E15               	movlw	high(0320h)
  2967  000420  0E03               	movwf	((c:___aldiv@divisor+1)),c
  2968  000422  6E16               	movlw	low highword(0320h)
  2969  000424  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2970  000426  6E17               	movlw	high highword(0320h)
  2971  000428  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2972  00042A  6E18               	call	___aldiv	;wreg free
  2973  00042C  EC2B  F002         	movff	0+?___aldiv,(c:_volt)
  2974  000430  C011  F03E         	movff	1+?___aldiv,(c:_volt+1)
  2975  000434  C012  F03F         	movff	2+?___aldiv,(c:_volt+2)
  2976  000438  C013  F040         	movff	3+?___aldiv,(c:_volt+3)
  2977  00043C  C014  F041         	
  2978                           	line	224
  2979                           	
  2980                           l1402:
  2981  000440                     ;main.c: 224:     return volt;
  2982                           	movff	(c:_volt),(c:?_calculatePWM)
  2983  000440  C03E  F01F         	movff	(c:_volt+1),(c:?_calculatePWM+1)
  2984  000444  C03F  F020         	movff	(c:_volt+2),(c:?_calculatePWM+2)
  2985  000448  C040  F021         	movff	(c:_volt+3),(c:?_calculatePWM+3)
  2986  00044C  C041  F022         	goto	l197
  2987  000450  EF2A  F002         	
  2988                           l1404:
  2989  000454                     	line	225
  2990                           	
  2991                           l197:
  2992  000454                     	return	;funcret
  2993  000454  0012               	opt stack 0
  2994                           GLOBAL	__end_of_calculatePWM
  2995                           	__end_of_calculatePWM:
  2996  000456                     	signat	_calculatePWM,4220
  2997                           	global	___lmul
  2998                           
  2999 ;; *************** function ___lmul *****************
  3000 ;; Defined at:
  3001 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  multiplier      4    4[COMRAM] unsigned long 
  3004 ;;  multiplicand    4    8[COMRAM] unsigned long 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  product         4   12[COMRAM] unsigned long 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  4    4[COMRAM] unsigned long 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3016 ;;      Params:         8       0       0       0
  3017 ;;      Locals:         4       0       0       0
  3018 ;;      Temps:          0       0       0       0
  3019 ;;      Totals:        12       0       0       0
  3020 ;;Total ram usage:       12 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_calculatePWM
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           psect	text14,class=CODE,space=0,reloc=2,group=1
  3030                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  3031                           	line	15
  3032                           global __ptext14
  3033                           __ptext14:
  3034  000886                     psect	text14
  3035                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  3036                           	line	15
  3037                           	global	__size_of___lmul
  3038                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  3039  0000                     	
  3040                           ___lmul:
  3041  000886                     ;incstack = 0
  3042                           	opt	stack 28
  3043                           	line	119
  3044                           	
  3045                           l1228:
  3046  000886                     	movlw	low(0)
  3047  000886  0E00               	movwf	((c:___lmul@product)),c
  3048  000888  6E0D               	movlw	high(0)
  3049  00088A  0E00               	movwf	((c:___lmul@product+1)),c
  3050  00088C  6E0E               	movlw	low highword(0)
  3051  00088E  0E00               	movwf	((c:___lmul@product+2)),c
  3052  000890  6E0F               	movlw	high highword(0)
  3053  000892  0E00               	movwf	((c:___lmul@product+3)),c
  3054  000894  6E10               	goto	l1230
  3055  000896  EF4D  F004         	line	120
  3056                           	
  3057                           l246:
  3058  00089A                     	line	121
  3059                           	
  3060                           l1230:
  3061  00089A                     	
  3062                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  3063  00089A  A005               	goto	u421
  3064  00089C  EF52  F004         	goto	u420
  3065  0008A0  EF54  F004         u421:
  3066  0008A4                     	goto	l1234
  3067  0008A4  EF5E  F004         u420:
  3068  0008A8                     	line	122
  3069                           	
  3070                           l1232:
  3071  0008A8                     	movf	((c:___lmul@multiplicand)),c,w
  3072  0008A8  5009               	addwf	((c:___lmul@product)),c
  3073  0008AA  260D               	movf	((c:___lmul@multiplicand+1)),c,w
  3074  0008AC  500A               	addwfc	((c:___lmul@product+1)),c
  3075  0008AE  220E               	movf	((c:___lmul@multiplicand+2)),c,w
  3076  0008B0  500B               	addwfc	((c:___lmul@product+2)),c
  3077  0008B2  220F               	movf	((c:___lmul@multiplicand+3)),c,w
  3078  0008B4  500C               	addwfc	((c:___lmul@product+3)),c
  3079  0008B6  2210               	goto	l1234
  3080  0008B8  EF5E  F004         	
  3081                           l247:
  3082  0008BC                     	line	123
  3083                           	
  3084                           l1234:
  3085  0008BC                     	bcf	status,0
  3086  0008BC  90D8               	rlcf	((c:___lmul@multiplicand)),c
  3087  0008BE  3609               	rlcf	((c:___lmul@multiplicand+1)),c
  3088  0008C0  360A               	rlcf	((c:___lmul@multiplicand+2)),c
  3089  0008C2  360B               	rlcf	((c:___lmul@multiplicand+3)),c
  3090  0008C4  360C               	line	124
  3091                           	
  3092                           l1236:
  3093  0008C6                     	bcf	status,0
  3094  0008C6  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  3095  0008C8  3208               	rrcf	((c:___lmul@multiplier+2)),c
  3096  0008CA  3207               	rrcf	((c:___lmul@multiplier+1)),c
  3097  0008CC  3206               	rrcf	((c:___lmul@multiplier)),c
  3098  0008CE  3205               	line	125
  3099                           	movf	((c:___lmul@multiplier)),c,w
  3100  0008D0  5005               iorwf	((c:___lmul@multiplier+1)),c,w
  3101  0008D2  1006               iorwf	((c:___lmul@multiplier+2)),c,w
  3102  0008D4  1007               iorwf	((c:___lmul@multiplier+3)),c,w
  3103  0008D6  1008               	btfss	status,2
  3104  0008D8  A4D8               	goto	u431
  3105  0008DA  EF71  F004         	goto	u430
  3106  0008DE  EF73  F004         
  3107                           u431:
  3108  0008E2                     	goto	l1230
  3109  0008E2  EF4D  F004         u430:
  3110  0008E6                     	
  3111                           l248:
  3112  0008E6                     	line	128
  3113                           	movff	(c:___lmul@product),(c:?___lmul)
  3114  0008E6  C00D  F005         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  3115  0008EA  C00E  F006         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  3116  0008EE  C00F  F007         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  3117  0008F2  C010  F008         	line	129
  3118                           	
  3119                           l249:
  3120  0008F6                     	return	;funcret
  3121  0008F6  0012               	opt stack 0
  3122                           GLOBAL	__end_of___lmul
  3123                           	__end_of___lmul:
  3124  0008F8                     	signat	___lmul,8316
  3125                           	global	___lldiv
  3126                           
  3127 ;; *************** function ___lldiv *****************
  3128 ;; Defined at:
  3129 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  dividend        4    4[COMRAM] unsigned long 
  3132 ;;  divisor         4    8[COMRAM] unsigned long 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  quotient        4   12[COMRAM] unsigned long 
  3135 ;;  counter         1   16[COMRAM] unsigned char 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  4    4[COMRAM] unsigned long 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2, status,0
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3145 ;;      Params:         8       0       0       0
  3146 ;;      Locals:         5       0       0       0
  3147 ;;      Temps:          0       0       0       0
  3148 ;;      Totals:        13       0       0       0
  3149 ;;Total ram usage:       13 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    1
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_calculatePWM
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           psect	text15,class=CODE,space=0,reloc=2,group=1
  3159                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  3160                           	line	7
  3161                           global __ptext15
  3162                           __ptext15:
  3163  000652                     psect	text15
  3164                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  3165                           	line	7
  3166                           	global	__size_of___lldiv
  3167                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  3168  0000                     	
  3169                           ___lldiv:
  3170  000652                     ;incstack = 0
  3171                           	opt	stack 28
  3172                           	line	13
  3173                           	
  3174                           l1238:
  3175  000652                     	movlw	low(0)
  3176  000652  0E00               	movwf	((c:___lldiv@quotient)),c
  3177  000654  6E0D               	movlw	high(0)
  3178  000656  0E00               	movwf	((c:___lldiv@quotient+1)),c
  3179  000658  6E0E               	movlw	low highword(0)
  3180  00065A  0E00               	movwf	((c:___lldiv@quotient+2)),c
  3181  00065C  6E0F               	movlw	high highword(0)
  3182  00065E  0E00               	movwf	((c:___lldiv@quotient+3)),c
  3183  000660  6E10               	line	14
  3184                           	
  3185                           l1240:
  3186  000662                     	movf	((c:___lldiv@divisor)),c,w
  3187  000662  5009               iorwf	((c:___lldiv@divisor+1)),c,w
  3188  000664  100A               iorwf	((c:___lldiv@divisor+2)),c,w
  3189  000666  100B               iorwf	((c:___lldiv@divisor+3)),c,w
  3190  000668  100C               	btfsc	status,2
  3191  00066A  B4D8               	goto	u441
  3192  00066C  EF3A  F003         	goto	u440
  3193  000670  EF3C  F003         
  3194                           u441:
  3195  000674                     	goto	l264
  3196  000674  EF7C  F003         u440:
  3197  000678                     	line	15
  3198                           	
  3199                           l1242:
  3200  000678                     	movlw	low(01h)
  3201  000678  0E01               	movwf	((c:___lldiv@counter)),c
  3202  00067A  6E11               	line	16
  3203                           	goto	l1246
  3204  00067C  EF48  F003         	
  3205                           l266:
  3206  000680                     	line	17
  3207                           	
  3208                           l1244:
  3209  000680                     	bcf	status,0
  3210  000680  90D8               	rlcf	((c:___lldiv@divisor)),c
  3211  000682  3609               	rlcf	((c:___lldiv@divisor+1)),c
  3212  000684  360A               	rlcf	((c:___lldiv@divisor+2)),c
  3213  000686  360B               	rlcf	((c:___lldiv@divisor+3)),c
  3214  000688  360C               	line	18
  3215                           	incf	((c:___lldiv@counter)),c
  3216  00068A  2A11               	goto	l1246
  3217  00068C  EF48  F003         	line	19
  3218                           	
  3219                           l265:
  3220  000690                     	line	16
  3221                           	
  3222                           l1246:
  3223  000690                     	
  3224                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
  3225  000690  AE0C               	goto	u451
  3226  000692  EF4D  F003         	goto	u450
  3227  000696  EF4F  F003         u451:
  3228  00069A                     	goto	l1244
  3229  00069A  EF40  F003         u450:
  3230  00069E                     	goto	l1248
  3231  00069E  EF53  F003         	
  3232                           l267:
  3233  0006A2                     	goto	l1248
  3234  0006A2  EF53  F003         	line	20
  3235                           	
  3236                           l268:
  3237  0006A6                     	line	21
  3238                           	
  3239                           l1248:
  3240  0006A6                     	bcf	status,0
  3241  0006A6  90D8               	rlcf	((c:___lldiv@quotient)),c
  3242  0006A8  360D               	rlcf	((c:___lldiv@quotient+1)),c
  3243  0006AA  360E               	rlcf	((c:___lldiv@quotient+2)),c
  3244  0006AC  360F               	rlcf	((c:___lldiv@quotient+3)),c
  3245  0006AE  3610               	line	22
  3246                           	
  3247                           l1250:
  3248  0006B0                     		movf	((c:___lldiv@divisor)),c,w
  3249  0006B0  5009               	subwf	((c:___lldiv@dividend)),c,w
  3250  0006B2  5C05               	movf	((c:___lldiv@divisor+1)),c,w
  3251  0006B4  500A               	subwfb	((c:___lldiv@dividend+1)),c,w
  3252  0006B6  5806               	movf	((c:___lldiv@divisor+2)),c,w
  3253  0006B8  500B               	subwfb	((c:___lldiv@dividend+2)),c,w
  3254  0006BA  5807               	movf	((c:___lldiv@divisor+3)),c,w
  3255  0006BC  500C               	subwfb	((c:___lldiv@dividend+3)),c,w
  3256  0006BE  5808               	btfss	status,0
  3257  0006C0  A0D8               	goto	u461
  3258  0006C2  EF65  F003         	goto	u460
  3259  0006C6  EF67  F003         
  3260                           u461:
  3261  0006CA                     	goto	l1256
  3262  0006CA  EF72  F003         u460:
  3263  0006CE                     	line	23
  3264                           	
  3265                           l1252:
  3266  0006CE                     	movf	((c:___lldiv@divisor)),c,w
  3267  0006CE  5009               	subwf	((c:___lldiv@dividend)),c
  3268  0006D0  5E05               	movf	((c:___lldiv@divisor+1)),c,w
  3269  0006D2  500A               	subwfb	((c:___lldiv@dividend+1)),c
  3270  0006D4  5A06               	movf	((c:___lldiv@divisor+2)),c,w
  3271  0006D6  500B               	subwfb	((c:___lldiv@dividend+2)),c
  3272  0006D8  5A07               	movf	((c:___lldiv@divisor+3)),c,w
  3273  0006DA  500C               	subwfb	((c:___lldiv@dividend+3)),c
  3274  0006DC  5A08               	line	24
  3275                           	
  3276                           l1254:
  3277  0006DE                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
  3278  0006DE  800D               	goto	l1256
  3279  0006E0  EF72  F003         	line	25
  3280                           	
  3281                           l269:
  3282  0006E4                     	line	26
  3283                           	
  3284                           l1256:
  3285  0006E4                     	bcf	status,0
  3286  0006E4  90D8               	rrcf	((c:___lldiv@divisor+3)),c
  3287  0006E6  320C               	rrcf	((c:___lldiv@divisor+2)),c
  3288  0006E8  320B               	rrcf	((c:___lldiv@divisor+1)),c
  3289  0006EA  320A               	rrcf	((c:___lldiv@divisor)),c
  3290  0006EC  3209               	line	27
  3291                           	
  3292                           l1258:
  3293  0006EE                     	decfsz	((c:___lldiv@counter)),c
  3294  0006EE  2E11               	
  3295                           	goto	l1248
  3296  0006F0  EF53  F003         	goto	l264
  3297  0006F4  EF7C  F003         	
  3298                           l270:
  3299  0006F8                     	line	28
  3300                           	
  3301                           l264:
  3302  0006F8                     	line	29
  3303                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
  3304  0006F8  C00D  F005         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
  3305  0006FC  C00E  F006         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
  3306  000700  C00F  F007         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
  3307  000704  C010  F008         	line	30
  3308                           	
  3309                           l271:
  3310  000708                     	return	;funcret
  3311  000708  0012               	opt stack 0
  3312                           GLOBAL	__end_of___lldiv
  3313                           	__end_of___lldiv:
  3314  00070A                     	signat	___lldiv,8316
  3315                           	global	___aldiv
  3316                           
  3317 ;; *************** function ___aldiv *****************
  3318 ;; Defined at:
  3319 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  dividend        4   16[COMRAM] long 
  3322 ;;  divisor         4   20[COMRAM] long 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  quotient        4   26[COMRAM] long 
  3325 ;;  sign            1   25[COMRAM] unsigned char 
  3326 ;;  counter         1   24[COMRAM] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  4   16[COMRAM] long 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3336 ;;      Params:         8       0       0       0
  3337 ;;      Locals:         6       0       0       0
  3338 ;;      Temps:          0       0       0       0
  3339 ;;      Totals:        14       0       0       0
  3340 ;;Total ram usage:       14 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    1
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_calculatePWM
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           psect	text16,class=CODE,space=0,reloc=2,group=1
  3350                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3351                           	line	7
  3352                           global __ptext16
  3353                           __ptext16:
  3354  000456                     psect	text16
  3355                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3356                           	line	7
  3357                           	global	__size_of___aldiv
  3358                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  3359  0000                     	
  3360                           ___aldiv:
  3361  000456                     ;incstack = 0
  3362                           	opt	stack 28
  3363                           	line	13
  3364                           	
  3365                           l1260:
  3366  000456                     	movlw	low(0)
  3367  000456  0E00               	movwf	((c:___aldiv@sign)),c
  3368  000458  6E1A               	line	14
  3369                           	
  3370                           l1262:
  3371  00045A                     	btfsc	((c:___aldiv@divisor+3)),c,7
  3372  00045A  BE18               	goto	u470
  3373  00045C  EF34  F002         	goto	u471
  3374  000460  EF32  F002         
  3375                           u471:
  3376  000464                     	goto	l1268
  3377  000464  EF40  F002         u470:
  3378  000468                     	line	15
  3379                           	
  3380                           l1264:
  3381  000468                     	comf	((c:___aldiv@divisor+3)),c
  3382  000468  1E18               	comf	((c:___aldiv@divisor+2)),c
  3383  00046A  1E17               	comf	((c:___aldiv@divisor+1)),c
  3384  00046C  1E16               	negf	((c:___aldiv@divisor)),c
  3385  00046E  6C15               	movlw	0
  3386  000470  0E00               	addwfc	((c:___aldiv@divisor+1)),c
  3387  000472  2216               	addwfc	((c:___aldiv@divisor+2)),c
  3388  000474  2217               	addwfc	((c:___aldiv@divisor+3)),c
  3389  000476  2218               	line	16
  3390                           	
  3391                           l1266:
  3392  000478                     	movlw	low(01h)
  3393  000478  0E01               	movwf	((c:___aldiv@sign)),c
  3394  00047A  6E1A               	goto	l1268
  3395  00047C  EF40  F002         	line	17
  3396                           	
  3397                           l306:
  3398  000480                     	line	18
  3399                           	
  3400                           l1268:
  3401  000480                     	btfsc	((c:___aldiv@dividend+3)),c,7
  3402  000480  BE14               	goto	u480
  3403  000482  EF47  F002         	goto	u481
  3404  000486  EF45  F002         
  3405                           u481:
  3406  00048A                     	goto	l1274
  3407  00048A  EF53  F002         u480:
  3408  00048E                     	line	19
  3409                           	
  3410                           l1270:
  3411  00048E                     	comf	((c:___aldiv@dividend+3)),c
  3412  00048E  1E14               	comf	((c:___aldiv@dividend+2)),c
  3413  000490  1E13               	comf	((c:___aldiv@dividend+1)),c
  3414  000492  1E12               	negf	((c:___aldiv@dividend)),c
  3415  000494  6C11               	movlw	0
  3416  000496  0E00               	addwfc	((c:___aldiv@dividend+1)),c
  3417  000498  2212               	addwfc	((c:___aldiv@dividend+2)),c
  3418  00049A  2213               	addwfc	((c:___aldiv@dividend+3)),c
  3419  00049C  2214               	line	20
  3420                           	
  3421                           l1272:
  3422  00049E                     	movlw	(01h)&0ffh
  3423  00049E  0E01               	xorwf	((c:___aldiv@sign)),c
  3424  0004A0  1A1A               	goto	l1274
  3425  0004A2  EF53  F002         	line	21
  3426                           	
  3427                           l307:
  3428  0004A6                     	line	22
  3429                           	
  3430                           l1274:
  3431  0004A6                     	movlw	low(0)
  3432  0004A6  0E00               	movwf	((c:___aldiv@quotient)),c
  3433  0004A8  6E1B               	movlw	high(0)
  3434  0004AA  0E00               	movwf	((c:___aldiv@quotient+1)),c
  3435  0004AC  6E1C               	movlw	low highword(0)
  3436  0004AE  0E00               	movwf	((c:___aldiv@quotient+2)),c
  3437  0004B0  6E1D               	movlw	high highword(0)
  3438  0004B2  0E00               	movwf	((c:___aldiv@quotient+3)),c
  3439  0004B4  6E1E               	line	23
  3440                           	
  3441                           l1276:
  3442  0004B6                     	movf	((c:___aldiv@divisor)),c,w
  3443  0004B6  5015               iorwf	((c:___aldiv@divisor+1)),c,w
  3444  0004B8  1016               iorwf	((c:___aldiv@divisor+2)),c,w
  3445  0004BA  1017               iorwf	((c:___aldiv@divisor+3)),c,w
  3446  0004BC  1018               	btfsc	status,2
  3447  0004BE  B4D8               	goto	u491
  3448  0004C0  EF64  F002         	goto	u490
  3449  0004C4  EF66  F002         
  3450                           u491:
  3451  0004C8                     	goto	l1296
  3452  0004C8  EFA8  F002         u490:
  3453  0004CC                     	line	24
  3454                           	
  3455                           l1278:
  3456  0004CC                     	movlw	low(01h)
  3457  0004CC  0E01               	movwf	((c:___aldiv@counter)),c
  3458  0004CE  6E19               	line	25
  3459                           	goto	l1282
  3460  0004D0  EF72  F002         	
  3461                           l310:
  3462  0004D4                     	line	26
  3463                           	
  3464                           l1280:
  3465  0004D4                     	bcf	status,0
  3466  0004D4  90D8               	rlcf	((c:___aldiv@divisor)),c
  3467  0004D6  3615               	rlcf	((c:___aldiv@divisor+1)),c
  3468  0004D8  3616               	rlcf	((c:___aldiv@divisor+2)),c
  3469  0004DA  3617               	rlcf	((c:___aldiv@divisor+3)),c
  3470  0004DC  3618               	line	27
  3471                           	incf	((c:___aldiv@counter)),c
  3472  0004DE  2A19               	goto	l1282
  3473  0004E0  EF72  F002         	line	28
  3474                           	
  3475                           l309:
  3476  0004E4                     	line	25
  3477                           	
  3478                           l1282:
  3479  0004E4                     	
  3480                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
  3481  0004E4  AE18               	goto	u501
  3482  0004E6  EF77  F002         	goto	u500
  3483  0004EA  EF79  F002         u501:
  3484  0004EE                     	goto	l1280
  3485  0004EE  EF6A  F002         u500:
  3486  0004F2                     	goto	l1284
  3487  0004F2  EF7D  F002         	
  3488                           l311:
  3489  0004F6                     	goto	l1284
  3490  0004F6  EF7D  F002         	line	29
  3491                           	
  3492                           l312:
  3493  0004FA                     	line	30
  3494                           	
  3495                           l1284:
  3496  0004FA                     	bcf	status,0
  3497  0004FA  90D8               	rlcf	((c:___aldiv@quotient)),c
  3498  0004FC  361B               	rlcf	((c:___aldiv@quotient+1)),c
  3499  0004FE  361C               	rlcf	((c:___aldiv@quotient+2)),c
  3500  000500  361D               	rlcf	((c:___aldiv@quotient+3)),c
  3501  000502  361E               	line	31
  3502                           	
  3503                           l1286:
  3504  000504                     		movf	((c:___aldiv@divisor)),c,w
  3505  000504  5015               	subwf	((c:___aldiv@dividend)),c,w
  3506  000506  5C11               	movf	((c:___aldiv@divisor+1)),c,w
  3507  000508  5016               	subwfb	((c:___aldiv@dividend+1)),c,w
  3508  00050A  5812               	movf	((c:___aldiv@divisor+2)),c,w
  3509  00050C  5017               	subwfb	((c:___aldiv@dividend+2)),c,w
  3510  00050E  5813               	movf	((c:___aldiv@divisor+3)),c,w
  3511  000510  5018               	subwfb	((c:___aldiv@dividend+3)),c,w
  3512  000512  5814               	btfss	status,0
  3513  000514  A0D8               	goto	u511
  3514  000516  EF8F  F002         	goto	u510
  3515  00051A  EF91  F002         
  3516                           u511:
  3517  00051E                     	goto	l1292
  3518  00051E  EF9C  F002         u510:
  3519  000522                     	line	32
  3520                           	
  3521                           l1288:
  3522  000522                     	movf	((c:___aldiv@divisor)),c,w
  3523  000522  5015               	subwf	((c:___aldiv@dividend)),c
  3524  000524  5E11               	movf	((c:___aldiv@divisor+1)),c,w
  3525  000526  5016               	subwfb	((c:___aldiv@dividend+1)),c
  3526  000528  5A12               	movf	((c:___aldiv@divisor+2)),c,w
  3527  00052A  5017               	subwfb	((c:___aldiv@dividend+2)),c
  3528  00052C  5A13               	movf	((c:___aldiv@divisor+3)),c,w
  3529  00052E  5018               	subwfb	((c:___aldiv@dividend+3)),c
  3530  000530  5A14               	line	33
  3531                           	
  3532                           l1290:
  3533  000532                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
  3534  000532  801B               	goto	l1292
  3535  000534  EF9C  F002         	line	34
  3536                           	
  3537                           l313:
  3538  000538                     	line	35
  3539                           	
  3540                           l1292:
  3541  000538                     	bcf	status,0
  3542  000538  90D8               	rrcf	((c:___aldiv@divisor+3)),c
  3543  00053A  3218               	rrcf	((c:___aldiv@divisor+2)),c
  3544  00053C  3217               	rrcf	((c:___aldiv@divisor+1)),c
  3545  00053E  3216               	rrcf	((c:___aldiv@divisor)),c
  3546  000540  3215               	line	36
  3547                           	
  3548                           l1294:
  3549  000542                     	decfsz	((c:___aldiv@counter)),c
  3550  000542  2E19               	
  3551                           	goto	l1284
  3552  000544  EF7D  F002         	goto	l1296
  3553  000548  EFA8  F002         	
  3554                           l314:
  3555  00054C                     	goto	l1296
  3556  00054C  EFA8  F002         	line	37
  3557                           	
  3558                           l308:
  3559  000550                     	line	38
  3560                           	
  3561                           l1296:
  3562  000550                     	movf	((c:___aldiv@sign)),c,w
  3563  000550  501A               	btfsc	status,2
  3564  000552  B4D8               	goto	u521
  3565  000554  EFAE  F002         	goto	u520
  3566  000558  EFB0  F002         u521:
  3567  00055C                     	goto	l1300
  3568  00055C  EFBA  F002         u520:
  3569  000560                     	line	39
  3570                           	
  3571                           l1298:
  3572  000560                     	comf	((c:___aldiv@quotient+3)),c
  3573  000560  1E1E               	comf	((c:___aldiv@quotient+2)),c
  3574  000562  1E1D               	comf	((c:___aldiv@quotient+1)),c
  3575  000564  1E1C               	negf	((c:___aldiv@quotient)),c
  3576  000566  6C1B               	movlw	0
  3577  000568  0E00               	addwfc	((c:___aldiv@quotient+1)),c
  3578  00056A  221C               	addwfc	((c:___aldiv@quotient+2)),c
  3579  00056C  221D               	addwfc	((c:___aldiv@quotient+3)),c
  3580  00056E  221E               	goto	l1300
  3581  000570  EFBA  F002         	
  3582                           l315:
  3583  000574                     	line	40
  3584                           	
  3585                           l1300:
  3586  000574                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
  3587  000574  C01B  F011         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
  3588  000578  C01C  F012         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
  3589  00057C  C01D  F013         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
  3590  000580  C01E  F014         	goto	l316
  3591  000584  EFC4  F002         	
  3592                           l1302:
  3593  000588                     	line	41
  3594                           	
  3595                           l316:
  3596  000588                     	return	;funcret
  3597  000588  0012               	opt stack 0
  3598                           GLOBAL	__end_of___aldiv
  3599                           	__end_of___aldiv:
  3600  00058A                     	signat	___aldiv,8316
  3601                           	global	_ISR_high
  3602                           
  3603 ;; *************** function _ISR_high *****************
  3604 ;; Defined at:
  3605 ;;		line 64 in file "main.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3619 ;;      Params:         0       0       0       0
  3620 ;;      Locals:         0       0       0       0
  3621 ;;      Temps:          4       0       0       0
  3622 ;;      Totals:         4       0       0       0
  3623 ;;Total ram usage:        4 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		Interrupt level 2
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           psect	intcode,class=CODE,space=0,reloc=2
  3632                           global __pintcode
  3633                           __pintcode:
  3634  000008                     psect	intcode
  3635                           	file	"main.c"
  3636                           	line	64
  3637                           	global	__size_of_ISR_high
  3638                           	__size_of_ISR_high	equ	__end_of_ISR_high-_ISR_high
  3639  0000                     	
  3640                           _ISR_high:
  3641  000008                     ;incstack = 0
  3642                           	opt	stack 28
  3643                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  3644  000008  825A               	movff	fsr2l+0,??_ISR_high+2
  3645  00000A  CFD9 F003          	movff	fsr2h+0,??_ISR_high+3
  3646  00000E  CFDA F004          	line	67
  3647                           	
  3648                           i2l1144:
  3649  000012                     ;main.c: 67:     if(SSPIE == 1 && SSPIF == 1)
  3650                           	btfss	c:(31979/8),(31979)&7	;volatile
  3651  000012  A69D               	goto	i2u24_41
  3652  000014  EF0E  F000         	goto	i2u24_40
  3653  000018  EF10  F000         i2u24_41:
  3654  00001C                     	goto	i2l167
  3655  00001C  EF55  F000         i2u24_40:
  3656  000020                     	
  3657                           i2l1146:
  3658  000020                     	btfss	c:(31987/8),(31987)&7	;volatile
  3659  000020  A69E               	goto	i2u25_41
  3660  000022  EF15  F000         	goto	i2u25_40
  3661  000026  EF17  F000         i2u25_41:
  3662  00002A                     	goto	i2l167
  3663  00002A  EF55  F000         i2u25_40:
  3664  00002E                     	line	70
  3665                           	
  3666                           i2l1148:
  3667  00002E                     ;main.c: 68:     {;main.c: 70:         if(SSPOV == 1 || WCOL == 1)
  3668                           	btfsc	c:(32310/8),(32310)&7	;volatile
  3669  00002E  BCC6               	goto	i2u26_41
  3670  000030  EF1C  F000         	goto	i2u26_40
  3671  000034  EF1E  F000         i2u26_41:
  3672  000038                     	goto	i2l170
  3673  000038  EF25  F000         i2u26_40:
  3674  00003C                     	
  3675                           i2l1150:
  3676  00003C                     	btfss	c:(32311/8),(32311)&7	;volatile
  3677  00003C  AEC6               	goto	i2u27_41
  3678  00003E  EF23  F000         	goto	i2u27_40
  3679  000042  EF25  F000         i2u27_41:
  3680  000046                     	goto	i2l1152
  3681  000046  EF2C  F000         i2u27_40:
  3682  00004A                     	
  3683                           i2l170:
  3684  00004A                     	line	72
  3685                           ;main.c: 71:         {;main.c: 72:             i2cData = SSPBUF;
  3686                           	movff	(c:4041),(c:_i2cData)	;volatile
  3687  00004A  CFC9 F04E          	line	73
  3688                           ;main.c: 73:             SSPOV = 0;
  3689                           	bcf	c:(32310/8),(32310)&7	;volatile
  3690  00004E  9CC6               	line	74
  3691                           ;main.c: 74:             WCOL = 0;
  3692                           	bcf	c:(32311/8),(32311)&7	;volatile
  3693  000050  9EC6               	line	75
  3694                           ;main.c: 75:             CKP = 1;
  3695                           	bsf	c:(32308/8),(32308)&7	;volatile
  3696  000052  88C6               	goto	i2l1152
  3697  000054  EF2C  F000         	line	76
  3698                           ;main.c: 76:         }
  3699                           	
  3700                           i2l168:
  3701  000058                     	line	78
  3702                           	
  3703                           i2l1152:
  3704  000058                     ;main.c: 78:         if(SSPBUF == SSPADD)
  3705                           	movf	((c:4040)),c,w	;volatile
  3706  000058  50C8               xorwf	((c:4041)),c,w	;volatile
  3707  00005A  18C9               	btfss	status,2
  3708  00005C  A4D8               	goto	i2u28_41
  3709  00005E  EF33  F000         	goto	i2u28_40
  3710  000062  EF35  F000         
  3711                           i2u28_41:
  3712  000066                     	goto	i2l171
  3713  000066  EF38  F000         i2u28_40:
  3714  00006A                     	line	81
  3715                           	
  3716                           i2l1154:
  3717  00006A                     ;main.c: 79:         {;main.c: 81:            GPREG.I2CADD = 1;
  3718                           	bsf	((c:_GPREG)),c,3
  3719  00006A  8650               	line	82
  3720                           ;main.c: 82:            BF = 0;
  3721                           	bcf	c:(32312/8),(32312)&7	;volatile
  3722  00006C  90C7               	line	83
  3723                           ;main.c: 83:            CKP = 1;
  3724                           	bsf	c:(32308/8),(32308)&7	;volatile
  3725  00006E  88C6               	line	84
  3726                           ;main.c: 84:         }
  3727                           	
  3728                           i2l171:
  3729  000070                     	line	86
  3730                           ;main.c: 86:         if(GPREG.I2CADD == 1 && 0 != SSPBUF && SSPBUF != SSPADD)
  3731                           	btfss	((c:_GPREG)),c,3
  3732  000070  A650               	goto	i2u29_41
  3733  000072  EF3D  F000         	goto	i2u29_40
  3734  000076  EF3F  F000         i2u29_41:
  3735  00007A                     	goto	i2l172
  3736  00007A  EF54  F000         i2u29_40:
  3737  00007E                     	
  3738                           i2l1156:
  3739  00007E                     	movf	((c:4041)),c,w	;volatile
  3740  00007E  50C9               	btfsc	status,2
  3741  000080  B4D8               	goto	i2u30_41
  3742  000082  EF45  F000         	goto	i2u30_40
  3743  000086  EF47  F000         i2u30_41:
  3744  00008A                     	goto	i2l172
  3745  00008A  EF54  F000         i2u30_40:
  3746  00008E                     	
  3747                           i2l1158:
  3748  00008E                     	movf	((c:4040)),c,w	;volatile
  3749  00008E  50C8               xorwf	((c:4041)),c,w	;volatile
  3750  000090  18C9               	btfsc	status,2
  3751  000092  B4D8               	goto	i2u31_41
  3752  000094  EF4E  F000         	goto	i2u31_40
  3753  000098  EF50  F000         
  3754                           i2u31_41:
  3755  00009C                     	goto	i2l172
  3756  00009C  EF54  F000         i2u31_40:
  3757  0000A0                     	line	88
  3758                           	
  3759                           i2l1160:
  3760  0000A0                     ;main.c: 87:         {;main.c: 88:             i2cData = SSPBUF;
  3761                           	movff	(c:4041),(c:_i2cData)	;volatile
  3762  0000A0  CFC9 F04E          	line	89
  3763                           ;main.c: 89:             CKP = 1;
  3764                           	bsf	c:(32308/8),(32308)&7	;volatile
  3765  0000A4  88C6               	line	90
  3766                           ;main.c: 90:             GPREG.I2CADD = 0;
  3767                           	bcf	((c:_GPREG)),c,3
  3768  0000A6  9650               	line	91
  3769                           ;main.c: 91:         }
  3770                           	
  3771                           i2l172:
  3772  0000A8                     	line	93
  3773                           ;main.c: 93:         SSPIF = 0;
  3774                           	bcf	c:(31987/8),(31987)&7	;volatile
  3775  0000A8  969E               	line	94
  3776                           ;main.c: 94:     }
  3777                           	
  3778                           i2l167:
  3779  0000AA                     	line	96
  3780                           ;main.c: 96:     if(1 == TMR5IE && 1 == TMR5IF)
  3781                           	btfss	c:(32024/8),(32024)&7	;volatile
  3782  0000AA  A0A3               	goto	i2u32_41
  3783  0000AC  EF5A  F000         	goto	i2u32_40
  3784  0000B0  EF5C  F000         i2u32_41:
  3785  0000B4                     	goto	i2l173
  3786  0000B4  EF65  F000         i2u32_40:
  3787  0000B8                     	
  3788                           i2l1162:
  3789  0000B8                     	btfss	c:(32032/8),(32032)&7	;volatile
  3790  0000B8  A0A4               	goto	i2u33_41
  3791  0000BA  EF61  F000         	goto	i2u33_40
  3792  0000BE  EF63  F000         i2u33_41:
  3793  0000C2                     	goto	i2l173
  3794  0000C2  EF65  F000         i2u33_40:
  3795  0000C6                     	line	98
  3796                           	
  3797                           i2l1164:
  3798  0000C6                     ;main.c: 97:     {;main.c: 98:         TMR5IF = 0;
  3799                           	bcf	c:(32032/8),(32032)&7	;volatile
  3800  0000C6  90A4               	line	99
  3801                           ;main.c: 99:         GPREG.STPCRL = 1;
  3802                           	bsf	((c:_GPREG)),c,5
  3803  0000C8  8A50               	line	100
  3804                           ;main.c: 100:     }
  3805                           	
  3806                           i2l173:
  3807  0000CA                     	line	102
  3808                           ;main.c: 102:     if(1 == TMR1IE && 1 == TMR1IF)
  3809                           	btfss	c:(31976/8),(31976)&7	;volatile
  3810  0000CA  A09D               	goto	i2u34_41
  3811  0000CC  EF6A  F000         	goto	i2u34_40
  3812  0000D0  EF6C  F000         i2u34_41:
  3813  0000D4                     	goto	i2l1172
  3814  0000D4  EF7C  F000         i2u34_40:
  3815  0000D8                     	
  3816                           i2l1166:
  3817  0000D8                     	btfss	c:(31984/8),(31984)&7	;volatile
  3818  0000D8  A09E               	goto	i2u35_41
  3819  0000DA  EF71  F000         	goto	i2u35_40
  3820  0000DE  EF73  F000         i2u35_41:
  3821  0000E2                     	goto	i2l1172
  3822  0000E2  EF7C  F000         i2u35_40:
  3823  0000E6                     	line	104
  3824                           	
  3825                           i2l1168:
  3826  0000E6                     ;main.c: 103:     {;main.c: 104:         GPREG.STCTRL = 1;
  3827                           	bsf	((c:_GPREG)),c,1
  3828  0000E6  8250               	line	105
  3829                           ;main.c: 105:         TMR1IF = 0;
  3830                           	bcf	c:(31984/8),(31984)&7	;volatile
  3831  0000E8  909E               	line	106
  3832                           ;main.c: 106:         TMR1ON = 0;
  3833                           	bcf	c:(32360/8),(32360)&7	;volatile
  3834  0000EA  90CD               	line	107
  3835                           	
  3836                           i2l1170:
  3837  0000EC                     ;main.c: 107:         TMR1 = 65485;
  3838                           	movlw	high(0FFCDh)
  3839  0000EC  0EFF               	movwf	((c:4046+1)),c	;volatile
  3840  0000EE  6ECF               	movlw	low(0FFCDh)
  3841  0000F0  0ECD               	movwf	((c:4046)),c	;volatile
  3842  0000F2  6ECE               	goto	i2l1172
  3843  0000F4  EF7C  F000         	line	109
  3844                           ;main.c: 109:     }
  3845                           	
  3846                           i2l174:
  3847  0000F8                     	line	111
  3848                           	
  3849                           i2l1172:
  3850  0000F8                     ;main.c: 111:     if((1 == TXIE) && (1 == TXIF))
  3851                           	btfss	c:(31980/8),(31980)&7	;volatile
  3852  0000F8  A89D               	goto	i2u36_41
  3853  0000FA  EF81  F000         	goto	i2u36_40
  3854  0000FE  EF83  F000         i2u36_41:
  3855  000102                     	goto	i2l179
  3856  000102  EFB9  F000         i2u36_40:
  3857  000106                     	
  3858                           i2l1174:
  3859  000106                     	btfss	c:(31988/8),(31988)&7	;volatile
  3860  000106  A89E               	goto	i2u37_41
  3861  000108  EF88  F000         	goto	i2u37_40
  3862  00010C  EF8A  F000         i2u37_41:
  3863  000110                     	goto	i2l179
  3864  000110  EFB9  F000         i2u37_40:
  3865  000114                     	line	113
  3866                           	
  3867                           i2l1176:
  3868  000114                     ;main.c: 112:     {;main.c: 113:         if(4 < cursor)
  3869                           		movf	((c:_cursor)),c,w
  3870  000114  504F               	xorlw	80h
  3871  000116  0A80               	addlw	-(80h^05h)
  3872  000118  0F7B               	btfss	status,0
  3873  00011A  A0D8               	goto	i2u38_41
  3874  00011C  EF92  F000         	goto	i2u38_40
  3875  000120  EF94  F000         
  3876                           i2u38_41:
  3877  000124                     	goto	i2l1180
  3878  000124  EF98  F000         i2u38_40:
  3879  000128                     	line	115
  3880                           	
  3881                           i2l1178:
  3882  000128                     ;main.c: 114:         {;main.c: 115:             TXREG = 0x2C;
  3883                           	movlw	low(02Ch)
  3884  000128  0E2C               	movwf	((c:4013)),c	;volatile
  3885  00012A  6EAD               	line	116
  3886                           ;main.c: 116:         } else {
  3887                           	goto	i2l1182
  3888  00012C  EFA7  F000         	
  3889                           i2l176:
  3890  000130                     	line	117
  3891                           	
  3892                           i2l1180:
  3893  000130                     ;main.c: 117:             TXREG = *(string_vel + cursor);
  3894                           	movff	(c:_cursor),??_ISR_high+0+0
  3895  000130  C04F  F001         	clrf	(??_ISR_high+0+0+1)&0ffh,c
  3896  000134  6A02               	btfsc	(??_ISR_high+0+0)&0ffh,c,7
  3897  000136  BE01               	decf	(??_ISR_high+0+0+1)&0ffh,c
  3898  000138  0602               	movf	(??_ISR_high+0+0),c,w
  3899  00013A  5001               	addwf	((c:_string_vel)),c,w
  3900  00013C  2446               	movwf	c:fsr2l
  3901  00013E  6ED9               	movf	(??_ISR_high+0+1),c,w
  3902  000140  5002               	addwfc	((c:_string_vel+1)),c,w
  3903  000142  2047               	movwf	1+c:fsr2l
  3904  000144  6EDA               	movf	indf2,w
  3905  000146  50DF               	movwf	((c:4013)),c	;volatile
  3906  000148  6EAD               	goto	i2l1182
  3907  00014A  EFA7  F000         	line	118
  3908                           ;main.c: 118:         }
  3909                           	
  3910                           i2l177:
  3911  00014E                     	line	119
  3912                           	
  3913                           i2l1182:
  3914  00014E                     ;main.c: 119:         cursor++;
  3915                           	incf	((c:_cursor)),c
  3916  00014E  2A4F               	line	120
  3917                           	
  3918                           i2l1184:
  3919  000150                     ;main.c: 120:         if(5 < cursor)
  3920                           		movf	((c:_cursor)),c,w
  3921  000150  504F               	xorlw	80h
  3922  000152  0A80               	addlw	-(80h^06h)
  3923  000154  0F7A               	btfss	status,0
  3924  000156  A0D8               	goto	i2u39_41
  3925  000158  EFB0  F000         	goto	i2u39_40
  3926  00015C  EFB2  F000         
  3927                           i2u39_41:
  3928  000160                     	goto	i2l179
  3929  000160  EFB9  F000         i2u39_40:
  3930  000164                     	line	122
  3931                           	
  3932                           i2l1186:
  3933  000164                     ;main.c: 121:         {;main.c: 122:             TXIE = 0;
  3934                           	bcf	c:(31980/8),(31980)&7	;volatile
  3935  000164  989D               	line	123
  3936                           	
  3937                           i2l1188:
  3938  000166                     ;main.c: 123:             cursor = 0;
  3939                           	movlw	low(0)
  3940  000166  0E00               	movwf	((c:_cursor)),c
  3941  000168  6E4F               	goto	i2l179
  3942  00016A  EFB9  F000         	line	124
  3943                           ;main.c: 124:         }
  3944                           	
  3945                           i2l178:
  3946  00016E                     	goto	i2l179
  3947  00016E  EFB9  F000         	line	125
  3948                           ;main.c: 125:     }
  3949                           	
  3950                           i2l175:
  3951  000172                     	line	127
  3952                           	
  3953                           i2l179:
  3954  000172                     	movff	??_ISR_high+3,fsr2h+0
  3955  000172  C004  FFDA         	movff	??_ISR_high+2,fsr2l+0
  3956  000176  C003  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  3957  00017A  925A               	retfie f
  3958  00017C  0011               	opt stack 0
  3959                           GLOBAL	__end_of_ISR_high
  3960                           	__end_of_ISR_high:
  3961  00017E                     	signat	_ISR_high,89
  3962                           	GLOBAL	__activetblptr
  3963                           __activetblptr	EQU	0
  3964  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  3965                           	PSECT	rparam,class=COMRAM,space=1,noexec
  3966                           	GLOBAL	__Lrparam
  3967                           	FNCONF	rparam,??,?
  3968                           	GLOBAL	___rparam_used
  3969                           	___rparam_used EQU 1
  3970  0000                     	GLOBAL	___param_bank
  3971                           	___param_bank EQU 0
  3972  0000                     GLOBAL	__Lparam, __Hparam
  3973                           GLOBAL	__Lrparam, __Hrparam
  3974                           __Lparam	EQU	__Lrparam
  3975  0000                     __Hparam	EQU	__Hrparam
  3976  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  3977                           	global	btemp
  3978                           btemp:
  3979  00005A                     	ds	1
  3980  00005A                     	global	int$flags
  3981                           	int$flags	set btemp
  3982  0000                     	global	wtemp8
  3983                           	wtemp8 set btemp+1
  3984  0000                     	global	ttemp5
  3985                           	ttemp5 set btemp+1
  3986  0000                     	global	ttemp6
  3987                           	ttemp6 set btemp+4
  3988  0000                     	global	ttemp7
  3989                           	ttemp7 set btemp+8
  3990  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      89
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    sp__int2char	PTR unsigned char  size(2) Largest target is 5
		 -> int2char@string(COMRAM[5]), 

    string_vel	PTR unsigned char  size(2) Largest target is 5
		 -> NULL(NULL[0]), int2char@string(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_write_PWM
    _int2char->___lwdiv
    _init_PWM->_write_PWM
    _write_PWM->_calculatePWM
    _calculatePWM->___aldiv
    ___aldiv->___lmul

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3500
                       _calculatePWM
                          _dataToVel
                           _init_I2C
                           _init_ISR
                           _init_PWM
                           _init_QEI
                          _init_TMR1
                          _init_UART
                         _init_VNHIO
                           _int2char
                          _write_PWM
 ---------------------------------------------------------------------------------
 (1) _int2char                                             5     3      2     815
                                             11 COMRAM     5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _init_VNHIO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_QEI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PWM                                             0     0      0     197
                          _write_PWM
 ---------------------------------------------------------------------------------
 (1) _write_PWM                                            3     1      2     197
                                             42 COMRAM     3     1      2
                       _calculatePWM (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dataToVel                                            5     3      2      91
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _calculatePWM                                        13     9      4    2200
                                             30 COMRAM    12     8      4
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1130
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             16 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_high                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculatePWM
     ___aldiv
       ___lmul (ARG)
     ___lldiv
     ___lmul
   _dataToVel
   _init_I2C
   _init_ISR
   _init_PWM
     _write_PWM
       _calculatePWM (ARG)
         ___aldiv
           ___lmul (ARG)
         ___lldiv
         ___lmul
   _init_QEI
   _init_TMR1
   _init_UART
   _init_VNHIO
   _int2char
     ___lwdiv
     ___lwmod
   _write_PWM
     _calculatePWM (ARG)
       ___aldiv
         ___lmul (ARG)
       ___lldiv
       ___lmul

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      59       3        0.0%
DATA                 0      0      59      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Nov 13 00:06:53 2018

                     _BF 007E38             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$RC 000000  
                    l200 0A1E                      l203 0A10                      l212 099A  
                    l310 04D4                      l206 09B6                      l311 04F6  
                    l215 09FE                      l223 07EE                      l312 04FA  
                    l232 0928                      l224 07A2                      l313 0538  
                    l233 094A                      l209 097C                      l225 0800  
                    l314 054C                      l306 0480                      l234 0956  
                    l218 09D2                      l226 080C                      l315 0574  
                    l307 04A6                      l316 0588                      l308 0550  
                    l309 04E4                      l229 0A2C                      l270 06F8  
                    l246 089A                      l190 064E                      l271 0708  
                    l247 08BC                      l264 06F8                      l248 08E6  
                    l184 05E0                      l265 0690                      l249 08F6  
                    l193 01D4                      l185 0646                      l266 0680  
                    l194 01E2                      l186 063A                      l267 06A2  
                    l195 03B2                      l187 063E                      l268 06A6  
                    l196 03E8                      l188 064A                      l269 06E4  
                    l197 0454                      l189 064E                      l730 072C  
                    l731 074A                      l732 074E                      l740 0828  
                    l733 0778                      l741 0846                      l734 0788  
                    l742 084A                      l735 0790                      l743 086C  
                    l728 0788                      l744 087C                      l729 0738  
                    l745 0884                      l738 087C                      l739 0834  
                    _CKP 007E34                      _GIE 007F97             __CFG_CPB$OFF 000000  
                    u500 04F2                      u420 08A8                      u501 04EE  
                    u421 08A4                      u510 0522                      u430 08E6  
                    _PR2 000FCB                      _PID 002E                      u511 051E  
                    u431 08E2                      u520 0560                      u440 0678  
                    u600 093E                      u521 055C                      u441 0674  
                    u601 093A                      _PR5 000F90                      u450 069E  
                    u610 0190                      u530 0724             __CFG_CPD$OFF 000000  
                    u451 069A                      u611 018C                      u531 0720  
                    u460 06CE                      u620 039E                      u540 0746  
                    u461 06CA                      u621 039A                      u541 0742  
                    u470 0468                      u630 03D4                      u550 076A  
                    u471 0464                      u631 03D0                      u551 0766  
                    u480 048E                      u560 0820                      u640 07FC  
                    u481 048A                      u561 081C                      u641 07F8  
                    u490 04CC                      u570 0842                      u650 05FC  
                    u491 04C8                      u571 083E                      u651 05F8  
                    u580 0860                      u660 0632                      u581 085C  
                    u661 062E                      u590 091C                      u591 0918  
                    _vel 0056                      prod 000FF3                      wreg 000FE8  
           __CFG_IESO$ON 000000              int2char@num 000E             __CFG_LVP$OFF 000000  
                   l1030 0A00                     l1040 0A12                     l1032 0A08  
                   l1050 097E                     l1034 0A0A                     l1300 0574  
                   l1060 0998                     l1052 0986                     l1036 0A0C  
                   l1302 0588                     l1230 089A                     l1062 0A20  
                   l1070 09B8                     l1222 0958                     l1054 0988  
                   l1038 0A0E                     l1310 072C                     l1240 0662  
                   l1232 08A8                     l1400 03E8                     l1064 0A24  
                   l1224 096C                     l1056 0992                     l1320 0772  
                   l1312 0738                     l1304 070A                     l1250 06B0  
                   l1242 0678                     l1234 08BC                     l1402 0440  
                   l1226 0978                     l1058 0996                     l1066 09EA  
                   l1322 0778                     l1314 074E                     l1306 0712  
                   l1330 0828                     l1410 07A2                     l1260 0456  
                   l1252 06CE                     l1244 0680                     l1236 08C6  
                   l1228 0886                     l1404 0454                     l1068 09EE  
                   l1324 077E                     l1316 0754                     l1308 0724  
                   l1340 0872                     l1332 0834                     l1420 080C  
                   l1412 07CC                     l1270 048E                     l1262 045A  
                   l1254 06DE                     l1246 0690                     l1238 0652  
                   l1350 08FA                     l1342 099C                     l1318 076A  
                   l1334 084A                     l1326 080E                     l1414 07E8  
                   l1406 0792                     l1430 05CA                     l1422 058A  
                   l1280 04D4                     l1272 049E                     l1264 0468  
                   l1256 06E4                     l1248 06A6                     l1360 094A  
                   l1352 0906                     l1344 09A0                     l1336 0860  
                   l1328 0820                     l1416 07EE                     l1408 079A  
                   l1440 05E0                     l1432 05CE                     l1424 05BE  
                   l1290 0532                     l1282 04E4                     l1274 04A6  
                   l1266 0478                     l1258 06EE                     l1370 019E  
                   l1362 0956                     l1354 091C                     l1346 09A8  
                   l1338 086C                     l1418 0800                     l1450 0624  
                   l1442 05EE                     l1434 05D2                     l1426 05C2  
                   l1292 0538                     l1284 04FA                     l1276 04B6  
                   l1268 0480                     l1380 01E2                     l1372 01A4  
                   l1364 0182                     l1356 0928                     l1348 09AA  
                   l1452 0632                     l1444 05FC                     l1436 05D6  
                   l1428 05C6                     l1294 0542                     l1286 0504  
                   l1278 04CC                     l1390 0388                     l1382 01FE  
                   l1374 01A8                     l1366 0190                     l1358 093E  
                   l1446 060E                     l1438 05DA                     l1288 0522  
                   l1296 0550                     l1392 0390                     l1384 0258  
                   l1368 0198                     l1376 01D4                     l1448 0622  
                   l1298 0560                     l1394 039E                     l1386 02A6  
                   l1378 01DC                     l1396 03B2                     l1388 0354  
                   l1398 03D4                     _IPEN 007E87                     _TMR1 000FCE  
                   _WCOL 007E37                     _TXIE 007CEC                     _TXIF 007CF4  
                   _TXIP 007CFC            __CFG_FCMEN$ON 000000                     _main 058A  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
                   btemp 005A                     _volt 003E            __CFG_BOREN$ON 000000  
                   prodh 000FF4                     prodl 000FF3                     start 017E  
          __CFG_MCLRE$ON 000000             ___param_bank 000000          __end_of___aldiv 058A  
                  ?_main 0001          __end_of___lldiv 070A                    _T1CON 000FCD  
                  _T2CON 000FCA                    _LATA0 007C48                    _LATA1 007C49  
                  _LATC2 007C5A                    _T5CON 000FB7          __end_of___lwdiv 0792  
                  _GPREG 0050          __end_of___lwmod 0886                    i2l170 004A  
                  i2l171 0070                    i2l172 00A8                    i2l173 00CA  
                  i2l174 00F8                    i2l175 0172                    i2l167 00AA  
                  i2l176 0130                    i2l168 0058                    i2l177 014E  
                  i2l178 016E                    i2l179 0172                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _VELRH 000F69                    _VELRL 000F68  
                  _SSPIE 007CEB                    _SSPIF 007CF3                    _SSPIP 007CFB  
                  _SSPOV 007E36                    _TXREG 000FAD                    _TXSTA 000FAC  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
    ___lmul@multiplicand 0009            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
       __end_of_ISR_high 017E            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _error 004C  
                  ttemp5 005B                    ttemp6 005E                    ttemp7 0062  
                  status 000FD8                    wtemp8 005B            int2char@digit 0010  
        __initialization 09D4           __CFG_HPOL$HIGH 000000             __end_of_main 0652  
         __CFG_LPOL$HIGH 000000                   ??_main 002E            __activetblptr 000000  
                 _CCPR1L 000FBE                   _ANSEL0 000FB8                   _ANSEL1 000FB9  
  __size_of_calculatePWM 02D4                   i2l1150 003C                   i2l1160 00A0  
                 i2l1152 0058                   i2l1144 0012                   i2l1170 00EC  
                 i2l1162 00B8                   i2l1154 006A                   i2l1146 0020  
                 i2l1180 0130                   i2l1172 00F8                   i2l1164 00C6  
                 i2l1156 007E                   i2l1148 002E                   i2l1182 014E  
                 i2l1174 0106                   i2l1166 00D8                   i2l1158 008E  
                 i2l1184 0150                   i2l1176 0114                   i2l1168 00E6  
                 i2l1186 0164                   i2l1178 0128                   i2l1188 0166  
         __CFG_WDTEN$OFF 000000                   _QEICON 000FB6                   _OSCCON 000FD3  
                 _TMR1IE 007CE8                   _TMR1IF 007CF0           __CFG_WINEN$OFF 000000  
                 _TMR1IP 007CF8                   _TMR5IE 007D18                   _TMR5IF 007D20  
                 _TMR1ON 007E68                   _TMR5IP 007D28                   _TMR5ON 007DB8  
                 _SSPADD 000FC8                   _TRISA0 007C90                   _TRISA1 007C91  
                 _TRISA4 007C94                   _TRISA5 007C95                   _TRISC2 007CA2  
                 _TRISC4 007CA4                   _TRISC5 007CA5                   _TRISC6 007CA6  
                 _SSPBUF 000FC9                   _SSPCON 000FC6           __CFG_SSPMX$RD1 000000  
       __end_of_int2char 080E                   ___lmul 0886                ??___aldiv 0019  
         __CFG_STVREN$ON 000000                ??___lldiv 000D         __end_of_init_I2C 0A2E  
              ??___lwdiv 0009                ??___lwmod 0009         __end_of_init_QEI 099C  
       __end_of_init_ISR 09D4         __end_of_init_PWM 09B8                   _cursor 004F  
                 clear_0 09DA             _calculatePWM 0182            dataToVel@data 0007  
             __accesstop 0060  __end_of__initialization 09E0          __CFG_FLTAMX$RC1 000000  
          ___rparam_used 000001          __CFG_T1OSCMX$ON 000000           __pcstackCOMRAM 0001  
              ?_ISR_high 0001           int2char@number 000C       __size_of_dataToVel 0060  
         int2char@string 0051       __size_of_init_UART 0016       __size_of_init_TMR1 000E  
             __pnvCOMRAM 0058                  ?___lmul 0005               ??_ISR_high 0001  
        __CFG_WDPS$32768 000000                  _CAP1REN 007B1E                  _CCP1CON 000FBD  
                _BAUDCON 000FAA           ___lmul@product 000D          __CFG_PWM4MX$RB5 000000  
                i2u30_40 008E                  i2u30_41 008A                  i2u31_40 00A0  
                i2u31_41 009C                  i2u32_40 00B8                  i2u24_40 0020  
                i2u32_41 00B4                  i2u24_41 001C                  i2u33_40 00C6  
                i2u25_40 002E                  i2u33_41 00C2                  i2u25_41 002A  
                i2u34_40 00D8                  i2u26_40 003C                  i2u34_41 00D4  
                i2u26_41 0038                  i2u35_40 00E6                  i2u27_40 004A  
                i2u35_41 00E2                  i2u27_41 0046                  i2u36_40 0106  
                i2u28_40 006A                  i2u36_41 0102                  i2u28_41 0066  
                i2u37_40 0114                  i2u29_40 007E                  i2u37_41 0110  
                i2u29_41 007A                  i2u38_40 0128                  i2u38_41 0124  
                i2u39_40 0164                  i2u39_41 0160                ?_int2char 000C  
      __end_of_dataToVel 0958          __CFG_PWMPIN$OFF 000000                ?_init_I2C 0001  
              ?_init_QEI 0001                ?_init_ISR 0001                ?_init_PWM 0001  
                _i2cData 004E       __size_of_write_PWM 0026          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000               _init_VNHIO 0A00  
                ___aldiv 0456          __size_of___lmul 0072                  ___lldiv 0652  
                ___lwdiv 070A                  ___lwmod 080E                  __pcinit 09D4  
                __ramtop 0300                  __ptext0 058A                  __ptext1 0792  
                __ptext2 080E                  __ptext3 070A                  __ptext4 0A00  
                __ptext5 09EA                  __ptext6 0A12                  __ptext7 097E  
                __ptext8 099C                  __ptext9 0958        __end_of_init_UART 0A00  
      __end_of_init_TMR1 0A20                  _ref_vel 0058         ___aldiv@dividend 0011  
                _vel_ant 0048               ??_int2char 000E     end_of_initialization 09E0  
             ??_init_I2C 0005               ??_init_QEI 0005               ??_init_ISR 0005  
             ??_init_PWM 002E          ___lldiv@divisor 0009          ___lldiv@counter 0011  
       ___aldiv@quotient 001B                  postinc0 000FEE        __end_of_write_PWM 097E  
             _suma_error 0042              _CCP1CONbits 000FBD              ?_init_VNHIO 0001  
             _string_vel 0046         __CFG_EXCLKMX$RC3 000000           __end_of___lmul 08F8  
      __size_of_ISR_high 0176      start_initialization 09D4              _aceleracion 003A  
               ??___lmul 000D       write_PWM@dutyCycle 002B             dataToVel@vel 0008  
            __pbssCOMRAM 002E      __size_of_init_VNHIO 0012        __size_of_int2char 007C  
              _dataToVel 08F8        __size_of_init_I2C 000E        __size_of_init_QEI 001E  
      __size_of_init_ISR 001C        __size_of_init_PWM 001C         ___lwdiv@dividend 0005  
              __pintcode 0008                 ?___aldiv 0011                 ?___lldiv 0005  
               ?___lwdiv 0005                 ?___lwmod 0005                 _CAP1BUFH 000F69  
               _CAP1BUFL 000F68                _init_UART 09EA                _init_TMR1 0A12  
       ___lwdiv@quotient 0009                _error_ant 004A          ___aldiv@divisor 0015  
        ___aldiv@counter 0019               ?_dataToVel 0005                 _ISR_high 0008  
          ?_calculatePWM 001F               ?_init_UART 0001               ?_init_TMR1 0001  
              _write_PWM 0958        ___lmul@multiplier 0005                 __Hrparam 0000  
           ??_init_VNHIO 0005                 __Lrparam 0000         __size_of___aldiv 0134  
       __size_of___lldiv 00B8         __size_of___lwdiv 0088         __size_of___lwmod 0078  
         ??_calculatePWM 0023          ___lwdiv@divisor 0007          ___lwdiv@counter 000B  
               __ptext10 09B8                 __ptext11 0A20                 __ptext12 08F8  
               __ptext13 0182                 __ptext14 0886                 __ptext15 0652  
               __ptext16 0456               ?_write_PWM 002B       __end_of_init_VNHIO 0A12  
               _int2char 0792                 _init_I2C 0A20                 _init_QEI 097E  
               _init_ISR 09B8                 _init_PWM 099C            __size_of_main 00C8  
            ??_dataToVel 0007                 int$flags 005A              ??_init_UART 0005  
            ??_init_TMR1 0005     calculatePWM@setpoint 0001                 intlevel2 0000  
       ___lwmod@dividend 0005         ___lldiv@dividend 0005         ___lldiv@quotient 000D  
        ___lwmod@divisor 0007          ___lwmod@counter 0009             ___aldiv@sign 001A  
            ??_write_PWM 002D     __end_of_calculatePWM 0456  
