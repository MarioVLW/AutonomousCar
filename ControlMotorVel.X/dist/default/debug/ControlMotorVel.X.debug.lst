

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Nov 12 21:49:09 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4431 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   108                           DFLTCON equ 0F60h ;# 
   109  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   110                           CAP3CON equ 0F61h ;# 
   111  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   112                           CAP2CON equ 0F62h ;# 
   113  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   114                           CAP1CON equ 0F63h ;# 
   115  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   116                           CAP3BUFL equ 0F64h ;# 
   117  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   118                           MAXCNTL equ 0F64h ;# 
   119  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   120                           CAP3BUFH equ 0F65h ;# 
   121  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   122                           MAXCNTH equ 0F65h ;# 
   123  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   124                           CAP2BUFL equ 0F66h ;# 
   125  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   126                           POSCNTL equ 0F66h ;# 
   127  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   128                           CAP2BUFH equ 0F67h ;# 
   129  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   130                           POSCNTH equ 0F67h ;# 
   131  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   132                           CAP1BUFL equ 0F68h ;# 
   133  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   134                           VELRL equ 0F68h ;# 
   135  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   136                           CAP1BUFH equ 0F69h ;# 
   137  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   138                           VELRH equ 0F69h ;# 
   139  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   140                           OVDCONS equ 0F6Ah ;# 
   141  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   142                           OVDCOND equ 0F6Bh ;# 
   143  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   144                           FLTCONFIG equ 0F6Ch ;# 
   145  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   146                           DTCON equ 0F6Dh ;# 
   147  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   148                           PWMCON1 equ 0F6Eh ;# 
   149  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   150                           PWMCON0 equ 0F6Fh ;# 
   151  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   152                           SEVTCMPH equ 0F70h ;# 
   153  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   154                           SEVTCMPL equ 0F71h ;# 
   155  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   156                           PDC3H equ 0F72h ;# 
   157  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   158                           PDC3L equ 0F73h ;# 
   159  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   160                           PDC2H equ 0F74h ;# 
   161  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   162                           PDC2L equ 0F75h ;# 
   163  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   164                           PDC1H equ 0F76h ;# 
   165  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   166                           PDC1L equ 0F77h ;# 
   167  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   168                           PDC0H equ 0F78h ;# 
   169  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   170                           PDC0L equ 0F79h ;# 
   171  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   172                           PTPERH equ 0F7Ah ;# 
   173  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   174                           PTPERL equ 0F7Bh ;# 
   175  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   176                           PTMRH equ 0F7Ch ;# 
   177  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   178                           PTMRL equ 0F7Dh ;# 
   179  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   180                           PTCON1 equ 0F7Eh ;# 
   181  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   182                           PTCON0 equ 0F7Fh ;# 
   183  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   184                           PORTA equ 0F80h ;# 
   185  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   186                           PORTB equ 0F81h ;# 
   187  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   188                           PORTC equ 0F82h ;# 
   189  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   190                           PORTD equ 0F83h ;# 
   191  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   192                           PORTE equ 0F84h ;# 
   193  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   194                           TMR5 equ 0F87h ;# 
   195  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   196                           TMR5L equ 0F87h ;# 
   197  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   198                           TMR5H equ 0F88h ;# 
   199  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   200                           LATA equ 0F89h ;# 
   201  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   202                           LATB equ 0F8Ah ;# 
   203  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   204                           LATC equ 0F8Bh ;# 
   205  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   206                           LATD equ 0F8Ch ;# 
   207  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   208                           LATE equ 0F8Dh ;# 
   209  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   210                           PR5 equ 0F90h ;# 
   211  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   212                           PR5L equ 0F90h ;# 
   213  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   214                           PR5H equ 0F91h ;# 
   215  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   216                           TRISA equ 0F92h ;# 
   217  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   218                           DDRA equ 0F92h ;# 
   219  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   220                           TRISB equ 0F93h ;# 
   221  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   222                           DDRB equ 0F93h ;# 
   223  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   224                           TRISC equ 0F94h ;# 
   225  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   226                           DDRC equ 0F94h ;# 
   227  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   228                           TRISD equ 0F95h ;# 
   229  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   230                           DDRD equ 0F95h ;# 
   231  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   232                           TRISE equ 0F96h ;# 
   233  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   234                           DDRE equ 0F96h ;# 
   235  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   236                           ADCHS equ 0F99h ;# 
   237  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   238                           ADCON3 equ 0F9Ah ;# 
   239  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   240                           OSCTUNE equ 0F9Bh ;# 
   241  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   242                           PIE1 equ 0F9Dh ;# 
   243  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   244                           PIR1 equ 0F9Eh ;# 
   245  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   246                           IPR1 equ 0F9Fh ;# 
   247  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   248                           PIE2 equ 0FA0h ;# 
   249  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   250                           PIR2 equ 0FA1h ;# 
   251  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   252                           IPR2 equ 0FA2h ;# 
   253  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   254                           PIE3 equ 0FA3h ;# 
   255  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   256                           PIR3 equ 0FA4h ;# 
   257  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   258                           IPR3 equ 0FA5h ;# 
   259  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   260                           EECON1 equ 0FA6h ;# 
   261  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   262                           EECON2 equ 0FA7h ;# 
   263  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   264                           EEDATA equ 0FA8h ;# 
   265  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   266                           EEADR equ 0FA9h ;# 
   267  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   268                           BAUDCON equ 0FAAh ;# 
   269  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   270                           BAUDCTL equ 0FAAh ;# 
   271  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   272                           RCSTA equ 0FABh ;# 
   273  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   274                           RCSTA1 equ 0FABh ;# 
   275  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   276                           TXSTA equ 0FACh ;# 
   277  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   278                           TXSTA1 equ 0FACh ;# 
   279  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   280                           TXREG equ 0FADh ;# 
   281  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   282                           TXREG1 equ 0FADh ;# 
   283  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   284                           RCREG equ 0FAEh ;# 
   285  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   286                           RCREG1 equ 0FAEh ;# 
   287  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   288                           SPBRG equ 0FAFh ;# 
   289  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   290                           SPBRG1 equ 0FAFh ;# 
   291  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   292                           SPBRGH equ 0FB0h ;# 
   293  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   294                           QEICON equ 0FB6h ;# 
   295  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   296                           T5CON equ 0FB7h ;# 
   297  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   298                           ANSEL0 equ 0FB8h ;# 
   299  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   300                           ANSEL1 equ 0FB9h ;# 
   301  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   302                           CCP2CON equ 0FBAh ;# 
   303  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   304                           CCPR2 equ 0FBBh ;# 
   305  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   306                           CCPR2L equ 0FBBh ;# 
   307  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   308                           CCPR2H equ 0FBCh ;# 
   309  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   310                           CCP1CON equ 0FBDh ;# 
   311  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   312                           CCPR1 equ 0FBEh ;# 
   313  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   314                           CCPR1L equ 0FBEh ;# 
   315  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   316                           CCPR1H equ 0FBFh ;# 
   317  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   318                           ADCON2 equ 0FC0h ;# 
   319  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   320                           ADCON1 equ 0FC1h ;# 
   321  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   322                           ADCON0 equ 0FC2h ;# 
   323  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   324                           ADRES equ 0FC3h ;# 
   325  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   326                           ADRESL equ 0FC3h ;# 
   327  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   328                           ADRESH equ 0FC4h ;# 
   329  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   330                           SSPCON equ 0FC6h ;# 
   331  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   332                           SSPCON1 equ 0FC6h ;# 
   333  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   334                           SSPSTAT equ 0FC7h ;# 
   335  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   336                           SSPADD equ 0FC8h ;# 
   337  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   338                           SSPBUF equ 0FC9h ;# 
   339  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   340                           T2CON equ 0FCAh ;# 
   341  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   342                           PR2 equ 0FCBh ;# 
   343  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   344                           MEMCON equ 0FCBh ;# 
   345  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   346                           TMR2 equ 0FCCh ;# 
   347  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   348                           T1CON equ 0FCDh ;# 
   349  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   350                           TMR1 equ 0FCEh ;# 
   351  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   352                           TMR1L equ 0FCEh ;# 
   353  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   354                           TMR1H equ 0FCFh ;# 
   355  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   356                           RCON equ 0FD0h ;# 
   357  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   358                           WDTCON equ 0FD1h ;# 
   359  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   360                           LVDCON equ 0FD2h ;# 
   361  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   362                           OSCCON equ 0FD3h ;# 
   363  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   364                           T0CON equ 0FD5h ;# 
   365  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   366                           TMR0 equ 0FD6h ;# 
   367  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   368                           TMR0L equ 0FD6h ;# 
   369  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   370                           TMR0H equ 0FD7h ;# 
   371  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   372                           STATUS equ 0FD8h ;# 
   373  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   374                           FSR2 equ 0FD9h ;# 
   375  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   376                           FSR2L equ 0FD9h ;# 
   377  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   378                           FSR2H equ 0FDAh ;# 
   379  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   380                           PLUSW2 equ 0FDBh ;# 
   381  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   382                           PREINC2 equ 0FDCh ;# 
   383  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   384                           POSTDEC2 equ 0FDDh ;# 
   385  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   386                           POSTINC2 equ 0FDEh ;# 
   387  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   388                           INDF2 equ 0FDFh ;# 
   389  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   390                           BSR equ 0FE0h ;# 
   391  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   392                           FSR1 equ 0FE1h ;# 
   393  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   394                           FSR1L equ 0FE1h ;# 
   395  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   396                           FSR1H equ 0FE2h ;# 
   397  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   398                           PLUSW1 equ 0FE3h ;# 
   399  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   400                           PREINC1 equ 0FE4h ;# 
   401  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   402                           POSTDEC1 equ 0FE5h ;# 
   403  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   404                           POSTINC1 equ 0FE6h ;# 
   405  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   406                           INDF1 equ 0FE7h ;# 
   407  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   408                           WREG equ 0FE8h ;# 
   409  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   410                           FSR0 equ 0FE9h ;# 
   411  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   412                           FSR0L equ 0FE9h ;# 
   413  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   414                           FSR0H equ 0FEAh ;# 
   415  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   416                           PLUSW0 equ 0FEBh ;# 
   417  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   418                           PREINC0 equ 0FECh ;# 
   419  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   420                           POSTDEC0 equ 0FEDh ;# 
   421  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   422                           POSTINC0 equ 0FEEh ;# 
   423  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   424                           INDF0 equ 0FEFh ;# 
   425  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   426                           INTCON3 equ 0FF0h ;# 
   427  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   428                           INTCON2 equ 0FF1h ;# 
   429  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   430                           INTCON equ 0FF2h ;# 
   431  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   432                           PROD equ 0FF3h ;# 
   433  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   434                           PRODL equ 0FF3h ;# 
   435  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   436                           PRODH equ 0FF4h ;# 
   437  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   438                           TABLAT equ 0FF5h ;# 
   439  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   440                           TBLPTR equ 0FF6h ;# 
   441  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   442                           TBLPTRL equ 0FF6h ;# 
   443  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   444                           TBLPTRH equ 0FF7h ;# 
   445  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   446                           TBLPTRU equ 0FF8h ;# 
   447  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   448                           PCLAT equ 0FF9h ;# 
   449  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   450                           PC equ 0FF9h ;# 
   451  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   452                           PCL equ 0FF9h ;# 
   453  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   454                           PCLATH equ 0FFAh ;# 
   455  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   456                           PCLATU equ 0FFBh ;# 
   457  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   458                           STKPTR equ 0FFCh ;# 
   459  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   460                           TOS equ 0FFDh ;# 
   461  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   462                           TOSL equ 0FFDh ;# 
   463  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   464                           TOSH equ 0FFEh ;# 
   465  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   466                           TOSU equ 0FFFh ;# 
   467  0000                     	FNCALL	_main,_calculatePWM
   468                           	FNCALL	_main,_dataToVel
   469                           	FNCALL	_main,_init_I2C
   470                           	FNCALL	_main,_init_ISR
   471                           	FNCALL	_main,_init_PWM
   472                           	FNCALL	_main,_init_QEI
   473                           	FNCALL	_main,_init_TMR1
   474                           	FNCALL	_main,_init_UART
   475                           	FNCALL	_main,_init_VNHIO
   476                           	FNCALL	_main,_int2char
   477                           	FNCALL	_main,_write_PWM
   478                           	FNCALL	_int2char,___lwdiv
   479                           	FNCALL	_int2char,___lwmod
   480                           	FNCALL	_init_PWM,_write_PWM
   481                           	FNCALL	_calculatePWM,___aldiv
   482                           	FNCALL	_calculatePWM,___lldiv
   483                           	FNCALL	_calculatePWM,___lmul
   484                           	FNROOT	_main
   485                           	FNCALL	intlevel2,_ISR_high
   486                           	global	intlevel2
   487                           	FNROOT	intlevel2
   488                           	global	_PID
   489                           	global	_aceleracion
   490                           	global	_volt
   491                           	global	_suma_error
   492                           	global	_string_vel
   493                           	global	_error_ant
   494                           	global	_error
   495                           	global	_i2cData
   496                           	global	_cursor
   497                           	global	_GPREG
   498                           	global	int2char@string
   499                           	global	_vel
   500                           	global	_ref_vel
   501                           psect	nvCOMRAM,class=COMRAM,space=1,noexec
   502                           global __pnvCOMRAM
   503                           __pnvCOMRAM:
   504  000058                     	global	_ref_vel
   505                           _ref_vel:
   506  000058                            ds      2
   507  000058                     	global	_PR5
   508                           _PR5	set	0xF90
   509  0000                     	global	_CAP1BUFH
   510                           _CAP1BUFH	set	0xF69
   511  0000                     	global	_CAP1BUFL
   512                           _CAP1BUFL	set	0xF68
   513  0000                     	global	_VELRL
   514                           _VELRL	set	0xF68
   515  0000                     	global	_VELRH
   516                           _VELRH	set	0xF69
   517  0000                     	global	_TRISC4
   518                           _TRISC4	set	0x7CA4
   519  0000                     	global	_TRISC5
   520                           _TRISC5	set	0x7CA5
   521  0000                     	global	_TRISC6
   522                           _TRISC6	set	0x7CA6
   523  0000                     	global	_CAP1REN
   524                           _CAP1REN	set	0x7B1E
   525  0000                     	global	_TRISA5
   526                           _TRISA5	set	0x7C95
   527  0000                     	global	_TRISA4
   528                           _TRISA4	set	0x7C94
   529  0000                     	global	_LATC2
   530                           _LATC2	set	0x7C5A
   531  0000                     	global	_TRISC2
   532                           _TRISC2	set	0x7CA2
   533  0000                     	global	_TRISA1
   534                           _TRISA1	set	0x7C91
   535  0000                     	global	_TRISA0
   536                           _TRISA0	set	0x7C90
   537  0000                     	global	_LATA1
   538                           _LATA1	set	0x7C49
   539  0000                     	global	_LATA0
   540                           _LATA0	set	0x7C48
   541  0000                     	global	_TMR1
   542                           _TMR1	set	0xFCE
   543  0000                     	global	_SSPCON
   544                           _SSPCON	set	0xFC6
   545  0000                     	global	_SPBRG
   546                           _SPBRG	set	0xFAF
   547  0000                     	global	_BAUDCON
   548                           _BAUDCON	set	0xFAA
   549  0000                     	global	_RCSTA
   550                           _RCSTA	set	0xFAB
   551  0000                     	global	_TXSTA
   552                           _TXSTA	set	0xFAC
   553  0000                     	global	_QEICON
   554                           _QEICON	set	0xFB6
   555  0000                     	global	_T5CON
   556                           _T5CON	set	0xFB7
   557  0000                     	global	_CCPR1L
   558                           _CCPR1L	set	0xFBE
   559  0000                     	global	_CCP1CONbits
   560                           _CCP1CONbits	set	0xFBD
   561  0000                     	global	_PR2
   562                           _PR2	set	0xFCB
   563  0000                     	global	_T2CON
   564                           _T2CON	set	0xFCA
   565  0000                     	global	_CCP1CON
   566                           _CCP1CON	set	0xFBD
   567  0000                     	global	_ANSEL1
   568                           _ANSEL1	set	0xFB9
   569  0000                     	global	_ANSEL0
   570                           _ANSEL0	set	0xFB8
   571  0000                     	global	_T1CON
   572                           _T1CON	set	0xFCD
   573  0000                     	global	_OSCCON
   574                           _OSCCON	set	0xFD3
   575  0000                     	global	_TXREG
   576                           _TXREG	set	0xFAD
   577  0000                     	global	_SSPADD
   578                           _SSPADD	set	0xFC8
   579  0000                     	global	_SSPBUF
   580                           _SSPBUF	set	0xFC9
   581  0000                     	global	_IPEN
   582                           _IPEN	set	0x7E87
   583  0000                     	global	_TXIP
   584                           _TXIP	set	0x7CFC
   585  0000                     	global	_SSPIP
   586                           _SSPIP	set	0x7CFB
   587  0000                     	global	_TMR5IP
   588                           _TMR5IP	set	0x7D28
   589  0000                     	global	_TMR1IP
   590                           _TMR1IP	set	0x7CF8
   591  0000                     	global	_TMR5ON
   592                           _TMR5ON	set	0x7DB8
   593  0000                     	global	_TXIF
   594                           _TXIF	set	0x7CF4
   595  0000                     	global	_TXIE
   596                           _TXIE	set	0x7CEC
   597  0000                     	global	_TMR1ON
   598                           _TMR1ON	set	0x7E68
   599  0000                     	global	_TMR1IF
   600                           _TMR1IF	set	0x7CF0
   601  0000                     	global	_TMR1IE
   602                           _TMR1IE	set	0x7CE8
   603  0000                     	global	_TMR5IF
   604                           _TMR5IF	set	0x7D20
   605  0000                     	global	_TMR5IE
   606                           _TMR5IE	set	0x7D18
   607  0000                     	global	_BF
   608                           _BF	set	0x7E38
   609  0000                     	global	_CKP
   610                           _CKP	set	0x7E34
   611  0000                     	global	_WCOL
   612                           _WCOL	set	0x7E37
   613  0000                     	global	_SSPOV
   614                           _SSPOV	set	0x7E36
   615  0000                     	global	_SSPIF
   616                           _SSPIF	set	0x7CF3
   617  0000                     	global	_SSPIE
   618                           _SSPIE	set	0x7CEB
   619  0000                     	global	_GIE
   620                           _GIE	set	0x7F97
   621  0000                     ; #config settings
   622                           global __CFG_OSC$RC
   623                           __CFG_OSC$RC equ 0x0
   624  0000                     global __CFG_FCMEN$ON
   625                           __CFG_FCMEN$ON equ 0x0
   626  0000                     global __CFG_IESO$ON
   627                           __CFG_IESO$ON equ 0x0
   628  0000                     global __CFG_PWRTEN$OFF
   629                           __CFG_PWRTEN$OFF equ 0x0
   630  0000                     global __CFG_BOREN$ON
   631                           __CFG_BOREN$ON equ 0x0
   632  0000                     global __CFG_WDTEN$OFF
   633                           __CFG_WDTEN$OFF equ 0x0
   634  0000                     global __CFG_WDPS$32768
   635                           __CFG_WDPS$32768 equ 0x0
   636  0000                     global __CFG_WINEN$OFF
   637                           __CFG_WINEN$OFF equ 0x0
   638  0000                     global __CFG_PWMPIN$OFF
   639                           __CFG_PWMPIN$OFF equ 0x0
   640  0000                     global __CFG_LPOL$HIGH
   641                           __CFG_LPOL$HIGH equ 0x0
   642  0000                     global __CFG_HPOL$HIGH
   643                           __CFG_HPOL$HIGH equ 0x0
   644  0000                     global __CFG_T1OSCMX$ON
   645                           __CFG_T1OSCMX$ON equ 0x0
   646  0000                     global __CFG_FLTAMX$RC1
   647                           __CFG_FLTAMX$RC1 equ 0x0
   648  0000                     global __CFG_SSPMX$RD1
   649                           __CFG_SSPMX$RD1 equ 0x0
   650  0000                     global __CFG_PWM4MX$RB5
   651                           __CFG_PWM4MX$RB5 equ 0x0
   652  0000                     global __CFG_EXCLKMX$RC3
   653                           __CFG_EXCLKMX$RC3 equ 0x0
   654  0000                     global __CFG_MCLRE$ON
   655                           __CFG_MCLRE$ON equ 0x0
   656  0000                     global __CFG_STVREN$ON
   657                           __CFG_STVREN$ON equ 0x0
   658  0000                     global __CFG_LVP$OFF
   659                           __CFG_LVP$OFF equ 0x0
   660  0000                     global __CFG_CP0$OFF
   661                           __CFG_CP0$OFF equ 0x0
   662  0000                     global __CFG_CP1$OFF
   663                           __CFG_CP1$OFF equ 0x0
   664  0000                     global __CFG_CP2$OFF
   665                           __CFG_CP2$OFF equ 0x0
   666  0000                     global __CFG_CP3$OFF
   667                           __CFG_CP3$OFF equ 0x0
   668  0000                     global __CFG_CPB$OFF
   669                           __CFG_CPB$OFF equ 0x0
   670  0000                     global __CFG_CPD$OFF
   671                           __CFG_CPD$OFF equ 0x0
   672  0000                     global __CFG_WRT0$OFF
   673                           __CFG_WRT0$OFF equ 0x0
   674  0000                     global __CFG_WRT1$OFF
   675                           __CFG_WRT1$OFF equ 0x0
   676  0000                     global __CFG_WRT2$OFF
   677                           __CFG_WRT2$OFF equ 0x0
   678  0000                     global __CFG_WRT3$OFF
   679                           __CFG_WRT3$OFF equ 0x0
   680  0000                     global __CFG_WRTC$OFF
   681                           __CFG_WRTC$OFF equ 0x0
   682  0000                     global __CFG_WRTB$OFF
   683                           __CFG_WRTB$OFF equ 0x0
   684  0000                     global __CFG_WRTD$OFF
   685                           __CFG_WRTD$OFF equ 0x0
   686  0000                     global __CFG_EBTR0$OFF
   687                           __CFG_EBTR0$OFF equ 0x0
   688  0000                     global __CFG_EBTR1$OFF
   689                           __CFG_EBTR1$OFF equ 0x0
   690  0000                     global __CFG_EBTR2$OFF
   691                           __CFG_EBTR2$OFF equ 0x0
   692  0000                     global __CFG_EBTR3$OFF
   693                           __CFG_EBTR3$OFF equ 0x0
   694  0000                     global __CFG_EBTRB$OFF
   695                           __CFG_EBTRB$OFF equ 0x0
   696  0000                     	file	"C:\Users\MarioVL\AppData\Local\Temp\s668."
   697                           	line	#
   698                           psect	cinit,class=CODE,delta=1,reloc=2
   699                           global __pcinit
   700                           __pcinit:
   701  0009D4                     global start_initialization
   702                           start_initialization:
   703  0009D4                     
   704                           global __initialization
   705                           __initialization:
   706  0009D4                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   707                           global __pbssCOMRAM
   708                           __pbssCOMRAM:
   709  00002E                     	global	_PID
   710                           _PID:
   711  00002E                            ds      12
   712  00002E                     	global	_aceleracion
   713                           _aceleracion:
   714  00003A                            ds      4
   715  00003A                     	global	_volt
   716                           _volt:
   717  00003E                            ds      4
   718  00003E                     	global	_suma_error
   719                           _suma_error:
   720  000042                            ds      4
   721  000042                     	global	_string_vel
   722                           _string_vel:
   723  000046                            ds      2
   724  000046                     	global	_vel_ant
   725                           	global	_vel_ant
   726                           _vel_ant:
   727  000048                            ds      2
   728  000048                     	global	_error_ant
   729                           _error_ant:
   730  00004A                            ds      2
   731  00004A                     	global	_error
   732                           _error:
   733  00004C                            ds      2
   734  00004C                     	global	_i2cData
   735                           _i2cData:
   736  00004E                            ds      1
   737  00004E                     	global	_cursor
   738                           _cursor:
   739  00004F                            ds      1
   740  00004F                     	global	_GPREG
   741                           _GPREG:
   742  000050                            ds      1
   743  000050                     int2char@string:
   744  000051                            ds      5
   745  000051                     	global	_vel
   746                           _vel:
   747  000056                            ds      2
   748  000056                     	file	"C:\Users\MarioVL\AppData\Local\Temp\s668."
   749                           	line	#
   750                           psect	cinit
   751                           ; Clear objects allocated to COMRAM (42 bytes)
   752                           	global __pbssCOMRAM
   753                           lfsr	0,__pbssCOMRAM
   754  0009D4  EE00  F02E         movlw	42
   755  0009D8  0E2A               clear_0:
   756  0009DA                     clrf	postinc0,c
   757  0009DA  6AEE               decf	wreg
   758  0009DC  06E8               bnz	clear_0
   759  0009DE  E1FD               psect cinit,class=CODE,delta=1
   760                           global end_of_initialization,__end_of__initialization
   761                           
   762                           ;End of C runtime variable initialization code
   763                           
   764                           end_of_initialization:
   765  0009E0                     __end_of__initialization:
   766  0009E0                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   767  0009E0  905A               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   768  0009E2  925A               movlb 0
   769  0009E4  0100               goto _main	;jump to C main() function
   770  0009E6  EFC5  F002         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   771                           global __pcstackCOMRAM
   772                           __pcstackCOMRAM:
   773  000001                     ?_init_VNHIO:	; 1 bytes @ 0x0
   774  000001                     ?_init_TMR1:	; 1 bytes @ 0x0
   775  000001                     ?_init_PWM:	; 1 bytes @ 0x0
   776  000001                     ?_init_QEI:	; 1 bytes @ 0x0
   777  000001                     ?_init_I2C:	; 1 bytes @ 0x0
   778  000001                     ?_init_UART:	; 1 bytes @ 0x0
   779  000001                     ?_init_ISR:	; 1 bytes @ 0x0
   780  000001                     ?_ISR_high:	; 1 bytes @ 0x0
   781  000001                     ??_ISR_high:	; 1 bytes @ 0x0
   782  000001                     ?_main:	; 1 bytes @ 0x0
   783  000001                     calculatePWM@setpoint:	; 1 bytes @ 0x0
   784  000001                     	ds   4
   785  000001                     ??_init_VNHIO:	; 1 bytes @ 0x4
   786  000005                     ??_init_TMR1:	; 1 bytes @ 0x4
   787  000005                     ??_init_QEI:	; 1 bytes @ 0x4
   788  000005                     ??_init_I2C:	; 1 bytes @ 0x4
   789  000005                     ??_init_UART:	; 1 bytes @ 0x4
   790  000005                     ??_init_ISR:	; 1 bytes @ 0x4
   791  000005                     	global	?_dataToVel
   792                           ?_dataToVel:	; 2 bytes @ 0x4
   793  000005                     	global	?___lwdiv
   794                           ?___lwdiv:	; 2 bytes @ 0x4
   795  000005                     	global	?___lwmod
   796                           ?___lwmod:	; 2 bytes @ 0x4
   797  000005                     	global	?___lmul
   798                           ?___lmul:	; 4 bytes @ 0x4
   799  000005                     	global	?___lldiv
   800                           ?___lldiv:	; 4 bytes @ 0x4
   801  000005                     	global	___lwdiv@dividend
   802                           ___lwdiv@dividend:	; 2 bytes @ 0x4
   803  000005                     	global	___lwmod@dividend
   804                           ___lwmod@dividend:	; 2 bytes @ 0x4
   805  000005                     	global	___lmul@multiplier
   806                           ___lmul@multiplier:	; 4 bytes @ 0x4
   807  000005                     	global	___lldiv@dividend
   808                           ___lldiv@dividend:	; 4 bytes @ 0x4
   809  000005                     	ds   2
   810  000005                     ??_dataToVel:	; 1 bytes @ 0x6
   811  000007                     	global	dataToVel@data
   812                           dataToVel@data:	; 1 bytes @ 0x6
   813  000007                     	global	___lwdiv@divisor
   814                           ___lwdiv@divisor:	; 2 bytes @ 0x6
   815  000007                     	global	___lwmod@divisor
   816                           ___lwmod@divisor:	; 2 bytes @ 0x6
   817  000007                     	ds   1
   818  000007                     	global	dataToVel@vel
   819                           dataToVel@vel:	; 2 bytes @ 0x7
   820  000008                     	ds   1
   821  000008                     ??___lwdiv:	; 1 bytes @ 0x8
   822  000009                     ??___lwmod:	; 1 bytes @ 0x8
   823  000009                     	global	___lwmod@counter
   824                           ___lwmod@counter:	; 1 bytes @ 0x8
   825  000009                     	global	___lwdiv@quotient
   826                           ___lwdiv@quotient:	; 2 bytes @ 0x8
   827  000009                     	global	___lmul@multiplicand
   828                           ___lmul@multiplicand:	; 4 bytes @ 0x8
   829  000009                     	global	___lldiv@divisor
   830                           ___lldiv@divisor:	; 4 bytes @ 0x8
   831  000009                     	ds   2
   832  000009                     	global	___lwdiv@counter
   833                           ___lwdiv@counter:	; 1 bytes @ 0xA
   834  00000B                     	ds   1
   835  00000B                     	global	?_int2char
   836                           ?_int2char:	; 2 bytes @ 0xB
   837  00000C                     	global	int2char@number
   838                           int2char@number:	; 2 bytes @ 0xB
   839  00000C                     	ds   1
   840  00000C                     ??___lmul:	; 1 bytes @ 0xC
   841  00000D                     ??___lldiv:	; 1 bytes @ 0xC
   842  00000D                     	global	___lmul@product
   843                           ___lmul@product:	; 4 bytes @ 0xC
   844  00000D                     	global	___lldiv@quotient
   845                           ___lldiv@quotient:	; 4 bytes @ 0xC
   846  00000D                     	ds   1
   847  00000D                     ??_int2char:	; 1 bytes @ 0xD
   848  00000E                     	global	int2char@num
   849                           int2char@num:	; 2 bytes @ 0xD
   850  00000E                     	ds   2
   851  00000E                     	global	int2char@digit
   852                           int2char@digit:	; 1 bytes @ 0xF
   853  000010                     	ds   1
   854  000010                     	global	?___aldiv
   855                           ?___aldiv:	; 4 bytes @ 0x10
   856  000011                     	global	___lldiv@counter
   857                           ___lldiv@counter:	; 1 bytes @ 0x10
   858  000011                     	global	___aldiv@dividend
   859                           ___aldiv@dividend:	; 4 bytes @ 0x10
   860  000011                     	ds   4
   861  000011                     	global	___aldiv@divisor
   862                           ___aldiv@divisor:	; 4 bytes @ 0x14
   863  000015                     	ds   4
   864  000015                     ??___aldiv:	; 1 bytes @ 0x18
   865  000019                     	global	___aldiv@counter
   866                           ___aldiv@counter:	; 1 bytes @ 0x18
   867  000019                     	ds   1
   868  000019                     	global	___aldiv@sign
   869                           ___aldiv@sign:	; 1 bytes @ 0x19
   870  00001A                     	ds   1
   871  00001A                     	global	___aldiv@quotient
   872                           ___aldiv@quotient:	; 4 bytes @ 0x1A
   873  00001B                     	ds   4
   874  00001B                     	global	?_calculatePWM
   875                           ?_calculatePWM:	; 4 bytes @ 0x1E
   876  00001F                     	ds   4
   877  00001F                     ??_calculatePWM:	; 1 bytes @ 0x22
   878  000023                     	ds   8
   879  000023                     ?_write_PWM:	; 1 bytes @ 0x2A
   880  00002B                     	global	write_PWM@dutyCycle
   881                           write_PWM@dutyCycle:	; 2 bytes @ 0x2A
   882  00002B                     	ds   2
   883  00002B                     ??_write_PWM:	; 1 bytes @ 0x2C
   884  00002D                     	ds   1
   885  00002D                     ??_init_PWM:	; 1 bytes @ 0x2D
   886  00002E                     ??_main:	; 1 bytes @ 0x2D
   887  00002E                     ;!
   888                           ;!Data Sizes:
   889                           ;!    Strings     0
   890                           ;!    Constant    0
   891                           ;!    Data        0
   892                           ;!    BSS         42
   893                           ;!    Persistent  2
   894                           ;!    Stack       0
   895                           ;!
   896                           ;!Auto Spaces:
   897                           ;!    Space          Size  Autos    Used
   898                           ;!    COMRAM           94     45      89
   899                           ;!    BANK0           160      0       0
   900                           ;!    BANK1           256      0       0
   901                           ;!    BANK2           244      0       0
   902                           
   903                           ;!
   904                           ;!Pointer List with Targets:
   905                           ;!
   906                           ;!    sp__int2char	PTR unsigned char  size(2) Largest target is 5
   907                           ;!		 -> int2char@string(COMRAM[5]), 
   908                           ;!
   909                           ;!    string_vel	PTR unsigned char  size(2) Largest target is 5
   910                           ;!		 -> NULL(NULL[0]), int2char@string(COMRAM[5]), 
   911                           ;!
   912                           
   913                           
   914                           ;!
   915                           ;!Critical Paths under _main in COMRAM
   916                           ;!
   917                           ;!    _main->_write_PWM
   918                           ;!    _int2char->___lwdiv
   919                           ;!    _init_PWM->_write_PWM
   920                           ;!    _write_PWM->_calculatePWM
   921                           ;!    _calculatePWM->___aldiv
   922                           ;!    ___aldiv->___lmul
   923                           ;!
   924                           ;!Critical Paths under _ISR_high in COMRAM
   925                           ;!
   926                           ;!    None.
   927                           ;!
   928                           ;!Critical Paths under _main in BANK0
   929                           ;!
   930                           ;!    None.
   931                           ;!
   932                           ;!Critical Paths under _ISR_high in BANK0
   933                           ;!
   934                           ;!    None.
   935                           ;!
   936                           ;!Critical Paths under _main in BANK1
   937                           ;!
   938                           ;!    None.
   939                           ;!
   940                           ;!Critical Paths under _ISR_high in BANK1
   941                           ;!
   942                           ;!    None.
   943                           ;!
   944                           ;!Critical Paths under _main in BANK2
   945                           ;!
   946                           ;!    None.
   947                           ;!
   948                           ;!Critical Paths under _ISR_high in BANK2
   949                           ;!
   950                           ;!    None.
   951                           
   952 ;;
   953 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   954 ;;
   955                           
   956                           ;!
   957                           ;!Call Graph Tables:
   958                           ;!
   959                           ;! ---------------------------------------------------------------------------------
   960                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   961                           ;! ---------------------------------------------------------------------------------
   962                           ;! (0) _main                                                 0     0      0    3500
   963                           ;!                       _calculatePWM
   964                           ;!                          _dataToVel
   965                           ;!                           _init_I2C
   966                           ;!                           _init_ISR
   967                           ;!                           _init_PWM
   968                           ;!                           _init_QEI
   969                           ;!                          _init_TMR1
   970                           ;!                          _init_UART
   971                           ;!                         _init_VNHIO
   972                           ;!                           _int2char
   973                           ;!                          _write_PWM
   974                           ;! ---------------------------------------------------------------------------------
   975                           ;! (1) _int2char                                             5     3      2     815
   976                           ;!                                             11 COMRAM     5     3      2
   977                           ;!                            ___lwdiv
   978                           ;!                            ___lwmod
   979                           ;! ---------------------------------------------------------------------------------
   980                           ;! (2) ___lwmod                                              5     1      4     311
   981                           ;!                                              4 COMRAM     5     1      4
   982                           ;! ---------------------------------------------------------------------------------
   983                           ;! (2) ___lwdiv                                              7     3      4     314
   984                           ;!                                              4 COMRAM     7     3      4
   985                           ;! ---------------------------------------------------------------------------------
   986                           ;! (1) _init_VNHIO                                           0     0      0       0
   987                           ;! ---------------------------------------------------------------------------------
   988                           ;! (1) _init_UART                                            0     0      0       0
   989                           ;! ---------------------------------------------------------------------------------
   990                           ;! (1) _init_TMR1                                            0     0      0       0
   991                           ;! ---------------------------------------------------------------------------------
   992                           ;! (1) _init_QEI                                             0     0      0       0
   993                           ;! ---------------------------------------------------------------------------------
   994                           ;! (1) _init_PWM                                             0     0      0     197
   995                           ;!                          _write_PWM
   996                           ;! ---------------------------------------------------------------------------------
   997                           ;! (1) _write_PWM                                            3     1      2     197
   998                           ;!                                             42 COMRAM     3     1      2
   999                           ;!                       _calculatePWM (ARG)
  1000                           ;! ---------------------------------------------------------------------------------
  1001                           ;! (1) _init_ISR                                             0     0      0       0
  1002                           ;! ---------------------------------------------------------------------------------
  1003                           ;! (1) _init_I2C                                             0     0      0       0
  1004                           ;! ---------------------------------------------------------------------------------
  1005                           ;! (1) _dataToVel                                            5     3      2      91
  1006                           ;!                                              4 COMRAM     5     3      2
  1007                           ;! ---------------------------------------------------------------------------------
  1008                           ;! (1) _calculatePWM                                        13     9      4    2200
  1009                           ;!                                             30 COMRAM    12     8      4
  1010                           ;!                            ___aldiv
  1011                           ;!                            ___lldiv
  1012                           ;!                             ___lmul
  1013                           ;! ---------------------------------------------------------------------------------
  1014                           ;! (2) ___lmul                                              12     4      8    1130
  1015                           ;!                                              4 COMRAM    12     4      8
  1016                           ;! ---------------------------------------------------------------------------------
  1017                           ;! (2) ___lldiv                                             13     5      8     314
  1018                           ;!                                              4 COMRAM    13     5      8
  1019                           ;! ---------------------------------------------------------------------------------
  1020                           ;! (2) ___aldiv                                             14     6      8     756
  1021                           ;!                                             16 COMRAM    14     6      8
  1022                           ;!                             ___lmul (ARG)
  1023                           ;! ---------------------------------------------------------------------------------
  1024                           ;! Estimated maximum stack depth 2
  1025                           ;! ---------------------------------------------------------------------------------
  1026                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1027                           ;! ---------------------------------------------------------------------------------
  1028                           ;! (3) _ISR_high                                             4     4      0       0
  1029                           ;!                                              0 COMRAM     4     4      0
  1030                           ;! ---------------------------------------------------------------------------------
  1031                           ;! Estimated maximum stack depth 3
  1032                           ;! ---------------------------------------------------------------------------------
  1033                           ;!
  1034                           ;! Call Graph Graphs:
  1035                           ;!
  1036                           ;! _main (ROOT)
  1037                           ;!   _calculatePWM
  1038                           ;!     ___aldiv
  1039                           ;!       ___lmul (ARG)
  1040                           ;!     ___lldiv
  1041                           ;!     ___lmul
  1042                           ;!   _dataToVel
  1043                           ;!   _init_I2C
  1044                           ;!   _init_ISR
  1045                           ;!   _init_PWM
  1046                           ;!     _write_PWM
  1047                           ;!       _calculatePWM (ARG)
  1048                           ;!         ___aldiv
  1049                           ;!           ___lmul (ARG)
  1050                           ;!         ___lldiv
  1051                           ;!         ___lmul
  1052                           ;!   _init_QEI
  1053                           ;!   _init_TMR1
  1054                           ;!   _init_UART
  1055                           ;!   _init_VNHIO
  1056                           ;!   _int2char
  1057                           ;!     ___lwdiv
  1058                           ;!     ___lwmod
  1059                           ;!   _write_PWM
  1060                           ;!     _calculatePWM (ARG)
  1061                           ;!       ___aldiv
  1062                           ;!         ___lmul (ARG)
  1063                           ;!       ___lldiv
  1064                           ;!       ___lmul
  1065                           ;!
  1066                           ;! _ISR_high (ROOT)
  1067                           ;!
  1068                           
  1069                           ;! Address spaces:
  1070                           
  1071                           ;!Name               Size   Autos  Total    Cost      Usage
  1072                           ;!BIGRAM             2F3      0       0      10        0.0%
  1073                           ;!EEDATA             100      0       0       0        0.0%
  1074                           ;!BITBANK1           100      0       0       6        0.0%
  1075                           ;!BANK1              100      0       0       7        0.0%
  1076                           ;!BITBANK2            F4      0       0       8        0.0%
  1077                           ;!BANK2               F4      0       0       9        0.0%
  1078                           ;!BITBANK0            A0      0       0       3        0.0%
  1079                           ;!BANK0               A0      0       0       4        0.0%
  1080                           ;!BITCOMRAM           5E      0       0       0        0.0%
  1081                           ;!COMRAM              5E     2D      59       1       94.7%
  1082                           ;!BITSFR_5             0      0       0     200        0.0%
  1083                           ;!SFR_5                0      0       0     200        0.0%
  1084                           ;!BITSFR_4             0      0       0     200        0.0%
  1085                           ;!SFR_4                0      0       0     200        0.0%
  1086                           ;!BITSFR_3             0      0       0     200        0.0%
  1087                           ;!SFR_3                0      0       0     200        0.0%
  1088                           ;!BITSFR_2             0      0       0     200        0.0%
  1089                           ;!SFR_2                0      0       0     200        0.0%
  1090                           ;!BITSFR_1             0      0       0     200        0.0%
  1091                           ;!SFR_1                0      0       0     200        0.0%
  1092                           ;!BITSFR               0      0       0     200        0.0%
  1093                           ;!SFR                  0      0       0     200        0.0%
  1094                           ;!STACK                0      0       0       2        0.0%
  1095                           ;!NULL                 0      0       0       0        0.0%
  1096                           ;!ABS                  0      0      59       5        0.0%
  1097                           ;!DATA                 0      0      59      11        0.0%
  1098                           ;!CODE                 0      0       0       0        0.0%
  1099                           
  1100                           	global	_main
  1101                           
  1102 ;; *************** function _main *****************
  1103 ;; Defined at:
  1104 ;;		line 129 in file "main.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1118 ;;      Params:         0       0       0       0
  1119 ;;      Locals:         0       0       0       0
  1120 ;;      Temps:          0       0       0       0
  1121 ;;      Totals:         0       0       0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels required when called:    3
  1124 ;; This function calls:
  1125 ;;		_calculatePWM
  1126 ;;		_dataToVel
  1127 ;;		_init_I2C
  1128 ;;		_init_ISR
  1129 ;;		_init_PWM
  1130 ;;		_init_QEI
  1131 ;;		_init_TMR1
  1132 ;;		_init_UART
  1133 ;;		_init_VNHIO
  1134 ;;		_int2char
  1135 ;;		_write_PWM
  1136 ;; This function is called by:
  1137 ;;		Startup code after reset
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1141                           	file	"main.c"
  1142                           	line	129
  1143                           global __ptext0
  1144                           __ptext0:
  1145  00058A                     psect	text0
  1146                           	file	"main.c"
  1147                           	line	129
  1148                           	global	__size_of_main
  1149                           	__size_of_main	equ	__end_of_main-_main
  1150  0000                     	
  1151                           _main:
  1152  00058A                     ;incstack = 0
  1153                           	opt	stack 28
  1154                           	line	131
  1155                           	
  1156                           l1422:
  1157  00058A                     ;main.c: 131:     OSCCON = 0x70;
  1158                           	movlw	low(070h)
  1159  00058A  0E70               	movwf	((c:4051)),c	;volatile
  1160  00058C  6ED3               	line	133
  1161                           ;main.c: 133:     PID.Kp = 48087;
  1162                           	movlw	low(0BBD7h)
  1163  00058E  0ED7               	movwf	((c:_PID)),c
  1164  000590  6E2E               	movlw	high(0BBD7h)
  1165  000592  0EBB               	movwf	((c:_PID+1)),c
  1166  000594  6E2F               	movlw	low highword(0BBD7h)
  1167  000596  0E00               	movwf	((c:_PID+2)),c
  1168  000598  6E30               	movlw	high highword(0BBD7h)
  1169  00059A  0E00               	movwf	((c:_PID+3)),c
  1170  00059C  6E31               	line	134
  1171                           ;main.c: 134:     PID.Ki = 64120;
  1172                           	movlw	low(0FA78h)
  1173  00059E  0E78               	movwf	(0+((c:_PID)+04h)),c
  1174  0005A0  6E32               	movlw	high(0FA78h)
  1175  0005A2  0EFA               	movwf	(1+((c:_PID)+04h)),c
  1176  0005A4  6E33               	movlw	low highword(0FA78h)
  1177  0005A6  0E00               	movwf	(2+((c:_PID)+04h)),c
  1178  0005A8  6E34               	movlw	high highword(0FA78h)
  1179  0005AA  0E00               	movwf	(3+((c:_PID)+04h)),c
  1180  0005AC  6E35               	line	135
  1181                           ;main.c: 135:     PID.Kd = 90;
  1182                           	movlw	low(05Ah)
  1183  0005AE  0E5A               	movwf	(0+((c:_PID)+08h)),c
  1184  0005B0  6E36               	movlw	high(05Ah)
  1185  0005B2  0E00               	movwf	(1+((c:_PID)+08h)),c
  1186  0005B4  6E37               	movlw	low highword(05Ah)
  1187  0005B6  0E00               	movwf	(2+((c:_PID)+08h)),c
  1188  0005B8  6E38               	movlw	high highword(05Ah)
  1189  0005BA  0E00               	movwf	(3+((c:_PID)+08h)),c
  1190  0005BC  6E39               	line	137
  1191                           	
  1192                           l1424:
  1193  0005BE                     ;main.c: 137:     init_VNHIO();
  1194                           	call	_init_VNHIO	;wreg free
  1195  0005BE  EC00  F005         	line	138
  1196                           	
  1197                           l1426:
  1198  0005C2                     ;main.c: 138:     init_TMR1();
  1199                           	call	_init_TMR1	;wreg free
  1200  0005C2  EC09  F005         	line	139
  1201                           	
  1202                           l1428:
  1203  0005C6                     ;main.c: 139:     init_PWM();
  1204                           	call	_init_PWM	;wreg free
  1205  0005C6  ECCE  F004         	line	140
  1206                           	
  1207                           l1430:
  1208  0005CA                     ;main.c: 140:     init_QEI();
  1209                           	call	_init_QEI	;wreg free
  1210  0005CA  ECBF  F004         	line	141
  1211                           	
  1212                           l1432:
  1213  0005CE                     ;main.c: 141:     init_I2C();
  1214                           	call	_init_I2C	;wreg free
  1215  0005CE  EC10  F005         	line	142
  1216                           	
  1217                           l1434:
  1218  0005D2                     ;main.c: 142:     init_UART();
  1219                           	call	_init_UART	;wreg free
  1220  0005D2  ECF5  F004         	line	143
  1221                           	
  1222                           l1436:
  1223  0005D6                     ;main.c: 143:     init_ISR();
  1224                           	call	_init_ISR	;wreg free
  1225  0005D6  ECDC  F004         	line	144
  1226                           	
  1227                           l1438:
  1228  0005DA                     ;main.c: 144:     GPREG.DIRCTRL = 1;
  1229                           	bsf	((c:_GPREG)),c,0
  1230  0005DA  8050               	goto	l1440
  1231  0005DC  EFF0  F002         	line	146
  1232                           ;main.c: 146:     while(1)
  1233                           	
  1234                           l184:
  1235  0005E0                     	line	149
  1236                           	
  1237                           l1440:
  1238  0005E0                     ;main.c: 147:     {;main.c: 149:         ref_vel = dataToVel(i2cData);
  1239                           	movf	((c:_i2cData)),c,w
  1240  0005E0  504E               	
  1241                           	call	_dataToVel
  1242  0005E2  EC7C  F004         	movff	0+?_dataToVel,(c:_ref_vel)
  1243  0005E6  C005  F058         	movff	1+?_dataToVel,(c:_ref_vel+1)
  1244  0005EA  C006  F059         	line	151
  1245                           	
  1246                           l1442:
  1247  0005EE                     ;main.c: 151:         if(1 == GPREG.STCTRL)
  1248                           	btfss	((c:_GPREG)),c,1
  1249  0005EE  A250               	goto	u651
  1250  0005F0  EFFC  F002         	goto	u650
  1251  0005F4  EFFE  F002         u651:
  1252  0005F8                     	goto	l1440
  1253  0005F8  EFF0  F002         u650:
  1254  0005FC                     	line	153
  1255                           	
  1256                           l1444:
  1257  0005FC                     ;main.c: 152:         {;main.c: 153:             write_PWM(calculatePWM(ref_vel));
  1258                           	movf	((c:_ref_vel)),c,w
  1259  0005FC  5058               	
  1260                           	call	_calculatePWM
  1261  0005FE  ECC1  F000         	movff	0+?_calculatePWM,(c:write_PWM@dutyCycle)
  1262  000602  C01F  F02B         	movff	1+?_calculatePWM,(c:write_PWM@dutyCycle+1)
  1263  000606  C020  F02C         	call	_write_PWM	;wreg free
  1264  00060A  ECAC  F004         	line	155
  1265                           	
  1266                           l1446:
  1267  00060E                     ;main.c: 155:             string_vel = int2char(vel);
  1268                           	movff	(c:_vel),(c:int2char@number)
  1269  00060E  C056  F00C         	movff	(c:_vel+1),(c:int2char@number+1)
  1270  000612  C057  F00D         	call	_int2char	;wreg free
  1271  000616  ECC9  F003         	movff	0+?_int2char,(c:_string_vel)
  1272  00061A  C00C  F046         	movff	1+?_int2char,(c:_string_vel+1)
  1273  00061E  C00D  F047         	line	156
  1274                           	
  1275                           l1448:
  1276  000622                     ;main.c: 156:             TXIE = 1;
  1277                           	bsf	c:(31980/8),(31980)&7	;volatile
  1278  000622  889D               	line	158
  1279                           	
  1280                           l1450:
  1281  000624                     ;main.c: 158:             if(1 == GPREG.DIRCTRL)
  1282                           	btfss	((c:_GPREG)),c,0
  1283  000624  A050               	goto	u661
  1284  000626  EF17  F003         	goto	u660
  1285  00062A  EF19  F003         u661:
  1286  00062E                     	goto	l186
  1287  00062E  EF1D  F003         u660:
  1288  000632                     	line	161
  1289                           	
  1290                           l1452:
  1291  000632                     ;main.c: 159:             {;main.c: 161:                 LATA0 = 0;
  1292                           	bcf	c:(31816/8),(31816)&7	;volatile
  1293  000632  9089               	line	162
  1294                           ;main.c: 162:                 LATA1 = 1;
  1295                           	bsf	c:(31817/8),(31817)&7	;volatile
  1296  000634  8289               	line	163
  1297                           ;main.c: 163:             } else {
  1298                           	goto	l187
  1299  000636  EF1F  F003         	
  1300                           l186:
  1301  00063A                     	line	165
  1302                           ;main.c: 165:                 LATA0 = 1;
  1303                           	bsf	c:(31816/8),(31816)&7	;volatile
  1304  00063A  8089               	line	166
  1305                           ;main.c: 166:                 LATA1 = 0;
  1306                           	bcf	c:(31817/8),(31817)&7	;volatile
  1307  00063C  9289               	line	167
  1308                           ;main.c: 167:             }
  1309                           	
  1310                           l187:
  1311  00063E                     	line	169
  1312                           ;main.c: 169:             GPREG.STCTRL = 0;
  1313                           	bcf	((c:_GPREG)),c,1
  1314  00063E  9250               	line	170
  1315                           ;main.c: 170:             TMR1ON = 1;
  1316                           	bsf	c:(32360/8),(32360)&7	;volatile
  1317  000640  80CD               	goto	l1440
  1318  000642  EFF0  F002         	line	171
  1319                           ;main.c: 171:         }
  1320                           	
  1321                           l185:
  1322  000646                     	goto	l1440
  1323  000646  EFF0  F002         	line	172
  1324                           ;main.c: 172:     }
  1325                           	
  1326                           l188:
  1327  00064A                     	goto	l1440
  1328  00064A  EFF0  F002         	
  1329                           l189:
  1330  00064E                     	line	174
  1331                           	
  1332                           l190:
  1333  00064E                     	global	start
  1334                           	goto	start
  1335  00064E  EFBF  F000         	opt stack 0
  1336                           GLOBAL	__end_of_main
  1337                           	__end_of_main:
  1338  000652                     	signat	_main,89
  1339                           	global	_int2char
  1340                           
  1341 ;; *************** function _int2char *****************
  1342 ;; Defined at:
  1343 ;;		line 303 in file "main.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  number          2   11[COMRAM] unsigned int 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  digit           1   15[COMRAM] char 
  1348 ;;  num             2   13[COMRAM] unsigned int 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  2   11[COMRAM] PTR unsigned char 
  1351 ;; Registers used:
  1352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1358 ;;      Params:         2       0       0       0
  1359 ;;      Locals:         3       0       0       0
  1360 ;;      Temps:          0       0       0       0
  1361 ;;      Totals:         5       0       0       0
  1362 ;;Total ram usage:        5 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    2
  1365 ;; This function calls:
  1366 ;;		___lwdiv
  1367 ;;		___lwmod
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1373                           	line	303
  1374                           global __ptext1
  1375                           __ptext1:
  1376  000792                     psect	text1
  1377                           	file	"main.c"
  1378                           	line	303
  1379                           	global	__size_of_int2char
  1380                           	__size_of_int2char	equ	__end_of_int2char-_int2char
  1381  0000                     	
  1382                           _int2char:
  1383  000792                     ;incstack = 0
  1384                           	opt	stack 28
  1385                           	line	306
  1386                           	
  1387                           l1406:
  1388  000792                     ;main.c: 303: uint8_t * int2char(uint16_t number);main.c: 304: {;main.c: 305:     static
                                  uint8_t string[5];;main.c: 306:     uint16_t num = number;
  1389                           	movff	(c:int2char@number),(c:int2char@num)
  1390  000792  C00C  F00E         	movff	(c:int2char@number+1),(c:int2char@num+1)
  1391  000796  C00D  F00F         	line	308
  1392                           	
  1393                           l1408:
  1394  00079A                     ;main.c: 308:     for(int8_t digit = 4; 0 <= digit; digit--)
  1395                           	movlw	low(04h)
  1396  00079A  0E04               	movwf	((c:int2char@digit)),c
  1397  00079C  6E10               	goto	l1416
  1398  00079E  EFF7  F003         	
  1399                           l224:
  1400  0007A2                     	line	310
  1401                           	
  1402                           l1410:
  1403  0007A2                     ;main.c: 309:     {;main.c: 310:         string[digit] = 0x30 + num%10;
  1404                           	movf	((c:int2char@digit)),c,w
  1405  0007A2  5010               	mullw	01h
  1406  0007A4  0D01               	movlw	low(int2char@string)
  1407  0007A6  0E51               	addwf	(prodl),c,w
  1408  0007A8  24F3               	movwf	c:fsr2l
  1409  0007AA  6ED9               	movlw	high(int2char@string)
  1410  0007AC  0E00               	addwfc	prod+1,w
  1411  0007AE  20F4               	movwf	1+c:fsr2l
  1412  0007B0  6EDA               	movff	(c:int2char@num),(c:___lwmod@dividend)
  1413  0007B2  C00E  F005         	movff	(c:int2char@num+1),(c:___lwmod@dividend+1)
  1414  0007B6  C00F  F006         	movlw	high(0Ah)
  1415  0007BA  0E00               	movwf	((c:___lwmod@divisor+1)),c
  1416  0007BC  6E08               	movlw	low(0Ah)
  1417  0007BE  0E0A               	movwf	((c:___lwmod@divisor)),c
  1418  0007C0  6E07               	call	___lwmod	;wreg free
  1419  0007C2  EC07  F004         	movf	(0+?___lwmod),c,w
  1420  0007C6  5005               	addlw	low(030h)
  1421  0007C8  0F30               	movwf	indf2,c
  1422  0007CA  6EDF               
  1423                           	line	311
  1424                           	
  1425                           l1412:
  1426  0007CC                     ;main.c: 311:         num = num/10;
  1427                           	movff	(c:int2char@num),(c:___lwdiv@dividend)
  1428  0007CC  C00E  F005         	movff	(c:int2char@num+1),(c:___lwdiv@dividend+1)
  1429  0007D0  C00F  F006         	movlw	high(0Ah)
  1430  0007D4  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  1431  0007D6  6E08               	movlw	low(0Ah)
  1432  0007D8  0E0A               	movwf	((c:___lwdiv@divisor)),c
  1433  0007DA  6E07               	call	___lwdiv	;wreg free
  1434  0007DC  EC85  F003         	movff	0+?___lwdiv,(c:int2char@num)
  1435  0007E0  C005  F00E         	movff	1+?___lwdiv,(c:int2char@num+1)
  1436  0007E4  C006  F00F         	line	312
  1437                           	
  1438                           l1414:
  1439  0007E8                     ;main.c: 312:     }
  1440                           	decf	((c:int2char@digit)),c
  1441  0007E8  0610               	goto	l1416
  1442  0007EA  EFF7  F003         	
  1443                           l223:
  1444  0007EE                     	
  1445                           l1416:
  1446  0007EE                     	btfsc	((c:int2char@digit)),c,7
  1447  0007EE  BE10               	goto	u640
  1448  0007F0  EFFE  F003         	goto	u641
  1449  0007F4  EFFC  F003         
  1450                           u641:
  1451  0007F8                     	goto	l1410
  1452  0007F8  EFD1  F003         u640:
  1453  0007FC                     	goto	l1418
  1454  0007FC  EF00  F004         	
  1455                           l225:
  1456  000800                     	line	314
  1457                           	
  1458                           l1418:
  1459  000800                     ;main.c: 314:     return string;
  1460                           		movlw	low(int2char@string)
  1461  000800  0E51               	movwf	((c:?_int2char)),c
  1462  000802  6E0C               	movlw	high(int2char@string)
  1463  000804  0E00               	movwf	((c:?_int2char+1)),c
  1464  000806  6E0D               
  1465                           	goto	l226
  1466  000808  EF06  F004         	
  1467                           l1420:
  1468  00080C                     	line	315
  1469                           	
  1470                           l226:
  1471  00080C                     	return	;funcret
  1472  00080C  0012               	opt stack 0
  1473                           GLOBAL	__end_of_int2char
  1474                           	__end_of_int2char:
  1475  00080E                     	signat	_int2char,4218
  1476                           	global	___lwmod
  1477                           
  1478 ;; *************** function ___lwmod *****************
  1479 ;; Defined at:
  1480 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  dividend        2    4[COMRAM] unsigned int 
  1483 ;;  divisor         2    6[COMRAM] unsigned int 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  counter         1    8[COMRAM] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  2    4[COMRAM] unsigned int 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1495 ;;      Params:         4       0       0       0
  1496 ;;      Locals:         1       0       0       0
  1497 ;;      Temps:          0       0       0       0
  1498 ;;      Totals:         5       0       0       0
  1499 ;;Total ram usage:        5 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_int2char
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           psect	text2,class=CODE,space=0,reloc=2,group=1
  1509                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1510                           	line	7
  1511                           global __ptext2
  1512                           __ptext2:
  1513  00080E                     psect	text2
  1514                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1515                           	line	7
  1516                           	global	__size_of___lwmod
  1517                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1518  0000                     	
  1519                           ___lwmod:
  1520  00080E                     ;incstack = 0
  1521                           	opt	stack 28
  1522                           	line	12
  1523                           	
  1524                           l1326:
  1525  00080E                     	movf	((c:___lwmod@divisor)),c,w
  1526  00080E  5007               iorwf	((c:___lwmod@divisor+1)),c,w
  1527  000810  1008               	btfsc	status,2
  1528  000812  B4D8               	goto	u561
  1529  000814  EF0E  F004         	goto	u560
  1530  000818  EF10  F004         
  1531                           u561:
  1532  00081C                     	goto	l738
  1533  00081C  EF3E  F004         u560:
  1534  000820                     	line	13
  1535                           	
  1536                           l1328:
  1537  000820                     	movlw	low(01h)
  1538  000820  0E01               	movwf	((c:___lwmod@counter)),c
  1539  000822  6E09               	line	14
  1540                           	goto	l1332
  1541  000824  EF1A  F004         	
  1542                           l740:
  1543  000828                     	line	15
  1544                           	
  1545                           l1330:
  1546  000828                     	bcf	status,0
  1547  000828  90D8               	rlcf	((c:___lwmod@divisor)),c
  1548  00082A  3607               	rlcf	((c:___lwmod@divisor+1)),c
  1549  00082C  3608               	line	16
  1550                           	incf	((c:___lwmod@counter)),c
  1551  00082E  2A09               	goto	l1332
  1552  000830  EF1A  F004         	line	17
  1553                           	
  1554                           l739:
  1555  000834                     	line	14
  1556                           	
  1557                           l1332:
  1558  000834                     	
  1559                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  1560  000834  AE08               	goto	u571
  1561  000836  EF1F  F004         	goto	u570
  1562  00083A  EF21  F004         u571:
  1563  00083E                     	goto	l1330
  1564  00083E  EF14  F004         u570:
  1565  000842                     	goto	l1334
  1566  000842  EF25  F004         	
  1567                           l741:
  1568  000846                     	goto	l1334
  1569  000846  EF25  F004         	line	18
  1570                           	
  1571                           l742:
  1572  00084A                     	line	19
  1573                           	
  1574                           l1334:
  1575  00084A                     		movf	((c:___lwmod@divisor)),c,w
  1576  00084A  5007               	subwf	((c:___lwmod@dividend)),c,w
  1577  00084C  5C05               	movf	((c:___lwmod@divisor+1)),c,w
  1578  00084E  5008               	subwfb	((c:___lwmod@dividend+1)),c,w
  1579  000850  5806               	btfss	status,0
  1580  000852  A0D8               	goto	u581
  1581  000854  EF2E  F004         	goto	u580
  1582  000858  EF30  F004         
  1583                           u581:
  1584  00085C                     	goto	l1338
  1585  00085C  EF36  F004         u580:
  1586  000860                     	line	20
  1587                           	
  1588                           l1336:
  1589  000860                     	movf	((c:___lwmod@divisor)),c,w
  1590  000860  5007               	subwf	((c:___lwmod@dividend)),c
  1591  000862  5E05               	movf	((c:___lwmod@divisor+1)),c,w
  1592  000864  5008               	subwfb	((c:___lwmod@dividend+1)),c
  1593  000866  5A06               
  1594                           	goto	l1338
  1595  000868  EF36  F004         	
  1596                           l743:
  1597  00086C                     	line	21
  1598                           	
  1599                           l1338:
  1600  00086C                     	bcf	status,0
  1601  00086C  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  1602  00086E  3208               	rrcf	((c:___lwmod@divisor)),c
  1603  000870  3207               	line	22
  1604                           	
  1605                           l1340:
  1606  000872                     	decfsz	((c:___lwmod@counter)),c
  1607  000872  2E09               	
  1608                           	goto	l1334
  1609  000874  EF25  F004         	goto	l738
  1610  000878  EF3E  F004         	
  1611                           l744:
  1612  00087C                     	line	23
  1613                           	
  1614                           l738:
  1615  00087C                     	line	24
  1616                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  1617  00087C  C005  F005         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  1618  000880  C006  F006         	line	25
  1619                           	
  1620                           l745:
  1621  000884                     	return	;funcret
  1622  000884  0012               	opt stack 0
  1623                           GLOBAL	__end_of___lwmod
  1624                           	__end_of___lwmod:
  1625  000886                     	signat	___lwmod,8314
  1626                           	global	___lwdiv
  1627                           
  1628 ;; *************** function ___lwdiv *****************
  1629 ;; Defined at:
  1630 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  dividend        2    4[COMRAM] unsigned int 
  1633 ;;  divisor         2    6[COMRAM] unsigned int 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  quotient        2    8[COMRAM] unsigned int 
  1636 ;;  counter         1   10[COMRAM] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  2    4[COMRAM] unsigned int 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1646 ;;      Params:         4       0       0       0
  1647 ;;      Locals:         3       0       0       0
  1648 ;;      Temps:          0       0       0       0
  1649 ;;      Totals:         7       0       0       0
  1650 ;;Total ram usage:        7 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_int2char
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           psect	text3,class=CODE,space=0,reloc=2,group=1
  1660                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1661                           	line	7
  1662                           global __ptext3
  1663                           __ptext3:
  1664  00070A                     psect	text3
  1665                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1666                           	line	7
  1667                           	global	__size_of___lwdiv
  1668                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1669  0000                     	
  1670                           ___lwdiv:
  1671  00070A                     ;incstack = 0
  1672                           	opt	stack 28
  1673                           	line	13
  1674                           	
  1675                           l1304:
  1676  00070A                     	movlw	high(0)
  1677  00070A  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  1678  00070C  6E0A               	movlw	low(0)
  1679  00070E  0E00               	movwf	((c:___lwdiv@quotient)),c
  1680  000710  6E09               	line	14
  1681                           	
  1682                           l1306:
  1683  000712                     	movf	((c:___lwdiv@divisor)),c,w
  1684  000712  5007               iorwf	((c:___lwdiv@divisor+1)),c,w
  1685  000714  1008               	btfsc	status,2
  1686  000716  B4D8               	goto	u531
  1687  000718  EF90  F003         	goto	u530
  1688  00071C  EF92  F003         
  1689                           u531:
  1690  000720                     	goto	l728
  1691  000720  EFC4  F003         u530:
  1692  000724                     	line	15
  1693                           	
  1694                           l1308:
  1695  000724                     	movlw	low(01h)
  1696  000724  0E01               	movwf	((c:___lwdiv@counter)),c
  1697  000726  6E0B               	line	16
  1698                           	goto	l1312
  1699  000728  EF9C  F003         	
  1700                           l730:
  1701  00072C                     	line	17
  1702                           	
  1703                           l1310:
  1704  00072C                     	bcf	status,0
  1705  00072C  90D8               	rlcf	((c:___lwdiv@divisor)),c
  1706  00072E  3607               	rlcf	((c:___lwdiv@divisor+1)),c
  1707  000730  3608               	line	18
  1708                           	incf	((c:___lwdiv@counter)),c
  1709  000732  2A0B               	goto	l1312
  1710  000734  EF9C  F003         	line	19
  1711                           	
  1712                           l729:
  1713  000738                     	line	16
  1714                           	
  1715                           l1312:
  1716  000738                     	
  1717                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  1718  000738  AE08               	goto	u541
  1719  00073A  EFA1  F003         	goto	u540
  1720  00073E  EFA3  F003         u541:
  1721  000742                     	goto	l1310
  1722  000742  EF96  F003         u540:
  1723  000746                     	goto	l1314
  1724  000746  EFA7  F003         	
  1725                           l731:
  1726  00074A                     	goto	l1314
  1727  00074A  EFA7  F003         	line	20
  1728                           	
  1729                           l732:
  1730  00074E                     	line	21
  1731                           	
  1732                           l1314:
  1733  00074E                     	bcf	status,0
  1734  00074E  90D8               	rlcf	((c:___lwdiv@quotient)),c
  1735  000750  3609               	rlcf	((c:___lwdiv@quotient+1)),c
  1736  000752  360A               	line	22
  1737                           	
  1738                           l1316:
  1739  000754                     		movf	((c:___lwdiv@divisor)),c,w
  1740  000754  5007               	subwf	((c:___lwdiv@dividend)),c,w
  1741  000756  5C05               	movf	((c:___lwdiv@divisor+1)),c,w
  1742  000758  5008               	subwfb	((c:___lwdiv@dividend+1)),c,w
  1743  00075A  5806               	btfss	status,0
  1744  00075C  A0D8               	goto	u551
  1745  00075E  EFB3  F003         	goto	u550
  1746  000762  EFB5  F003         
  1747                           u551:
  1748  000766                     	goto	l1322
  1749  000766  EFBC  F003         u550:
  1750  00076A                     	line	23
  1751                           	
  1752                           l1318:
  1753  00076A                     	movf	((c:___lwdiv@divisor)),c,w
  1754  00076A  5007               	subwf	((c:___lwdiv@dividend)),c
  1755  00076C  5E05               	movf	((c:___lwdiv@divisor+1)),c,w
  1756  00076E  5008               	subwfb	((c:___lwdiv@dividend+1)),c
  1757  000770  5A06               
  1758                           	line	24
  1759                           	
  1760                           l1320:
  1761  000772                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  1762  000772  8009               	goto	l1322
  1763  000774  EFBC  F003         	line	25
  1764                           	
  1765                           l733:
  1766  000778                     	line	26
  1767                           	
  1768                           l1322:
  1769  000778                     	bcf	status,0
  1770  000778  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  1771  00077A  3208               	rrcf	((c:___lwdiv@divisor)),c
  1772  00077C  3207               	line	27
  1773                           	
  1774                           l1324:
  1775  00077E                     	decfsz	((c:___lwdiv@counter)),c
  1776  00077E  2E0B               	
  1777                           	goto	l1314
  1778  000780  EFA7  F003         	goto	l728
  1779  000784  EFC4  F003         	
  1780                           l734:
  1781  000788                     	line	28
  1782                           	
  1783                           l728:
  1784  000788                     	line	29
  1785                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  1786  000788  C009  F005         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  1787  00078C  C00A  F006         	line	30
  1788                           	
  1789                           l735:
  1790  000790                     	return	;funcret
  1791  000790  0012               	opt stack 0
  1792                           GLOBAL	__end_of___lwdiv
  1793                           	__end_of___lwdiv:
  1794  000792                     	signat	___lwdiv,8314
  1795                           	global	_init_VNHIO
  1796                           
  1797 ;; *************** function _init_VNHIO *****************
  1798 ;; Defined at:
  1799 ;;		line 224 in file "main.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1813 ;;      Params:         0       0       0       0
  1814 ;;      Locals:         0       0       0       0
  1815 ;;      Temps:          0       0       0       0
  1816 ;;      Totals:         0       0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    1
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1827                           	file	"main.c"
  1828                           	line	224
  1829                           global __ptext4
  1830                           __ptext4:
  1831  000A00                     psect	text4
  1832                           	file	"main.c"
  1833                           	line	224
  1834                           	global	__size_of_init_VNHIO
  1835                           	__size_of_init_VNHIO	equ	__end_of_init_VNHIO-_init_VNHIO
  1836  0000                     	
  1837                           _init_VNHIO:
  1838  000A00                     ;incstack = 0
  1839                           	opt	stack 29
  1840                           	line	226
  1841                           	
  1842                           l1030:
  1843  000A00                     ;main.c: 226:     ANSEL0 = 0;
  1844                           	movlw	low(0)
  1845  000A00  0E00               	movwf	((c:4024)),c	;volatile
  1846  000A02  6EB8               	line	227
  1847                           ;main.c: 227:     ANSEL1 = 0;
  1848                           	movlw	low(0)
  1849  000A04  0E00               	movwf	((c:4025)),c	;volatile
  1850  000A06  6EB9               	line	228
  1851                           	
  1852                           l1032:
  1853  000A08                     ;main.c: 228:     TRISA0 = 0;
  1854                           	bcf	c:(31888/8),(31888)&7	;volatile
  1855  000A08  9092               	line	229
  1856                           	
  1857                           l1034:
  1858  000A0A                     ;main.c: 229:     TRISA1 = 0;
  1859                           	bcf	c:(31889/8),(31889)&7	;volatile
  1860  000A0A  9292               	line	230
  1861                           	
  1862                           l1036:
  1863  000A0C                     ;main.c: 230:     LATA0 = 0;
  1864                           	bcf	c:(31816/8),(31816)&7	;volatile
  1865  000A0C  9089               	line	231
  1866                           	
  1867                           l1038:
  1868  000A0E                     ;main.c: 231:     LATA1 = 1;
  1869                           	bsf	c:(31817/8),(31817)&7	;volatile
  1870  000A0E  8289               	line	232
  1871                           	
  1872                           l203:
  1873  000A10                     	return	;funcret
  1874  000A10  0012               	opt stack 0
  1875                           GLOBAL	__end_of_init_VNHIO
  1876                           	__end_of_init_VNHIO:
  1877  000A12                     	signat	_init_VNHIO,89
  1878                           	global	_init_UART
  1879                           
  1880 ;; *************** function _init_UART *****************
  1881 ;; Defined at:
  1882 ;;		line 268 in file "main.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1896 ;;      Params:         0       0       0       0
  1897 ;;      Locals:         0       0       0       0
  1898 ;;      Temps:          0       0       0       0
  1899 ;;      Totals:         0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    1
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_main
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1910                           	line	268
  1911                           global __ptext5
  1912                           __ptext5:
  1913  0009EA                     psect	text5
  1914                           	file	"main.c"
  1915                           	line	268
  1916                           	global	__size_of_init_UART
  1917                           	__size_of_init_UART	equ	__end_of_init_UART-_init_UART
  1918  0000                     	
  1919                           _init_UART:
  1920  0009EA                     ;incstack = 0
  1921                           	opt	stack 29
  1922                           	line	270
  1923                           	
  1924                           l1066:
  1925  0009EA                     ;main.c: 270:     GPREG.TXCTRL = 0;
  1926                           	bcf	((c:_GPREG)),c,6
  1927  0009EA  9C50               	line	271
  1928                           ;main.c: 271:     TRISC6 = 0;
  1929                           	bcf	c:(31910/8),(31910)&7	;volatile
  1930  0009EC  9C94               	line	272
  1931                           	
  1932                           l1068:
  1933  0009EE                     ;main.c: 272:     TXSTA = 0x20;
  1934                           	movlw	low(020h)
  1935  0009EE  0E20               	movwf	((c:4012)),c	;volatile
  1936  0009F0  6EAC               	line	273
  1937                           ;main.c: 273:     RCSTA = 0x90;
  1938                           	movlw	low(090h)
  1939  0009F2  0E90               	movwf	((c:4011)),c	;volatile
  1940  0009F4  6EAB               	line	274
  1941                           ;main.c: 274:     BAUDCON = 0x0;
  1942                           	movlw	low(0)
  1943  0009F6  0E00               	movwf	((c:4010)),c	;volatile
  1944  0009F8  6EAA               	line	275
  1945                           ;main.c: 275:     SPBRG = 12;
  1946                           	movlw	low(0Ch)
  1947  0009FA  0E0C               	movwf	((c:4015)),c	;volatile
  1948  0009FC  6EAF               	line	276
  1949                           	
  1950                           l215:
  1951  0009FE                     	return	;funcret
  1952  0009FE  0012               	opt stack 0
  1953                           GLOBAL	__end_of_init_UART
  1954                           	__end_of_init_UART:
  1955  000A00                     	signat	_init_UART,89
  1956                           	global	_init_TMR1
  1957                           
  1958 ;; *************** function _init_TMR1 *****************
  1959 ;; Defined at:
  1960 ;;		line 217 in file "main.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1974 ;;      Params:         0       0       0       0
  1975 ;;      Locals:         0       0       0       0
  1976 ;;      Temps:          0       0       0       0
  1977 ;;      Totals:         0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    1
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           psect	text6,class=CODE,space=0,reloc=2,group=0
  1988                           	line	217
  1989                           global __ptext6
  1990                           __ptext6:
  1991  000A12                     psect	text6
  1992                           	file	"main.c"
  1993                           	line	217
  1994                           	global	__size_of_init_TMR1
  1995                           	__size_of_init_TMR1	equ	__end_of_init_TMR1-_init_TMR1
  1996  0000                     	
  1997                           _init_TMR1:
  1998  000A12                     ;incstack = 0
  1999                           	opt	stack 29
  2000                           	line	220
  2001                           	
  2002                           l1040:
  2003  000A12                     ;main.c: 220:     T1CON = 0xF9;
  2004                           	movlw	low(0F9h)
  2005  000A12  0EF9               	movwf	((c:4045)),c	;volatile
  2006  000A14  6ECD               	line	221
  2007                           ;main.c: 221:     TMR1 = 53035;
  2008                           	movlw	high(0CF2Bh)
  2009  000A16  0ECF               	movwf	((c:4046+1)),c	;volatile
  2010  000A18  6ECF               	movlw	low(0CF2Bh)
  2011  000A1A  0E2B               	movwf	((c:4046)),c	;volatile
  2012  000A1C  6ECE               	line	222
  2013                           	
  2014                           l200:
  2015  000A1E                     	return	;funcret
  2016  000A1E  0012               	opt stack 0
  2017                           GLOBAL	__end_of_init_TMR1
  2018                           	__end_of_init_TMR1:
  2019  000A20                     	signat	_init_TMR1,89
  2020                           	global	_init_QEI
  2021                           
  2022 ;; *************** function _init_QEI *****************
  2023 ;; Defined at:
  2024 ;;		line 252 in file "main.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2038 ;;      Params:         0       0       0       0
  2039 ;;      Locals:         0       0       0       0
  2040 ;;      Temps:          0       0       0       0
  2041 ;;      Totals:         0       0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           psect	text7,class=CODE,space=0,reloc=2,group=0
  2052                           	line	252
  2053                           global __ptext7
  2054                           __ptext7:
  2055  00097E                     psect	text7
  2056                           	file	"main.c"
  2057                           	line	252
  2058                           	global	__size_of_init_QEI
  2059                           	__size_of_init_QEI	equ	__end_of_init_QEI-_init_QEI
  2060  0000                     	
  2061                           _init_QEI:
  2062  00097E                     ;incstack = 0
  2063                           	opt	stack 29
  2064                           	line	254
  2065                           	
  2066                           l1050:
  2067  00097E                     ;main.c: 254:     CAP1BUFL = 0;
  2068                           	movlw	low(0)
  2069  00097E  0E00               	movwf	((c:3944)),c	;volatile
  2070  000980  6E68               	line	255
  2071                           ;main.c: 255:     CAP1BUFH = 0;
  2072                           	movlw	low(0)
  2073  000982  0E00               	movwf	((c:3945)),c	;volatile
  2074  000984  6E69               	line	256
  2075                           	
  2076                           l1052:
  2077  000986                     ;main.c: 256:     TRISA4 = 1;
  2078                           	bsf	c:(31892/8),(31892)&7	;volatile
  2079  000986  8892               	line	257
  2080                           	
  2081                           l1054:
  2082  000988                     ;main.c: 257:     TRISA5 = 1;
  2083                           	bsf	c:(31893/8),(31893)&7	;volatile
  2084  000988  8A92               	line	260
  2085                           ;main.c: 260:     T5CON = 0x80;
  2086                           	movlw	low(080h)
  2087  00098A  0E80               	movwf	((c:4023)),c	;volatile
  2088  00098C  6EB7               	line	261
  2089                           ;main.c: 261:     QEICON = 0x19;
  2090                           	movlw	low(019h)
  2091  00098E  0E19               	movwf	((c:4022)),c	;volatile
  2092  000990  6EB6               	line	262
  2093                           	
  2094                           l1056:
  2095  000992                     ;main.c: 262:     PR5 = 0xFFFF;
  2096                           	setf	((c:3984)),c	;volatile
  2097  000992  6890               	setf	((c:3984+1)),c	;volatile
  2098  000994  6891               	line	263
  2099                           	
  2100                           l1058:
  2101  000996                     ;main.c: 263:     CAP1REN = 1;
  2102                           	bsf	c:(31518/8),(31518)&7	;volatile
  2103  000996  8C63               	line	264
  2104                           	
  2105                           l1060:
  2106  000998                     ;main.c: 264:     TMR5ON = 1;
  2107                           	bsf	c:(32184/8),(32184)&7	;volatile
  2108  000998  80B7               	line	266
  2109                           	
  2110                           l212:
  2111  00099A                     	return	;funcret
  2112  00099A  0012               	opt stack 0
  2113                           GLOBAL	__end_of_init_QEI
  2114                           	__end_of_init_QEI:
  2115  00099C                     	signat	_init_QEI,89
  2116                           	global	_init_PWM
  2117                           
  2118 ;; *************** function _init_PWM *****************
  2119 ;; Defined at:
  2120 ;;		line 234 in file "main.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2134 ;;      Params:         0       0       0       0
  2135 ;;      Locals:         0       0       0       0
  2136 ;;      Temps:          0       0       0       0
  2137 ;;      Totals:         0       0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    2
  2141 ;; This function calls:
  2142 ;;		_write_PWM
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           psect	text8,class=CODE,space=0,reloc=2,group=0
  2148                           	line	234
  2149                           global __ptext8
  2150                           __ptext8:
  2151  00099C                     psect	text8
  2152                           	file	"main.c"
  2153                           	line	234
  2154                           	global	__size_of_init_PWM
  2155                           	__size_of_init_PWM	equ	__end_of_init_PWM-_init_PWM
  2156  0000                     	
  2157                           _init_PWM:
  2158  00099C                     ;incstack = 0
  2159                           	opt	stack 28
  2160                           	line	236
  2161                           	
  2162                           l1342:
  2163  00099C                     ;main.c: 236:     TRISC2 = 0;
  2164                           	bcf	c:(31906/8),(31906)&7	;volatile
  2165  00099C  9494               	line	237
  2166                           ;main.c: 237:     LATC2 = 0;
  2167                           	bcf	c:(31834/8),(31834)&7	;volatile
  2168  00099E  948B               	line	239
  2169                           	
  2170                           l1344:
  2171  0009A0                     ;main.c: 239:     CCP1CON = 0xF;
  2172                           	movlw	low(0Fh)
  2173  0009A0  0E0F               	movwf	((c:4029)),c	;volatile
  2174  0009A2  6EBD               	line	240
  2175                           ;main.c: 240:     T2CON = 0x4;
  2176                           	movlw	low(04h)
  2177  0009A4  0E04               	movwf	((c:4042)),c	;volatile
  2178  0009A6  6ECA               	line	241
  2179                           	
  2180                           l1346:
  2181  0009A8                     ;main.c: 241:     PR2 = 255u;
  2182                           	setf	((c:4043)),c	;volatile
  2183  0009A8  68CB               	line	242
  2184                           	
  2185                           l1348:
  2186  0009AA                     ;main.c: 242:     write_PWM(0);
  2187                           	movlw	high(0)
  2188  0009AA  0E00               	movwf	((c:write_PWM@dutyCycle+1)),c
  2189  0009AC  6E2C               	movlw	low(0)
  2190  0009AE  0E00               	movwf	((c:write_PWM@dutyCycle)),c
  2191  0009B0  6E2B               	call	_write_PWM	;wreg free
  2192  0009B2  ECAC  F004         	line	243
  2193                           	
  2194                           l206:
  2195  0009B6                     	return	;funcret
  2196  0009B6  0012               	opt stack 0
  2197                           GLOBAL	__end_of_init_PWM
  2198                           	__end_of_init_PWM:
  2199  0009B8                     	signat	_init_PWM,89
  2200                           	global	_write_PWM
  2201                           
  2202 ;; *************** function _write_PWM *****************
  2203 ;; Defined at:
  2204 ;;		line 245 in file "main.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  dutyCycle       2   42[COMRAM] unsigned int 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2218 ;;      Params:         2       0       0       0
  2219 ;;      Locals:         0       0       0       0
  2220 ;;      Temps:          1       0       0       0
  2221 ;;      Totals:         3       0       0       0
  2222 ;;Total ram usage:        3 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    1
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;;		_init_PWM
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           psect	text9,class=CODE,space=0,reloc=2,group=0
  2233                           	line	245
  2234                           global __ptext9
  2235                           __ptext9:
  2236  000958                     psect	text9
  2237                           	file	"main.c"
  2238                           	line	245
  2239                           	global	__size_of_write_PWM
  2240                           	__size_of_write_PWM	equ	__end_of_write_PWM-_write_PWM
  2241  0000                     	
  2242                           _write_PWM:
  2243  000958                     ;incstack = 0
  2244                           	opt	stack 29
  2245                           	line	247
  2246                           	
  2247                           l1222:
  2248  000958                     ;main.c: 245: void write_PWM(uint16_t dutyCycle);main.c: 246: {;main.c: 247:     CCP1CON
                                 bits.DC1B = dutyCycle % 4u;
  2249                           	movff	(c:write_PWM@dutyCycle),??_write_PWM+0+0
  2250  000958  C02B  F02D         	movlw	03h
  2251  00095C  0E03               	andwf	(??_write_PWM+0+0),c
  2252  00095E  162D               	swapf	(??_write_PWM+0+0),c
  2253  000960  3A2D               	movf	((c:4029)),c,w	;volatile
  2254  000962  50BD               	xorwf	(??_write_PWM+0+0),c,w
  2255  000964  182D               	andlw	not (((1<<2)-1)<<4)
  2256  000966  0BCF               	xorwf	(??_write_PWM+0+0),c,w
  2257  000968  182D               	movwf	((c:4029)),c	;volatile
  2258  00096A  6EBD               	line	248
  2259                           	
  2260                           l1224:
  2261  00096C                     ;main.c: 248:     dutyCycle >>= 2;
  2262                           	bcf	status,0
  2263  00096C  90D8               	rrcf	((c:write_PWM@dutyCycle+1)),c
  2264  00096E  322C               	rrcf	((c:write_PWM@dutyCycle)),c
  2265  000970  322B               	bcf	status,0
  2266  000972  90D8               	rrcf	((c:write_PWM@dutyCycle+1)),c
  2267  000974  322C               	rrcf	((c:write_PWM@dutyCycle)),c
  2268  000976  322B               	line	249
  2269                           	
  2270                           l1226:
  2271  000978                     ;main.c: 249:     CCPR1L = (uint8_t) dutyCycle;
  2272                           	movff	(c:write_PWM@dutyCycle),(c:4030)	;volatile
  2273  000978  C02B  FFBE         	line	250
  2274                           	
  2275                           l209:
  2276  00097C                     	return	;funcret
  2277  00097C  0012               	opt stack 0
  2278                           GLOBAL	__end_of_write_PWM
  2279                           	__end_of_write_PWM:
  2280  00097E                     	signat	_write_PWM,4217
  2281                           	global	_init_ISR
  2282                           
  2283 ;; *************** function _init_ISR *****************
  2284 ;; Defined at:
  2285 ;;		line 278 in file "main.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		None
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2299 ;;      Params:         0       0       0       0
  2300 ;;      Locals:         0       0       0       0
  2301 ;;      Temps:          0       0       0       0
  2302 ;;      Totals:         0       0       0       0
  2303 ;;Total ram usage:        0 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    1
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           psect	text10,class=CODE,space=0,reloc=2,group=0
  2313                           	line	278
  2314                           global __ptext10
  2315                           __ptext10:
  2316  0009B8                     psect	text10
  2317                           	file	"main.c"
  2318                           	line	278
  2319                           	global	__size_of_init_ISR
  2320                           	__size_of_init_ISR	equ	__end_of_init_ISR-_init_ISR
  2321  0000                     	
  2322                           _init_ISR:
  2323  0009B8                     ;incstack = 0
  2324                           	opt	stack 29
  2325                           	line	281
  2326                           	
  2327                           l1070:
  2328  0009B8                     ;main.c: 281:     TMR1IF = 0;
  2329                           	bcf	c:(31984/8),(31984)&7	;volatile
  2330  0009B8  909E               	line	282
  2331                           ;main.c: 282:     TMR1IE = 1;
  2332                           	bsf	c:(31976/8),(31976)&7	;volatile
  2333  0009BA  809D               	line	283
  2334                           ;main.c: 283:     TMR1IP = 1;
  2335                           	bsf	c:(31992/8),(31992)&7	;volatile
  2336  0009BC  809F               	line	286
  2337                           ;main.c: 286:     TMR5IF = 0;
  2338                           	bcf	c:(32032/8),(32032)&7	;volatile
  2339  0009BE  90A4               	line	287
  2340                           ;main.c: 287:     TMR5IE = 1;
  2341                           	bsf	c:(32024/8),(32024)&7	;volatile
  2342  0009C0  80A3               	line	288
  2343                           ;main.c: 288:     TMR5IP = 1;
  2344                           	bsf	c:(32040/8),(32040)&7	;volatile
  2345  0009C2  80A5               	line	291
  2346                           ;main.c: 291:     SSPIE = 1;
  2347                           	bsf	c:(31979/8),(31979)&7	;volatile
  2348  0009C4  869D               	line	292
  2349                           ;main.c: 292:     SSPIP = 1;
  2350                           	bsf	c:(31995/8),(31995)&7	;volatile
  2351  0009C6  869F               	line	295
  2352                           ;main.c: 295:     TXIE = 0;
  2353                           	bcf	c:(31980/8),(31980)&7	;volatile
  2354  0009C8  989D               	line	296
  2355                           ;main.c: 296:     TXIP = 1;
  2356                           	bsf	c:(31996/8),(31996)&7	;volatile
  2357  0009CA  889F               	line	297
  2358                           ;main.c: 297:     TXIF = 0;
  2359                           	bcf	c:(31988/8),(31988)&7	;volatile
  2360  0009CC  989E               	line	299
  2361                           ;main.c: 299:     IPEN=1;
  2362                           	bsf	c:(32391/8),(32391)&7	;volatile
  2363  0009CE  8ED0               	line	300
  2364                           ;main.c: 300:     GIE = 1;
  2365                           	bsf	c:(32663/8),(32663)&7	;volatile
  2366  0009D0  8EF2               	line	301
  2367                           	
  2368                           l218:
  2369  0009D2                     	return	;funcret
  2370  0009D2  0012               	opt stack 0
  2371                           GLOBAL	__end_of_init_ISR
  2372                           	__end_of_init_ISR:
  2373  0009D4                     	signat	_init_ISR,89
  2374                           	global	_init_I2C
  2375                           
  2376 ;; *************** function _init_I2C *****************
  2377 ;; Defined at:
  2378 ;;		line 317 in file "main.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2392 ;;      Params:         0       0       0       0
  2393 ;;      Locals:         0       0       0       0
  2394 ;;      Temps:          0       0       0       0
  2395 ;;      Totals:         0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    1
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           psect	text11,class=CODE,space=0,reloc=2,group=0
  2406                           	line	317
  2407                           global __ptext11
  2408                           __ptext11:
  2409  000A20                     psect	text11
  2410                           	file	"main.c"
  2411                           	line	317
  2412                           	global	__size_of_init_I2C
  2413                           	__size_of_init_I2C	equ	__end_of_init_I2C-_init_I2C
  2414  0000                     	
  2415                           _init_I2C:
  2416  000A20                     ;incstack = 0
  2417                           	opt	stack 29
  2418                           	line	319
  2419                           	
  2420                           l1062:
  2421  000A20                     ;main.c: 319:     TRISC5 = 1;
  2422                           	bsf	c:(31909/8),(31909)&7	;volatile
  2423  000A20  8A94               	line	320
  2424                           ;main.c: 320:     TRISC4 = 1;
  2425                           	bsf	c:(31908/8),(31908)&7	;volatile
  2426  000A22  8894               	line	321
  2427                           	
  2428                           l1064:
  2429  000A24                     ;main.c: 321:     SSPCON =0b00110110;
  2430                           	movlw	low(036h)
  2431  000A24  0E36               	movwf	((c:4038)),c	;volatile
  2432  000A26  6EC6               	line	323
  2433                           ;main.c: 323:     SSPADD = 0x40;
  2434                           	movlw	low(040h)
  2435  000A28  0E40               	movwf	((c:4040)),c	;volatile
  2436  000A2A  6EC8               	line	324
  2437                           	
  2438                           l229:
  2439  000A2C                     	return	;funcret
  2440  000A2C  0012               	opt stack 0
  2441                           GLOBAL	__end_of_init_I2C
  2442                           	__end_of_init_I2C:
  2443  000A2E                     	signat	_init_I2C,89
  2444                           	global	_dataToVel
  2445                           
  2446 ;; *************** function _dataToVel *****************
  2447 ;; Defined at:
  2448 ;;		line 326 in file "main.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  data            1    wreg     unsigned char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  data            1    6[COMRAM] unsigned char 
  2453 ;;  vel             2    7[COMRAM] unsigned int 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  2    4[COMRAM] unsigned int 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0, prodl, prodh
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2463 ;;      Params:         2       0       0       0
  2464 ;;      Locals:         3       0       0       0
  2465 ;;      Temps:          0       0       0       0
  2466 ;;      Totals:         5       0       0       0
  2467 ;;Total ram usage:        5 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    1
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_main
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           psect	text12,class=CODE,space=0,reloc=2,group=0
  2477                           	line	326
  2478                           global __ptext12
  2479                           __ptext12:
  2480  0008F8                     psect	text12
  2481                           	file	"main.c"
  2482                           	line	326
  2483                           	global	__size_of_dataToVel
  2484                           	__size_of_dataToVel	equ	__end_of_dataToVel-_dataToVel
  2485  0000                     	
  2486                           _dataToVel:
  2487  0008F8                     ;incstack = 0
  2488                           	opt	stack 29
  2489                           ;dataToVel@data stored from wreg
  2490                           	movwf	((c:dataToVel@data)),c
  2491  0008F8  6E07               	line	328
  2492                           	
  2493                           l1350:
  2494  0008FA                     ;main.c: 326: uint16_t dataToVel(uint8_t data);main.c: 327: {;main.c: 328:     uint16_t 
                                 vel = (uint16_t)data*10;
  2495                           	movf	((c:dataToVel@data)),c,w
  2496  0008FA  5007               	mullw	0Ah
  2497  0008FC  0D0A               	movff	prodl,(c:dataToVel@vel)
  2498  0008FE  CFF3 F008          	movff	prodh,(c:dataToVel@vel+1)
  2499  000902  CFF4 F009          	line	330
  2500                           	
  2501                           l1352:
  2502  000906                     ;main.c: 330:     if(10u >= vel)
  2503                           		movf	((c:dataToVel@vel+1)),c,w
  2504  000906  5009               	bnz	u591
  2505  000908  E107               	movlw	11
  2506  00090A  0E0B               	subwf	 ((c:dataToVel@vel)),c,w
  2507  00090C  5C08               	btfsc	status,0
  2508  00090E  B0D8               	goto	u591
  2509  000910  EF8C  F004         	goto	u590
  2510  000914  EF8E  F004         
  2511                           u591:
  2512  000918                     	goto	l1356
  2513  000918  EF94  F004         u590:
  2514  00091C                     	line	332
  2515                           	
  2516                           l1354:
  2517  00091C                     ;main.c: 331:     {;main.c: 332:         vel = 0;
  2518                           	movlw	high(0)
  2519  00091C  0E00               	movwf	((c:dataToVel@vel+1)),c
  2520  00091E  6E09               	movlw	low(0)
  2521  000920  0E00               	movwf	((c:dataToVel@vel)),c
  2522  000922  6E08               	goto	l1356
  2523  000924  EF94  F004         	line	333
  2524                           ;main.c: 333:     }
  2525                           	
  2526                           l232:
  2527  000928                     	line	335
  2528                           	
  2529                           l1356:
  2530  000928                     ;main.c: 335:     if(800u < vel)
  2531                           		movlw	33
  2532  000928  0E21               	subwf	 ((c:dataToVel@vel)),c,w
  2533  00092A  5C08               	movlw	3
  2534  00092C  0E03               	subwfb	((c:dataToVel@vel+1)),c,w
  2535  00092E  5809               	btfss	status,0
  2536  000930  A0D8               	goto	u601
  2537  000932  EF9D  F004         	goto	u600
  2538  000936  EF9F  F004         
  2539                           u601:
  2540  00093A                     	goto	l1360
  2541  00093A  EFA5  F004         u600:
  2542  00093E                     	line	337
  2543                           	
  2544                           l1358:
  2545  00093E                     ;main.c: 336:     {;main.c: 337:         vel = 800u;
  2546                           	movlw	high(0320h)
  2547  00093E  0E03               	movwf	((c:dataToVel@vel+1)),c
  2548  000940  6E09               	movlw	low(0320h)
  2549  000942  0E20               	movwf	((c:dataToVel@vel)),c
  2550  000944  6E08               	goto	l1360
  2551  000946  EFA5  F004         	line	338
  2552                           ;main.c: 338:     }
  2553                           	
  2554                           l233:
  2555  00094A                     	line	340
  2556                           	
  2557                           l1360:
  2558  00094A                     ;main.c: 340:     return vel;
  2559                           	movff	(c:dataToVel@vel),(c:?_dataToVel)
  2560  00094A  C008  F005         	movff	(c:dataToVel@vel+1),(c:?_dataToVel+1)
  2561  00094E  C009  F006         	goto	l234
  2562  000952  EFAB  F004         	
  2563                           l1362:
  2564  000956                     	line	341
  2565                           	
  2566                           l234:
  2567  000956                     	return	;funcret
  2568  000956  0012               	opt stack 0
  2569                           GLOBAL	__end_of_dataToVel
  2570                           	__end_of_dataToVel:
  2571  000958                     	signat	_dataToVel,4218
  2572                           	global	_calculatePWM
  2573                           
  2574 ;; *************** function _calculatePWM *****************
  2575 ;; Defined at:
  2576 ;;		line 176 in file "main.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  setpoint        1    wreg     char 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  setpoint        1    0[COMRAM] char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  4   30[COMRAM] long 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2590 ;;      Params:         4       0       0       0
  2591 ;;      Locals:         0       0       0       0
  2592 ;;      Temps:          8       0       0       0
  2593 ;;      Totals:        12       0       0       0
  2594 ;;Total ram usage:       12 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    2
  2597 ;; This function calls:
  2598 ;;		___aldiv
  2599 ;;		___lldiv
  2600 ;;		___lmul
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           psect	text13,class=CODE,space=0,reloc=2,group=0
  2606                           	line	176
  2607                           global __ptext13
  2608                           __ptext13:
  2609  000182                     psect	text13
  2610                           	file	"main.c"
  2611                           	line	176
  2612                           	global	__size_of_calculatePWM
  2613                           	__size_of_calculatePWM	equ	__end_of_calculatePWM-_calculatePWM
  2614  0000                     	
  2615                           _calculatePWM:
  2616  000182                     ;incstack = 0
  2617                           	opt	stack 28
  2618                           	line	179
  2619                           	
  2620                           l1364:
  2621  000182                     ;main.c: 176: int32_t calculatePWM(int8_t setpoint);main.c: 177: {;main.c: 179:     if(0
                                  == GPREG.STPCRL)
  2622                           	btfsc	((c:_GPREG)),c,5
  2623  000182  BA50               	goto	u611
  2624  000184  EFC6  F000         	goto	u610
  2625  000188  EFC8  F000         u611:
  2626  00018C                     	goto	l1376
  2627  00018C  EFEA  F000         u610:
  2628  000190                     	line	181
  2629                           	
  2630                           l1366:
  2631  000190                     ;main.c: 180:     {;main.c: 181:         vel = 0;
  2632                           	movlw	high(0)
  2633  000190  0E00               	movwf	((c:_vel+1)),c
  2634  000192  6E57               	movlw	low(0)
  2635  000194  0E00               	movwf	((c:_vel)),c
  2636  000196  6E56               	line	182
  2637                           	
  2638                           l1368:
  2639  000198                     ;main.c: 182:         vel = VELRH;
  2640                           	movff	(c:3945),(c:_vel)	;volatile
  2641  000198  CF69 F056          	clrf	((c:_vel+1)),c
  2642  00019C  6A57               	line	183
  2643                           	
  2644                           l1370:
  2645  00019E                     ;main.c: 183:         vel <<= 8;
  2646                           	movf	((c:_vel)),c,w
  2647  00019E  5056               	movwf	((c:_vel+1)),c
  2648  0001A0  6E57               	clrf	((c:_vel)),c
  2649  0001A2  6A56               	line	184
  2650                           	
  2651                           l1372:
  2652  0001A4                     ;main.c: 184:         vel |= VELRL;
  2653                           	movf	((c:3944)),c,w	;volatile
  2654  0001A4  5068               	iorwf	((c:_vel)),c
  2655  0001A6  1256               	line	186
  2656                           	
  2657                           l1374:
  2658  0001A8                     ;main.c: 186:         vel = 571420u/vel;
  2659                           	movlw	low(08B81Ch)
  2660  0001A8  0E1C               	movwf	((c:___lldiv@dividend)),c
  2661  0001AA  6E05               	movlw	high(08B81Ch)
  2662  0001AC  0EB8               	movwf	((c:___lldiv@dividend+1)),c
  2663  0001AE  6E06               	movlw	low highword(08B81Ch)
  2664  0001B0  0E08               	movwf	((c:___lldiv@dividend+2)),c
  2665  0001B2  6E07               	movlw	high highword(08B81Ch)
  2666  0001B4  0E00               	movwf	((c:___lldiv@dividend+3)),c
  2667  0001B6  6E08               	movff	(c:_vel),(c:___lldiv@divisor)
  2668  0001B8  C056  F009         	movff	(c:_vel+1),(c:___lldiv@divisor+1)
  2669  0001BC  C057  F00A         	clrf	((c:___lldiv@divisor+2)),c
  2670  0001C0  6A0B               	clrf	((c:___lldiv@divisor+3)),c
  2671  0001C2  6A0C               
  2672                           	call	___lldiv	;wreg free
  2673  0001C4  EC29  F003         	movff	0+?___lldiv,(c:_vel)
  2674  0001C8  C005  F056         	movff	1+?___lldiv,(c:_vel+1)
  2675  0001CC  C006  F057         	line	188
  2676                           ;main.c: 188:     } else {
  2677                           	goto	l1380
  2678  0001D0  EFF1  F000         	
  2679                           l193:
  2680  0001D4                     	line	189
  2681                           	
  2682                           l1376:
  2683  0001D4                     ;main.c: 189:         vel = 0;
  2684                           	movlw	high(0)
  2685  0001D4  0E00               	movwf	((c:_vel+1)),c
  2686  0001D6  6E57               	movlw	low(0)
  2687  0001D8  0E00               	movwf	((c:_vel)),c
  2688  0001DA  6E56               	line	190
  2689                           	
  2690                           l1378:
  2691  0001DC                     ;main.c: 190:         GPREG.STPCRL = 0;
  2692                           	bcf	((c:_GPREG)),c,5
  2693  0001DC  9A50               	goto	l1380
  2694  0001DE  EFF1  F000         	line	191
  2695                           ;main.c: 191:     }
  2696                           	
  2697                           l194:
  2698  0001E2                     	line	193
  2699                           	
  2700                           l1380:
  2701  0001E2                     ;main.c: 193:     error = (ref_vel - vel);
  2702                           	movff	(c:_vel),??_calculatePWM+0+0
  2703  0001E2  C056  F023         	movff	(c:_vel+1),??_calculatePWM+0+0+1
  2704  0001E6  C057  F024         	comf	(??_calculatePWM+0+0),c
  2705  0001EA  1E23               	comf	(??_calculatePWM+0+1),c
  2706  0001EC  1E24               	infsnz	(??_calculatePWM+0+0),c
  2707  0001EE  4A23               	incf	(??_calculatePWM+0+1),c
  2708  0001F0  2A24               	movf	((c:_ref_vel)),c,w
  2709  0001F2  5058               	addwf	(??_calculatePWM+0+0),c,w
  2710  0001F4  2423               	movwf	((c:_error)),c
  2711  0001F6  6E4C               	movf	((c:_ref_vel+1)),c,w
  2712  0001F8  5059               	addwfc	(??_calculatePWM+0+1),c,w
  2713  0001FA  2024               	movwf	1+((c:_error)),c
  2714  0001FC  6E4D               	line	194
  2715                           	
  2716                           l1382:
  2717  0001FE                     ;main.c: 194:     suma_error += (50*(int32_t)error)/1000;
  2718                           	movff	(c:_error),(c:___lmul@multiplier)
  2719  0001FE  C04C  F005         	movff	(c:_error+1),(c:___lmul@multiplier+1)
  2720  000202  C04D  F006         	movlw	0
  2721  000206  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2722  000208  BE06               	movlw	-1
  2723  00020A  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2724  00020C  6E07               	movwf	((c:___lmul@multiplier+3)),c
  2725  00020E  6E08               	movlw	low(032h)
  2726  000210  0E32               	movwf	((c:___lmul@multiplicand)),c
  2727  000212  6E09               	movlw	high(032h)
  2728  000214  0E00               	movwf	((c:___lmul@multiplicand+1)),c
  2729  000216  6E0A               	movlw	low highword(032h)
  2730  000218  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2731  00021A  6E0B               	movlw	high highword(032h)
  2732  00021C  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2733  00021E  6E0C               	call	___lmul	;wreg free
  2734  000220  EC43  F004         	movff	0+?___lmul,(c:___aldiv@dividend)
  2735  000224  C005  F011         	movff	1+?___lmul,(c:___aldiv@dividend+1)
  2736  000228  C006  F012         	movff	2+?___lmul,(c:___aldiv@dividend+2)
  2737  00022C  C007  F013         	movff	3+?___lmul,(c:___aldiv@dividend+3)
  2738  000230  C008  F014         	
  2739                           	movlw	low(03E8h)
  2740  000234  0EE8               	movwf	((c:___aldiv@divisor)),c
  2741  000236  6E15               	movlw	high(03E8h)
  2742  000238  0E03               	movwf	((c:___aldiv@divisor+1)),c
  2743  00023A  6E16               	movlw	low highword(03E8h)
  2744  00023C  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2745  00023E  6E17               	movlw	high highword(03E8h)
  2746  000240  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2747  000242  6E18               	call	___aldiv	;wreg free
  2748  000244  EC2B  F002         	movf	(0+?___aldiv),c,w
  2749  000248  5011               	addwf	((c:_suma_error)),c
  2750  00024A  2642               	movf	(1+?___aldiv),c,w
  2751  00024C  5012               	addwfc	((c:_suma_error+1)),c
  2752  00024E  2243               	movf	(2+?___aldiv),c,w
  2753  000250  5013               	addwfc	((c:_suma_error+2)),c
  2754  000252  2244               	movf	(3+?___aldiv),c,w
  2755  000254  5014               	addwfc	((c:_suma_error+3)),c
  2756  000256  2245               
  2757                           	line	195
  2758                           	
  2759                           l1384:
  2760  000258                     ;main.c: 195:     aceleracion = (int32_t)(error - error_ant)*20;
  2761                           	movff	(c:_error_ant),??_calculatePWM+0+0
  2762  000258  C04A  F023         	movff	(c:_error_ant+1),??_calculatePWM+0+0+1
  2763  00025C  C04B  F024         	comf	(??_calculatePWM+0+0),c
  2764  000260  1E23               	comf	(??_calculatePWM+0+1),c
  2765  000262  1E24               	infsnz	(??_calculatePWM+0+0),c
  2766  000264  4A23               	incf	(??_calculatePWM+0+1),c
  2767  000266  2A24               	movf	((c:_error)),c,w
  2768  000268  504C               	addwf	(??_calculatePWM+0+0),c
  2769  00026A  2623               	movf	((c:_error+1)),c,w
  2770  00026C  504D               	addwfc	(??_calculatePWM+0+1),c
  2771  00026E  2224               	movff	??_calculatePWM+0+0,(c:___lmul@multiplier)
  2772  000270  C023  F005         	movff	??_calculatePWM+0+1,(c:___lmul@multiplier+1)
  2773  000274  C024  F006         	movlw	0
  2774  000278  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2775  00027A  BE06               	movlw	-1
  2776  00027C  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2777  00027E  6E07               	movwf	((c:___lmul@multiplier+3)),c
  2778  000280  6E08               	movlw	low(014h)
  2779  000282  0E14               	movwf	((c:___lmul@multiplicand)),c
  2780  000284  6E09               	movlw	high(014h)
  2781  000286  0E00               	movwf	((c:___lmul@multiplicand+1)),c
  2782  000288  6E0A               	movlw	low highword(014h)
  2783  00028A  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2784  00028C  6E0B               	movlw	high highword(014h)
  2785  00028E  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2786  000290  6E0C               	call	___lmul	;wreg free
  2787  000292  EC43  F004         	movff	0+?___lmul,(c:_aceleracion)
  2788  000296  C005  F03A         	movff	1+?___lmul,(c:_aceleracion+1)
  2789  00029A  C006  F03B         	movff	2+?___lmul,(c:_aceleracion+2)
  2790  00029E  C007  F03C         	movff	3+?___lmul,(c:_aceleracion+3)
  2791  0002A2  C008  F03D         	
  2792                           	line	196
  2793                           	
  2794                           l1386:
  2795  0002A6                     ;main.c: 196:     volt = ((PID.Kp * (int32_t)error) + ((PID.Ki * suma_error)) + (PID.Kd*
                                 aceleracion));
  2796                           	movff	(c:_error),(c:___lmul@multiplier)
  2797  0002A6  C04C  F005         	movff	(c:_error+1),(c:___lmul@multiplier+1)
  2798  0002AA  C04D  F006         	movlw	0
  2799  0002AE  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2800  0002B0  BE06               	movlw	-1
  2801  0002B2  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2802  0002B4  6E07               	movwf	((c:___lmul@multiplier+3)),c
  2803  0002B6  6E08               	movff	(c:_PID),(c:___lmul@multiplicand)
  2804  0002B8  C02E  F009         	movff	(c:_PID+1),(c:___lmul@multiplicand+1)
  2805  0002BC  C02F  F00A         	movff	(c:_PID+2),(c:___lmul@multiplicand+2)
  2806  0002C0  C030  F00B         	movff	(c:_PID+3),(c:___lmul@multiplicand+3)
  2807  0002C4  C031  F00C         	call	___lmul	;wreg free
  2808  0002C8  EC43  F004         	movff	0+?___lmul,??_calculatePWM+0+0
  2809  0002CC  C005  F023         	movff	1+?___lmul,??_calculatePWM+0+0+1
  2810  0002D0  C006  F024         	movff	2+?___lmul,??_calculatePWM+0+0+2
  2811  0002D4  C007  F025         	movff	3+?___lmul,??_calculatePWM+0+0+3
  2812  0002D8  C008  F026         	
  2813                           	movff	0+((c:_PID)+04h),(c:___lmul@multiplier)
  2814  0002DC  C032  F005         	movff	1+((c:_PID)+04h),(c:___lmul@multiplier+1)
  2815  0002E0  C033  F006         	movff	2+((c:_PID)+04h),(c:___lmul@multiplier+2)
  2816  0002E4  C034  F007         	movff	3+((c:_PID)+04h),(c:___lmul@multiplier+3)
  2817  0002E8  C035  F008         	movff	(c:_suma_error),(c:___lmul@multiplicand)
  2818  0002EC  C042  F009         	movff	(c:_suma_error+1),(c:___lmul@multiplicand+1)
  2819  0002F0  C043  F00A         	movff	(c:_suma_error+2),(c:___lmul@multiplicand+2)
  2820  0002F4  C044  F00B         	movff	(c:_suma_error+3),(c:___lmul@multiplicand+3)
  2821  0002F8  C045  F00C         	call	___lmul	;wreg free
  2822  0002FC  EC43  F004         	movf	(0+?___lmul),c,w
  2823  000300  5005               	addwf	(??_calculatePWM+0+0),c,w
  2824  000302  2423               	movwf	(??_calculatePWM+4+0)&0ffh,c
  2825  000304  6E27               	movf	(1+?___lmul),c,w
  2826  000306  5006               	addwfc	(??_calculatePWM+0+1),c,w
  2827  000308  2024               	movwf	1+(??_calculatePWM+4+0)&0ffh,c
  2828  00030A  6E28               	
  2829                           	movf	(2+?___lmul),c,w
  2830  00030C  5007               	addwfc	(??_calculatePWM+0+2),c,w
  2831  00030E  2025               	movwf	2+(??_calculatePWM+4+0)&0ffh,c
  2832  000310  6E29               	
  2833                           	movf	(3+?___lmul),c,w
  2834  000312  5008               	addwfc	(??_calculatePWM+0+3),c,w
  2835  000314  2026               	movwf	3+(??_calculatePWM+4+0)&0ffh,c
  2836  000316  6E2A               	movff	0+((c:_PID)+08h),(c:___lmul@multiplier)
  2837  000318  C036  F005         	movff	1+((c:_PID)+08h),(c:___lmul@multiplier+1)
  2838  00031C  C037  F006         	movff	2+((c:_PID)+08h),(c:___lmul@multiplier+2)
  2839  000320  C038  F007         	movff	3+((c:_PID)+08h),(c:___lmul@multiplier+3)
  2840  000324  C039  F008         	movff	(c:_aceleracion),(c:___lmul@multiplicand)
  2841  000328  C03A  F009         	movff	(c:_aceleracion+1),(c:___lmul@multiplicand+1)
  2842  00032C  C03B  F00A         	movff	(c:_aceleracion+2),(c:___lmul@multiplicand+2)
  2843  000330  C03C  F00B         	movff	(c:_aceleracion+3),(c:___lmul@multiplicand+3)
  2844  000334  C03D  F00C         	call	___lmul	;wreg free
  2845  000338  EC43  F004         	movf	(0+?___lmul),c,w
  2846  00033C  5005               	addwf	(??_calculatePWM+4+0),c,w
  2847  00033E  2427               	movwf	((c:_volt)),c
  2848  000340  6E3E               	movf	(1+?___lmul),c,w
  2849  000342  5006               	addwfc	(??_calculatePWM+4+1),c,w
  2850  000344  2028               	movwf	1+((c:_volt)),c
  2851  000346  6E3F               	
  2852                           	movf	(2+?___lmul),c,w
  2853  000348  5007               	addwfc	(??_calculatePWM+4+2),c,w
  2854  00034A  2029               	movwf	2+((c:_volt)),c
  2855  00034C  6E40               	
  2856                           	movf	(3+?___lmul),c,w
  2857  00034E  5008               	addwfc	(??_calculatePWM+4+3),c,w
  2858  000350  202A               	movwf	3+((c:_volt)),c
  2859  000352  6E41               	line	197
  2860                           	
  2861                           l1388:
  2862  000354                     ;main.c: 197:     volt /= 10;
  2863                           	movff	(c:_volt),(c:___aldiv@dividend)
  2864  000354  C03E  F011         	movff	(c:_volt+1),(c:___aldiv@dividend+1)
  2865  000358  C03F  F012         	movff	(c:_volt+2),(c:___aldiv@dividend+2)
  2866  00035C  C040  F013         	movff	(c:_volt+3),(c:___aldiv@dividend+3)
  2867  000360  C041  F014         	movlw	low(0Ah)
  2868  000364  0E0A               	movwf	((c:___aldiv@divisor)),c
  2869  000366  6E15               	movlw	high(0Ah)
  2870  000368  0E00               	movwf	((c:___aldiv@divisor+1)),c
  2871  00036A  6E16               	movlw	low highword(0Ah)
  2872  00036C  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2873  00036E  6E17               	movlw	high highword(0Ah)
  2874  000370  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2875  000372  6E18               	call	___aldiv	;wreg free
  2876  000374  EC2B  F002         	movff	0+?___aldiv,(c:_volt)
  2877  000378  C011  F03E         	movff	1+?___aldiv,(c:_volt+1)
  2878  00037C  C012  F03F         	movff	2+?___aldiv,(c:_volt+2)
  2879  000380  C013  F040         	movff	3+?___aldiv,(c:_volt+3)
  2880  000384  C014  F041         	
  2881                           	line	198
  2882                           	
  2883                           l1390:
  2884  000388                     ;main.c: 198:     error_ant = error;
  2885                           	movff	(c:_error),(c:_error_ant)
  2886  000388  C04C  F04A         	movff	(c:_error+1),(c:_error_ant+1)
  2887  00038C  C04D  F04B         	line	201
  2888                           	
  2889                           l1392:
  2890  000390                     ;main.c: 201:     if(0 > volt)
  2891                           	btfsc	((c:_volt+3)),c,7
  2892  000390  BE41               	goto	u620
  2893  000392  EFCF  F001         	goto	u621
  2894  000396  EFCD  F001         
  2895                           u621:
  2896  00039A                     	goto	l1396
  2897  00039A  EFD9  F001         u620:
  2898  00039E                     	line	203
  2899                           	
  2900                           l1394:
  2901  00039E                     ;main.c: 202:     {;main.c: 203:         volt = 0;
  2902                           	movlw	low(0)
  2903  00039E  0E00               	movwf	((c:_volt)),c
  2904  0003A0  6E3E               	movlw	high(0)
  2905  0003A2  0E00               	movwf	((c:_volt+1)),c
  2906  0003A4  6E3F               	movlw	low highword(0)
  2907  0003A6  0E00               	movwf	((c:_volt+2)),c
  2908  0003A8  6E40               	movlw	high highword(0)
  2909  0003AA  0E00               	movwf	((c:_volt+3)),c
  2910  0003AC  6E41               	goto	l1396
  2911  0003AE  EFD9  F001         	line	204
  2912                           ;main.c: 204:     }
  2913                           	
  2914                           l195:
  2915  0003B2                     	line	206
  2916                           	
  2917                           l1396:
  2918  0003B2                     ;main.c: 206:     if(800 < volt)
  2919                           	btfsc	((c:_volt+3)),c,7
  2920  0003B2  BE41               	goto	u631
  2921  0003B4  EFE8  F001         	movf	((c:_volt+3)),c,w
  2922  0003B8  5041               	iorwf	((c:_volt+2)),c,w
  2923  0003BA  1040               	bnz	u630
  2924  0003BC  E10B               	movlw	33
  2925  0003BE  0E21               	subwf	 ((c:_volt)),c,w
  2926  0003C0  5C3E               	movlw	3
  2927  0003C2  0E03               	subwfb	((c:_volt+1)),c,w
  2928  0003C4  583F               	btfss	status,0
  2929  0003C6  A0D8               	goto	u631
  2930  0003C8  EFE8  F001         	goto	u630
  2931  0003CC  EFEA  F001         
  2932                           u631:
  2933  0003D0                     	goto	l1400
  2934  0003D0  EFF4  F001         u630:
  2935  0003D4                     	line	208
  2936                           	
  2937                           l1398:
  2938  0003D4                     ;main.c: 207:     {;main.c: 208:         volt = 800;
  2939                           	movlw	low(0320h)
  2940  0003D4  0E20               	movwf	((c:_volt)),c
  2941  0003D6  6E3E               	movlw	high(0320h)
  2942  0003D8  0E03               	movwf	((c:_volt+1)),c
  2943  0003DA  6E3F               	movlw	low highword(0320h)
  2944  0003DC  0E00               	movwf	((c:_volt+2)),c
  2945  0003DE  6E40               	movlw	high highword(0320h)
  2946  0003E0  0E00               	movwf	((c:_volt+3)),c
  2947  0003E2  6E41               	goto	l1400
  2948  0003E4  EFF4  F001         	line	209
  2949                           ;main.c: 209:     }
  2950                           	
  2951                           l196:
  2952  0003E8                     	line	211
  2953                           	
  2954                           l1400:
  2955  0003E8                     ;main.c: 211:     volt = (volt*1022u)/800;
  2956                           	movff	(c:_volt),(c:___lmul@multiplier)
  2957  0003E8  C03E  F005         	movff	(c:_volt+1),(c:___lmul@multiplier+1)
  2958  0003EC  C03F  F006         	movff	(c:_volt+2),(c:___lmul@multiplier+2)
  2959  0003F0  C040  F007         	movff	(c:_volt+3),(c:___lmul@multiplier+3)
  2960  0003F4  C041  F008         	movlw	low(03FEh)
  2961  0003F8  0EFE               	movwf	((c:___lmul@multiplicand)),c
  2962  0003FA  6E09               	movlw	high(03FEh)
  2963  0003FC  0E03               	movwf	((c:___lmul@multiplicand+1)),c
  2964  0003FE  6E0A               	movlw	low highword(03FEh)
  2965  000400  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2966  000402  6E0B               	movlw	high highword(03FEh)
  2967  000404  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2968  000406  6E0C               	call	___lmul	;wreg free
  2969  000408  EC43  F004         	movff	0+?___lmul,(c:___aldiv@dividend)
  2970  00040C  C005  F011         	movff	1+?___lmul,(c:___aldiv@dividend+1)
  2971  000410  C006  F012         	movff	2+?___lmul,(c:___aldiv@dividend+2)
  2972  000414  C007  F013         	movff	3+?___lmul,(c:___aldiv@dividend+3)
  2973  000418  C008  F014         	
  2974                           	movlw	low(0320h)
  2975  00041C  0E20               	movwf	((c:___aldiv@divisor)),c
  2976  00041E  6E15               	movlw	high(0320h)
  2977  000420  0E03               	movwf	((c:___aldiv@divisor+1)),c
  2978  000422  6E16               	movlw	low highword(0320h)
  2979  000424  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2980  000426  6E17               	movlw	high highword(0320h)
  2981  000428  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2982  00042A  6E18               	call	___aldiv	;wreg free
  2983  00042C  EC2B  F002         	movff	0+?___aldiv,(c:_volt)
  2984  000430  C011  F03E         	movff	1+?___aldiv,(c:_volt+1)
  2985  000434  C012  F03F         	movff	2+?___aldiv,(c:_volt+2)
  2986  000438  C013  F040         	movff	3+?___aldiv,(c:_volt+3)
  2987  00043C  C014  F041         	
  2988                           	line	214
  2989                           	
  2990                           l1402:
  2991  000440                     ;main.c: 214:     return volt;
  2992                           	movff	(c:_volt),(c:?_calculatePWM)
  2993  000440  C03E  F01F         	movff	(c:_volt+1),(c:?_calculatePWM+1)
  2994  000444  C03F  F020         	movff	(c:_volt+2),(c:?_calculatePWM+2)
  2995  000448  C040  F021         	movff	(c:_volt+3),(c:?_calculatePWM+3)
  2996  00044C  C041  F022         	goto	l197
  2997  000450  EF2A  F002         	
  2998                           l1404:
  2999  000454                     	line	215
  3000                           	
  3001                           l197:
  3002  000454                     	return	;funcret
  3003  000454  0012               	opt stack 0
  3004                           GLOBAL	__end_of_calculatePWM
  3005                           	__end_of_calculatePWM:
  3006  000456                     	signat	_calculatePWM,4220
  3007                           	global	___lmul
  3008                           
  3009 ;; *************** function ___lmul *****************
  3010 ;; Defined at:
  3011 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  multiplier      4    4[COMRAM] unsigned long 
  3014 ;;  multiplicand    4    8[COMRAM] unsigned long 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  product         4   12[COMRAM] unsigned long 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  4    4[COMRAM] unsigned long 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3026 ;;      Params:         8       0       0       0
  3027 ;;      Locals:         4       0       0       0
  3028 ;;      Temps:          0       0       0       0
  3029 ;;      Totals:        12       0       0       0
  3030 ;;Total ram usage:       12 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_calculatePWM
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           psect	text14,class=CODE,space=0,reloc=2,group=1
  3040                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  3041                           	line	15
  3042                           global __ptext14
  3043                           __ptext14:
  3044  000886                     psect	text14
  3045                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  3046                           	line	15
  3047                           	global	__size_of___lmul
  3048                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  3049  0000                     	
  3050                           ___lmul:
  3051  000886                     ;incstack = 0
  3052                           	opt	stack 28
  3053                           	line	119
  3054                           	
  3055                           l1228:
  3056  000886                     	movlw	low(0)
  3057  000886  0E00               	movwf	((c:___lmul@product)),c
  3058  000888  6E0D               	movlw	high(0)
  3059  00088A  0E00               	movwf	((c:___lmul@product+1)),c
  3060  00088C  6E0E               	movlw	low highword(0)
  3061  00088E  0E00               	movwf	((c:___lmul@product+2)),c
  3062  000890  6E0F               	movlw	high highword(0)
  3063  000892  0E00               	movwf	((c:___lmul@product+3)),c
  3064  000894  6E10               	goto	l1230
  3065  000896  EF4D  F004         	line	120
  3066                           	
  3067                           l246:
  3068  00089A                     	line	121
  3069                           	
  3070                           l1230:
  3071  00089A                     	
  3072                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  3073  00089A  A005               	goto	u421
  3074  00089C  EF52  F004         	goto	u420
  3075  0008A0  EF54  F004         u421:
  3076  0008A4                     	goto	l1234
  3077  0008A4  EF5E  F004         u420:
  3078  0008A8                     	line	122
  3079                           	
  3080                           l1232:
  3081  0008A8                     	movf	((c:___lmul@multiplicand)),c,w
  3082  0008A8  5009               	addwf	((c:___lmul@product)),c
  3083  0008AA  260D               	movf	((c:___lmul@multiplicand+1)),c,w
  3084  0008AC  500A               	addwfc	((c:___lmul@product+1)),c
  3085  0008AE  220E               	movf	((c:___lmul@multiplicand+2)),c,w
  3086  0008B0  500B               	addwfc	((c:___lmul@product+2)),c
  3087  0008B2  220F               	movf	((c:___lmul@multiplicand+3)),c,w
  3088  0008B4  500C               	addwfc	((c:___lmul@product+3)),c
  3089  0008B6  2210               	goto	l1234
  3090  0008B8  EF5E  F004         	
  3091                           l247:
  3092  0008BC                     	line	123
  3093                           	
  3094                           l1234:
  3095  0008BC                     	bcf	status,0
  3096  0008BC  90D8               	rlcf	((c:___lmul@multiplicand)),c
  3097  0008BE  3609               	rlcf	((c:___lmul@multiplicand+1)),c
  3098  0008C0  360A               	rlcf	((c:___lmul@multiplicand+2)),c
  3099  0008C2  360B               	rlcf	((c:___lmul@multiplicand+3)),c
  3100  0008C4  360C               	line	124
  3101                           	
  3102                           l1236:
  3103  0008C6                     	bcf	status,0
  3104  0008C6  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  3105  0008C8  3208               	rrcf	((c:___lmul@multiplier+2)),c
  3106  0008CA  3207               	rrcf	((c:___lmul@multiplier+1)),c
  3107  0008CC  3206               	rrcf	((c:___lmul@multiplier)),c
  3108  0008CE  3205               	line	125
  3109                           	movf	((c:___lmul@multiplier)),c,w
  3110  0008D0  5005               iorwf	((c:___lmul@multiplier+1)),c,w
  3111  0008D2  1006               iorwf	((c:___lmul@multiplier+2)),c,w
  3112  0008D4  1007               iorwf	((c:___lmul@multiplier+3)),c,w
  3113  0008D6  1008               	btfss	status,2
  3114  0008D8  A4D8               	goto	u431
  3115  0008DA  EF71  F004         	goto	u430
  3116  0008DE  EF73  F004         
  3117                           u431:
  3118  0008E2                     	goto	l1230
  3119  0008E2  EF4D  F004         u430:
  3120  0008E6                     	
  3121                           l248:
  3122  0008E6                     	line	128
  3123                           	movff	(c:___lmul@product),(c:?___lmul)
  3124  0008E6  C00D  F005         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  3125  0008EA  C00E  F006         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  3126  0008EE  C00F  F007         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  3127  0008F2  C010  F008         	line	129
  3128                           	
  3129                           l249:
  3130  0008F6                     	return	;funcret
  3131  0008F6  0012               	opt stack 0
  3132                           GLOBAL	__end_of___lmul
  3133                           	__end_of___lmul:
  3134  0008F8                     	signat	___lmul,8316
  3135                           	global	___lldiv
  3136                           
  3137 ;; *************** function ___lldiv *****************
  3138 ;; Defined at:
  3139 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  dividend        4    4[COMRAM] unsigned long 
  3142 ;;  divisor         4    8[COMRAM] unsigned long 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  quotient        4   12[COMRAM] unsigned long 
  3145 ;;  counter         1   16[COMRAM] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  4    4[COMRAM] unsigned long 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3155 ;;      Params:         8       0       0       0
  3156 ;;      Locals:         5       0       0       0
  3157 ;;      Temps:          0       0       0       0
  3158 ;;      Totals:        13       0       0       0
  3159 ;;Total ram usage:       13 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_calculatePWM
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           psect	text15,class=CODE,space=0,reloc=2,group=1
  3169                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  3170                           	line	7
  3171                           global __ptext15
  3172                           __ptext15:
  3173  000652                     psect	text15
  3174                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  3175                           	line	7
  3176                           	global	__size_of___lldiv
  3177                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  3178  0000                     	
  3179                           ___lldiv:
  3180  000652                     ;incstack = 0
  3181                           	opt	stack 28
  3182                           	line	13
  3183                           	
  3184                           l1238:
  3185  000652                     	movlw	low(0)
  3186  000652  0E00               	movwf	((c:___lldiv@quotient)),c
  3187  000654  6E0D               	movlw	high(0)
  3188  000656  0E00               	movwf	((c:___lldiv@quotient+1)),c
  3189  000658  6E0E               	movlw	low highword(0)
  3190  00065A  0E00               	movwf	((c:___lldiv@quotient+2)),c
  3191  00065C  6E0F               	movlw	high highword(0)
  3192  00065E  0E00               	movwf	((c:___lldiv@quotient+3)),c
  3193  000660  6E10               	line	14
  3194                           	
  3195                           l1240:
  3196  000662                     	movf	((c:___lldiv@divisor)),c,w
  3197  000662  5009               iorwf	((c:___lldiv@divisor+1)),c,w
  3198  000664  100A               iorwf	((c:___lldiv@divisor+2)),c,w
  3199  000666  100B               iorwf	((c:___lldiv@divisor+3)),c,w
  3200  000668  100C               	btfsc	status,2
  3201  00066A  B4D8               	goto	u441
  3202  00066C  EF3A  F003         	goto	u440
  3203  000670  EF3C  F003         
  3204                           u441:
  3205  000674                     	goto	l264
  3206  000674  EF7C  F003         u440:
  3207  000678                     	line	15
  3208                           	
  3209                           l1242:
  3210  000678                     	movlw	low(01h)
  3211  000678  0E01               	movwf	((c:___lldiv@counter)),c
  3212  00067A  6E11               	line	16
  3213                           	goto	l1246
  3214  00067C  EF48  F003         	
  3215                           l266:
  3216  000680                     	line	17
  3217                           	
  3218                           l1244:
  3219  000680                     	bcf	status,0
  3220  000680  90D8               	rlcf	((c:___lldiv@divisor)),c
  3221  000682  3609               	rlcf	((c:___lldiv@divisor+1)),c
  3222  000684  360A               	rlcf	((c:___lldiv@divisor+2)),c
  3223  000686  360B               	rlcf	((c:___lldiv@divisor+3)),c
  3224  000688  360C               	line	18
  3225                           	incf	((c:___lldiv@counter)),c
  3226  00068A  2A11               	goto	l1246
  3227  00068C  EF48  F003         	line	19
  3228                           	
  3229                           l265:
  3230  000690                     	line	16
  3231                           	
  3232                           l1246:
  3233  000690                     	
  3234                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
  3235  000690  AE0C               	goto	u451
  3236  000692  EF4D  F003         	goto	u450
  3237  000696  EF4F  F003         u451:
  3238  00069A                     	goto	l1244
  3239  00069A  EF40  F003         u450:
  3240  00069E                     	goto	l1248
  3241  00069E  EF53  F003         	
  3242                           l267:
  3243  0006A2                     	goto	l1248
  3244  0006A2  EF53  F003         	line	20
  3245                           	
  3246                           l268:
  3247  0006A6                     	line	21
  3248                           	
  3249                           l1248:
  3250  0006A6                     	bcf	status,0
  3251  0006A6  90D8               	rlcf	((c:___lldiv@quotient)),c
  3252  0006A8  360D               	rlcf	((c:___lldiv@quotient+1)),c
  3253  0006AA  360E               	rlcf	((c:___lldiv@quotient+2)),c
  3254  0006AC  360F               	rlcf	((c:___lldiv@quotient+3)),c
  3255  0006AE  3610               	line	22
  3256                           	
  3257                           l1250:
  3258  0006B0                     		movf	((c:___lldiv@divisor)),c,w
  3259  0006B0  5009               	subwf	((c:___lldiv@dividend)),c,w
  3260  0006B2  5C05               	movf	((c:___lldiv@divisor+1)),c,w
  3261  0006B4  500A               	subwfb	((c:___lldiv@dividend+1)),c,w
  3262  0006B6  5806               	movf	((c:___lldiv@divisor+2)),c,w
  3263  0006B8  500B               	subwfb	((c:___lldiv@dividend+2)),c,w
  3264  0006BA  5807               	movf	((c:___lldiv@divisor+3)),c,w
  3265  0006BC  500C               	subwfb	((c:___lldiv@dividend+3)),c,w
  3266  0006BE  5808               	btfss	status,0
  3267  0006C0  A0D8               	goto	u461
  3268  0006C2  EF65  F003         	goto	u460
  3269  0006C6  EF67  F003         
  3270                           u461:
  3271  0006CA                     	goto	l1256
  3272  0006CA  EF72  F003         u460:
  3273  0006CE                     	line	23
  3274                           	
  3275                           l1252:
  3276  0006CE                     	movf	((c:___lldiv@divisor)),c,w
  3277  0006CE  5009               	subwf	((c:___lldiv@dividend)),c
  3278  0006D0  5E05               	movf	((c:___lldiv@divisor+1)),c,w
  3279  0006D2  500A               	subwfb	((c:___lldiv@dividend+1)),c
  3280  0006D4  5A06               	movf	((c:___lldiv@divisor+2)),c,w
  3281  0006D6  500B               	subwfb	((c:___lldiv@dividend+2)),c
  3282  0006D8  5A07               	movf	((c:___lldiv@divisor+3)),c,w
  3283  0006DA  500C               	subwfb	((c:___lldiv@dividend+3)),c
  3284  0006DC  5A08               	line	24
  3285                           	
  3286                           l1254:
  3287  0006DE                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
  3288  0006DE  800D               	goto	l1256
  3289  0006E0  EF72  F003         	line	25
  3290                           	
  3291                           l269:
  3292  0006E4                     	line	26
  3293                           	
  3294                           l1256:
  3295  0006E4                     	bcf	status,0
  3296  0006E4  90D8               	rrcf	((c:___lldiv@divisor+3)),c
  3297  0006E6  320C               	rrcf	((c:___lldiv@divisor+2)),c
  3298  0006E8  320B               	rrcf	((c:___lldiv@divisor+1)),c
  3299  0006EA  320A               	rrcf	((c:___lldiv@divisor)),c
  3300  0006EC  3209               	line	27
  3301                           	
  3302                           l1258:
  3303  0006EE                     	decfsz	((c:___lldiv@counter)),c
  3304  0006EE  2E11               	
  3305                           	goto	l1248
  3306  0006F0  EF53  F003         	goto	l264
  3307  0006F4  EF7C  F003         	
  3308                           l270:
  3309  0006F8                     	line	28
  3310                           	
  3311                           l264:
  3312  0006F8                     	line	29
  3313                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
  3314  0006F8  C00D  F005         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
  3315  0006FC  C00E  F006         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
  3316  000700  C00F  F007         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
  3317  000704  C010  F008         	line	30
  3318                           	
  3319                           l271:
  3320  000708                     	return	;funcret
  3321  000708  0012               	opt stack 0
  3322                           GLOBAL	__end_of___lldiv
  3323                           	__end_of___lldiv:
  3324  00070A                     	signat	___lldiv,8316
  3325                           	global	___aldiv
  3326                           
  3327 ;; *************** function ___aldiv *****************
  3328 ;; Defined at:
  3329 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  dividend        4   16[COMRAM] long 
  3332 ;;  divisor         4   20[COMRAM] long 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  quotient        4   26[COMRAM] long 
  3335 ;;  sign            1   25[COMRAM] unsigned char 
  3336 ;;  counter         1   24[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  4   16[COMRAM] long 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3346 ;;      Params:         8       0       0       0
  3347 ;;      Locals:         6       0       0       0
  3348 ;;      Temps:          0       0       0       0
  3349 ;;      Totals:        14       0       0       0
  3350 ;;Total ram usage:       14 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_calculatePWM
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           psect	text16,class=CODE,space=0,reloc=2,group=1
  3360                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3361                           	line	7
  3362                           global __ptext16
  3363                           __ptext16:
  3364  000456                     psect	text16
  3365                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3366                           	line	7
  3367                           	global	__size_of___aldiv
  3368                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  3369  0000                     	
  3370                           ___aldiv:
  3371  000456                     ;incstack = 0
  3372                           	opt	stack 28
  3373                           	line	13
  3374                           	
  3375                           l1260:
  3376  000456                     	movlw	low(0)
  3377  000456  0E00               	movwf	((c:___aldiv@sign)),c
  3378  000458  6E1A               	line	14
  3379                           	
  3380                           l1262:
  3381  00045A                     	btfsc	((c:___aldiv@divisor+3)),c,7
  3382  00045A  BE18               	goto	u470
  3383  00045C  EF34  F002         	goto	u471
  3384  000460  EF32  F002         
  3385                           u471:
  3386  000464                     	goto	l1268
  3387  000464  EF40  F002         u470:
  3388  000468                     	line	15
  3389                           	
  3390                           l1264:
  3391  000468                     	comf	((c:___aldiv@divisor+3)),c
  3392  000468  1E18               	comf	((c:___aldiv@divisor+2)),c
  3393  00046A  1E17               	comf	((c:___aldiv@divisor+1)),c
  3394  00046C  1E16               	negf	((c:___aldiv@divisor)),c
  3395  00046E  6C15               	movlw	0
  3396  000470  0E00               	addwfc	((c:___aldiv@divisor+1)),c
  3397  000472  2216               	addwfc	((c:___aldiv@divisor+2)),c
  3398  000474  2217               	addwfc	((c:___aldiv@divisor+3)),c
  3399  000476  2218               	line	16
  3400                           	
  3401                           l1266:
  3402  000478                     	movlw	low(01h)
  3403  000478  0E01               	movwf	((c:___aldiv@sign)),c
  3404  00047A  6E1A               	goto	l1268
  3405  00047C  EF40  F002         	line	17
  3406                           	
  3407                           l306:
  3408  000480                     	line	18
  3409                           	
  3410                           l1268:
  3411  000480                     	btfsc	((c:___aldiv@dividend+3)),c,7
  3412  000480  BE14               	goto	u480
  3413  000482  EF47  F002         	goto	u481
  3414  000486  EF45  F002         
  3415                           u481:
  3416  00048A                     	goto	l1274
  3417  00048A  EF53  F002         u480:
  3418  00048E                     	line	19
  3419                           	
  3420                           l1270:
  3421  00048E                     	comf	((c:___aldiv@dividend+3)),c
  3422  00048E  1E14               	comf	((c:___aldiv@dividend+2)),c
  3423  000490  1E13               	comf	((c:___aldiv@dividend+1)),c
  3424  000492  1E12               	negf	((c:___aldiv@dividend)),c
  3425  000494  6C11               	movlw	0
  3426  000496  0E00               	addwfc	((c:___aldiv@dividend+1)),c
  3427  000498  2212               	addwfc	((c:___aldiv@dividend+2)),c
  3428  00049A  2213               	addwfc	((c:___aldiv@dividend+3)),c
  3429  00049C  2214               	line	20
  3430                           	
  3431                           l1272:
  3432  00049E                     	movlw	(01h)&0ffh
  3433  00049E  0E01               	xorwf	((c:___aldiv@sign)),c
  3434  0004A0  1A1A               	goto	l1274
  3435  0004A2  EF53  F002         	line	21
  3436                           	
  3437                           l307:
  3438  0004A6                     	line	22
  3439                           	
  3440                           l1274:
  3441  0004A6                     	movlw	low(0)
  3442  0004A6  0E00               	movwf	((c:___aldiv@quotient)),c
  3443  0004A8  6E1B               	movlw	high(0)
  3444  0004AA  0E00               	movwf	((c:___aldiv@quotient+1)),c
  3445  0004AC  6E1C               	movlw	low highword(0)
  3446  0004AE  0E00               	movwf	((c:___aldiv@quotient+2)),c
  3447  0004B0  6E1D               	movlw	high highword(0)
  3448  0004B2  0E00               	movwf	((c:___aldiv@quotient+3)),c
  3449  0004B4  6E1E               	line	23
  3450                           	
  3451                           l1276:
  3452  0004B6                     	movf	((c:___aldiv@divisor)),c,w
  3453  0004B6  5015               iorwf	((c:___aldiv@divisor+1)),c,w
  3454  0004B8  1016               iorwf	((c:___aldiv@divisor+2)),c,w
  3455  0004BA  1017               iorwf	((c:___aldiv@divisor+3)),c,w
  3456  0004BC  1018               	btfsc	status,2
  3457  0004BE  B4D8               	goto	u491
  3458  0004C0  EF64  F002         	goto	u490
  3459  0004C4  EF66  F002         
  3460                           u491:
  3461  0004C8                     	goto	l1296
  3462  0004C8  EFA8  F002         u490:
  3463  0004CC                     	line	24
  3464                           	
  3465                           l1278:
  3466  0004CC                     	movlw	low(01h)
  3467  0004CC  0E01               	movwf	((c:___aldiv@counter)),c
  3468  0004CE  6E19               	line	25
  3469                           	goto	l1282
  3470  0004D0  EF72  F002         	
  3471                           l310:
  3472  0004D4                     	line	26
  3473                           	
  3474                           l1280:
  3475  0004D4                     	bcf	status,0
  3476  0004D4  90D8               	rlcf	((c:___aldiv@divisor)),c
  3477  0004D6  3615               	rlcf	((c:___aldiv@divisor+1)),c
  3478  0004D8  3616               	rlcf	((c:___aldiv@divisor+2)),c
  3479  0004DA  3617               	rlcf	((c:___aldiv@divisor+3)),c
  3480  0004DC  3618               	line	27
  3481                           	incf	((c:___aldiv@counter)),c
  3482  0004DE  2A19               	goto	l1282
  3483  0004E0  EF72  F002         	line	28
  3484                           	
  3485                           l309:
  3486  0004E4                     	line	25
  3487                           	
  3488                           l1282:
  3489  0004E4                     	
  3490                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
  3491  0004E4  AE18               	goto	u501
  3492  0004E6  EF77  F002         	goto	u500
  3493  0004EA  EF79  F002         u501:
  3494  0004EE                     	goto	l1280
  3495  0004EE  EF6A  F002         u500:
  3496  0004F2                     	goto	l1284
  3497  0004F2  EF7D  F002         	
  3498                           l311:
  3499  0004F6                     	goto	l1284
  3500  0004F6  EF7D  F002         	line	29
  3501                           	
  3502                           l312:
  3503  0004FA                     	line	30
  3504                           	
  3505                           l1284:
  3506  0004FA                     	bcf	status,0
  3507  0004FA  90D8               	rlcf	((c:___aldiv@quotient)),c
  3508  0004FC  361B               	rlcf	((c:___aldiv@quotient+1)),c
  3509  0004FE  361C               	rlcf	((c:___aldiv@quotient+2)),c
  3510  000500  361D               	rlcf	((c:___aldiv@quotient+3)),c
  3511  000502  361E               	line	31
  3512                           	
  3513                           l1286:
  3514  000504                     		movf	((c:___aldiv@divisor)),c,w
  3515  000504  5015               	subwf	((c:___aldiv@dividend)),c,w
  3516  000506  5C11               	movf	((c:___aldiv@divisor+1)),c,w
  3517  000508  5016               	subwfb	((c:___aldiv@dividend+1)),c,w
  3518  00050A  5812               	movf	((c:___aldiv@divisor+2)),c,w
  3519  00050C  5017               	subwfb	((c:___aldiv@dividend+2)),c,w
  3520  00050E  5813               	movf	((c:___aldiv@divisor+3)),c,w
  3521  000510  5018               	subwfb	((c:___aldiv@dividend+3)),c,w
  3522  000512  5814               	btfss	status,0
  3523  000514  A0D8               	goto	u511
  3524  000516  EF8F  F002         	goto	u510
  3525  00051A  EF91  F002         
  3526                           u511:
  3527  00051E                     	goto	l1292
  3528  00051E  EF9C  F002         u510:
  3529  000522                     	line	32
  3530                           	
  3531                           l1288:
  3532  000522                     	movf	((c:___aldiv@divisor)),c,w
  3533  000522  5015               	subwf	((c:___aldiv@dividend)),c
  3534  000524  5E11               	movf	((c:___aldiv@divisor+1)),c,w
  3535  000526  5016               	subwfb	((c:___aldiv@dividend+1)),c
  3536  000528  5A12               	movf	((c:___aldiv@divisor+2)),c,w
  3537  00052A  5017               	subwfb	((c:___aldiv@dividend+2)),c
  3538  00052C  5A13               	movf	((c:___aldiv@divisor+3)),c,w
  3539  00052E  5018               	subwfb	((c:___aldiv@dividend+3)),c
  3540  000530  5A14               	line	33
  3541                           	
  3542                           l1290:
  3543  000532                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
  3544  000532  801B               	goto	l1292
  3545  000534  EF9C  F002         	line	34
  3546                           	
  3547                           l313:
  3548  000538                     	line	35
  3549                           	
  3550                           l1292:
  3551  000538                     	bcf	status,0
  3552  000538  90D8               	rrcf	((c:___aldiv@divisor+3)),c
  3553  00053A  3218               	rrcf	((c:___aldiv@divisor+2)),c
  3554  00053C  3217               	rrcf	((c:___aldiv@divisor+1)),c
  3555  00053E  3216               	rrcf	((c:___aldiv@divisor)),c
  3556  000540  3215               	line	36
  3557                           	
  3558                           l1294:
  3559  000542                     	decfsz	((c:___aldiv@counter)),c
  3560  000542  2E19               	
  3561                           	goto	l1284
  3562  000544  EF7D  F002         	goto	l1296
  3563  000548  EFA8  F002         	
  3564                           l314:
  3565  00054C                     	goto	l1296
  3566  00054C  EFA8  F002         	line	37
  3567                           	
  3568                           l308:
  3569  000550                     	line	38
  3570                           	
  3571                           l1296:
  3572  000550                     	movf	((c:___aldiv@sign)),c,w
  3573  000550  501A               	btfsc	status,2
  3574  000552  B4D8               	goto	u521
  3575  000554  EFAE  F002         	goto	u520
  3576  000558  EFB0  F002         u521:
  3577  00055C                     	goto	l1300
  3578  00055C  EFBA  F002         u520:
  3579  000560                     	line	39
  3580                           	
  3581                           l1298:
  3582  000560                     	comf	((c:___aldiv@quotient+3)),c
  3583  000560  1E1E               	comf	((c:___aldiv@quotient+2)),c
  3584  000562  1E1D               	comf	((c:___aldiv@quotient+1)),c
  3585  000564  1E1C               	negf	((c:___aldiv@quotient)),c
  3586  000566  6C1B               	movlw	0
  3587  000568  0E00               	addwfc	((c:___aldiv@quotient+1)),c
  3588  00056A  221C               	addwfc	((c:___aldiv@quotient+2)),c
  3589  00056C  221D               	addwfc	((c:___aldiv@quotient+3)),c
  3590  00056E  221E               	goto	l1300
  3591  000570  EFBA  F002         	
  3592                           l315:
  3593  000574                     	line	40
  3594                           	
  3595                           l1300:
  3596  000574                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
  3597  000574  C01B  F011         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
  3598  000578  C01C  F012         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
  3599  00057C  C01D  F013         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
  3600  000580  C01E  F014         	goto	l316
  3601  000584  EFC4  F002         	
  3602                           l1302:
  3603  000588                     	line	41
  3604                           	
  3605                           l316:
  3606  000588                     	return	;funcret
  3607  000588  0012               	opt stack 0
  3608                           GLOBAL	__end_of___aldiv
  3609                           	__end_of___aldiv:
  3610  00058A                     	signat	___aldiv,8316
  3611                           	global	_ISR_high
  3612                           
  3613 ;; *************** function _ISR_high *****************
  3614 ;; Defined at:
  3615 ;;		line 64 in file "main.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;		None
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3629 ;;      Params:         0       0       0       0
  3630 ;;      Locals:         0       0       0       0
  3631 ;;      Temps:          4       0       0       0
  3632 ;;      Totals:         4       0       0       0
  3633 ;;Total ram usage:        4 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		Interrupt level 2
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           psect	intcode,class=CODE,space=0,reloc=2
  3642                           global __pintcode
  3643                           __pintcode:
  3644  000008                     psect	intcode
  3645                           	file	"main.c"
  3646                           	line	64
  3647                           	global	__size_of_ISR_high
  3648                           	__size_of_ISR_high	equ	__end_of_ISR_high-_ISR_high
  3649  0000                     	
  3650                           _ISR_high:
  3651  000008                     ;incstack = 0
  3652                           	opt	stack 28
  3653                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  3654  000008  825A               	movff	fsr2l+0,??_ISR_high+2
  3655  00000A  CFD9 F003          	movff	fsr2h+0,??_ISR_high+3
  3656  00000E  CFDA F004          	line	67
  3657                           	
  3658                           i2l1144:
  3659  000012                     ;main.c: 67:     if(SSPIE == 1 && SSPIF == 1)
  3660                           	btfss	c:(31979/8),(31979)&7	;volatile
  3661  000012  A69D               	goto	i2u24_41
  3662  000014  EF0E  F000         	goto	i2u24_40
  3663  000018  EF10  F000         i2u24_41:
  3664  00001C                     	goto	i2l167
  3665  00001C  EF55  F000         i2u24_40:
  3666  000020                     	
  3667                           i2l1146:
  3668  000020                     	btfss	c:(31987/8),(31987)&7	;volatile
  3669  000020  A69E               	goto	i2u25_41
  3670  000022  EF15  F000         	goto	i2u25_40
  3671  000026  EF17  F000         i2u25_41:
  3672  00002A                     	goto	i2l167
  3673  00002A  EF55  F000         i2u25_40:
  3674  00002E                     	line	70
  3675                           	
  3676                           i2l1148:
  3677  00002E                     ;main.c: 68:     {;main.c: 70:         if(SSPOV == 1 || WCOL == 1)
  3678                           	btfsc	c:(32310/8),(32310)&7	;volatile
  3679  00002E  BCC6               	goto	i2u26_41
  3680  000030  EF1C  F000         	goto	i2u26_40
  3681  000034  EF1E  F000         i2u26_41:
  3682  000038                     	goto	i2l170
  3683  000038  EF25  F000         i2u26_40:
  3684  00003C                     	
  3685                           i2l1150:
  3686  00003C                     	btfss	c:(32311/8),(32311)&7	;volatile
  3687  00003C  AEC6               	goto	i2u27_41
  3688  00003E  EF23  F000         	goto	i2u27_40
  3689  000042  EF25  F000         i2u27_41:
  3690  000046                     	goto	i2l1152
  3691  000046  EF2C  F000         i2u27_40:
  3692  00004A                     	
  3693                           i2l170:
  3694  00004A                     	line	72
  3695                           ;main.c: 71:         {;main.c: 72:             i2cData = SSPBUF;
  3696                           	movff	(c:4041),(c:_i2cData)	;volatile
  3697  00004A  CFC9 F04E          	line	73
  3698                           ;main.c: 73:             SSPOV = 0;
  3699                           	bcf	c:(32310/8),(32310)&7	;volatile
  3700  00004E  9CC6               	line	74
  3701                           ;main.c: 74:             WCOL = 0;
  3702                           	bcf	c:(32311/8),(32311)&7	;volatile
  3703  000050  9EC6               	line	75
  3704                           ;main.c: 75:             CKP = 1;
  3705                           	bsf	c:(32308/8),(32308)&7	;volatile
  3706  000052  88C6               	goto	i2l1152
  3707  000054  EF2C  F000         	line	76
  3708                           ;main.c: 76:         }
  3709                           	
  3710                           i2l168:
  3711  000058                     	line	78
  3712                           	
  3713                           i2l1152:
  3714  000058                     ;main.c: 78:         if(SSPBUF == SSPADD)
  3715                           	movf	((c:4040)),c,w	;volatile
  3716  000058  50C8               xorwf	((c:4041)),c,w	;volatile
  3717  00005A  18C9               	btfss	status,2
  3718  00005C  A4D8               	goto	i2u28_41
  3719  00005E  EF33  F000         	goto	i2u28_40
  3720  000062  EF35  F000         
  3721                           i2u28_41:
  3722  000066                     	goto	i2l171
  3723  000066  EF38  F000         i2u28_40:
  3724  00006A                     	line	81
  3725                           	
  3726                           i2l1154:
  3727  00006A                     ;main.c: 79:         {;main.c: 81:            GPREG.I2CADD = 1;
  3728                           	bsf	((c:_GPREG)),c,3
  3729  00006A  8650               	line	82
  3730                           ;main.c: 82:            BF = 0;
  3731                           	bcf	c:(32312/8),(32312)&7	;volatile
  3732  00006C  90C7               	line	83
  3733                           ;main.c: 83:            CKP = 1;
  3734                           	bsf	c:(32308/8),(32308)&7	;volatile
  3735  00006E  88C6               	line	84
  3736                           ;main.c: 84:         }
  3737                           	
  3738                           i2l171:
  3739  000070                     	line	86
  3740                           ;main.c: 86:         if(GPREG.I2CADD == 1 && 0 != SSPBUF && SSPBUF != SSPADD)
  3741                           	btfss	((c:_GPREG)),c,3
  3742  000070  A650               	goto	i2u29_41
  3743  000072  EF3D  F000         	goto	i2u29_40
  3744  000076  EF3F  F000         i2u29_41:
  3745  00007A                     	goto	i2l172
  3746  00007A  EF54  F000         i2u29_40:
  3747  00007E                     	
  3748                           i2l1156:
  3749  00007E                     	movf	((c:4041)),c,w	;volatile
  3750  00007E  50C9               	btfsc	status,2
  3751  000080  B4D8               	goto	i2u30_41
  3752  000082  EF45  F000         	goto	i2u30_40
  3753  000086  EF47  F000         i2u30_41:
  3754  00008A                     	goto	i2l172
  3755  00008A  EF54  F000         i2u30_40:
  3756  00008E                     	
  3757                           i2l1158:
  3758  00008E                     	movf	((c:4040)),c,w	;volatile
  3759  00008E  50C8               xorwf	((c:4041)),c,w	;volatile
  3760  000090  18C9               	btfsc	status,2
  3761  000092  B4D8               	goto	i2u31_41
  3762  000094  EF4E  F000         	goto	i2u31_40
  3763  000098  EF50  F000         
  3764                           i2u31_41:
  3765  00009C                     	goto	i2l172
  3766  00009C  EF54  F000         i2u31_40:
  3767  0000A0                     	line	88
  3768                           	
  3769                           i2l1160:
  3770  0000A0                     ;main.c: 87:         {;main.c: 88:             i2cData = SSPBUF;
  3771                           	movff	(c:4041),(c:_i2cData)	;volatile
  3772  0000A0  CFC9 F04E          	line	89
  3773                           ;main.c: 89:             CKP = 1;
  3774                           	bsf	c:(32308/8),(32308)&7	;volatile
  3775  0000A4  88C6               	line	90
  3776                           ;main.c: 90:             GPREG.I2CADD = 0;
  3777                           	bcf	((c:_GPREG)),c,3
  3778  0000A6  9650               	line	91
  3779                           ;main.c: 91:         }
  3780                           	
  3781                           i2l172:
  3782  0000A8                     	line	93
  3783                           ;main.c: 93:         SSPIF = 0;
  3784                           	bcf	c:(31987/8),(31987)&7	;volatile
  3785  0000A8  969E               	line	94
  3786                           ;main.c: 94:     }
  3787                           	
  3788                           i2l167:
  3789  0000AA                     	line	96
  3790                           ;main.c: 96:     if(1 == TMR5IE && 1 == TMR5IF)
  3791                           	btfss	c:(32024/8),(32024)&7	;volatile
  3792  0000AA  A0A3               	goto	i2u32_41
  3793  0000AC  EF5A  F000         	goto	i2u32_40
  3794  0000B0  EF5C  F000         i2u32_41:
  3795  0000B4                     	goto	i2l173
  3796  0000B4  EF65  F000         i2u32_40:
  3797  0000B8                     	
  3798                           i2l1162:
  3799  0000B8                     	btfss	c:(32032/8),(32032)&7	;volatile
  3800  0000B8  A0A4               	goto	i2u33_41
  3801  0000BA  EF61  F000         	goto	i2u33_40
  3802  0000BE  EF63  F000         i2u33_41:
  3803  0000C2                     	goto	i2l173
  3804  0000C2  EF65  F000         i2u33_40:
  3805  0000C6                     	line	98
  3806                           	
  3807                           i2l1164:
  3808  0000C6                     ;main.c: 97:     {;main.c: 98:         TMR5IF = 0;
  3809                           	bcf	c:(32032/8),(32032)&7	;volatile
  3810  0000C6  90A4               	line	99
  3811                           ;main.c: 99:         GPREG.STPCRL = 1;
  3812                           	bsf	((c:_GPREG)),c,5
  3813  0000C8  8A50               	line	100
  3814                           ;main.c: 100:     }
  3815                           	
  3816                           i2l173:
  3817  0000CA                     	line	102
  3818                           ;main.c: 102:     if(1 == TMR1IE && 1 == TMR1IF)
  3819                           	btfss	c:(31976/8),(31976)&7	;volatile
  3820  0000CA  A09D               	goto	i2u34_41
  3821  0000CC  EF6A  F000         	goto	i2u34_40
  3822  0000D0  EF6C  F000         i2u34_41:
  3823  0000D4                     	goto	i2l1172
  3824  0000D4  EF7C  F000         i2u34_40:
  3825  0000D8                     	
  3826                           i2l1166:
  3827  0000D8                     	btfss	c:(31984/8),(31984)&7	;volatile
  3828  0000D8  A09E               	goto	i2u35_41
  3829  0000DA  EF71  F000         	goto	i2u35_40
  3830  0000DE  EF73  F000         i2u35_41:
  3831  0000E2                     	goto	i2l1172
  3832  0000E2  EF7C  F000         i2u35_40:
  3833  0000E6                     	line	104
  3834                           	
  3835                           i2l1168:
  3836  0000E6                     ;main.c: 103:     {;main.c: 104:         GPREG.STCTRL = 1;
  3837                           	bsf	((c:_GPREG)),c,1
  3838  0000E6  8250               	line	105
  3839                           ;main.c: 105:         TMR1IF = 0;
  3840                           	bcf	c:(31984/8),(31984)&7	;volatile
  3841  0000E8  909E               	line	106
  3842                           ;main.c: 106:         TMR1ON = 0;
  3843                           	bcf	c:(32360/8),(32360)&7	;volatile
  3844  0000EA  90CD               	line	107
  3845                           	
  3846                           i2l1170:
  3847  0000EC                     ;main.c: 107:         TMR1 = 65485;
  3848                           	movlw	high(0FFCDh)
  3849  0000EC  0EFF               	movwf	((c:4046+1)),c	;volatile
  3850  0000EE  6ECF               	movlw	low(0FFCDh)
  3851  0000F0  0ECD               	movwf	((c:4046)),c	;volatile
  3852  0000F2  6ECE               	goto	i2l1172
  3853  0000F4  EF7C  F000         	line	109
  3854                           ;main.c: 109:     }
  3855                           	
  3856                           i2l174:
  3857  0000F8                     	line	111
  3858                           	
  3859                           i2l1172:
  3860  0000F8                     ;main.c: 111:     if((1 == TXIE) && (1 == TXIF))
  3861                           	btfss	c:(31980/8),(31980)&7	;volatile
  3862  0000F8  A89D               	goto	i2u36_41
  3863  0000FA  EF81  F000         	goto	i2u36_40
  3864  0000FE  EF83  F000         i2u36_41:
  3865  000102                     	goto	i2l179
  3866  000102  EFB9  F000         i2u36_40:
  3867  000106                     	
  3868                           i2l1174:
  3869  000106                     	btfss	c:(31988/8),(31988)&7	;volatile
  3870  000106  A89E               	goto	i2u37_41
  3871  000108  EF88  F000         	goto	i2u37_40
  3872  00010C  EF8A  F000         i2u37_41:
  3873  000110                     	goto	i2l179
  3874  000110  EFB9  F000         i2u37_40:
  3875  000114                     	line	113
  3876                           	
  3877                           i2l1176:
  3878  000114                     ;main.c: 112:     {;main.c: 113:         if(4 < cursor)
  3879                           		movf	((c:_cursor)),c,w
  3880  000114  504F               	xorlw	80h
  3881  000116  0A80               	addlw	-(80h^05h)
  3882  000118  0F7B               	btfss	status,0
  3883  00011A  A0D8               	goto	i2u38_41
  3884  00011C  EF92  F000         	goto	i2u38_40
  3885  000120  EF94  F000         
  3886                           i2u38_41:
  3887  000124                     	goto	i2l1180
  3888  000124  EF98  F000         i2u38_40:
  3889  000128                     	line	115
  3890                           	
  3891                           i2l1178:
  3892  000128                     ;main.c: 114:         {;main.c: 115:             TXREG = 0x2C;
  3893                           	movlw	low(02Ch)
  3894  000128  0E2C               	movwf	((c:4013)),c	;volatile
  3895  00012A  6EAD               	line	116
  3896                           ;main.c: 116:         } else {
  3897                           	goto	i2l1182
  3898  00012C  EFA7  F000         	
  3899                           i2l176:
  3900  000130                     	line	117
  3901                           	
  3902                           i2l1180:
  3903  000130                     ;main.c: 117:             TXREG = *(string_vel + cursor);
  3904                           	movff	(c:_cursor),??_ISR_high+0+0
  3905  000130  C04F  F001         	clrf	(??_ISR_high+0+0+1)&0ffh,c
  3906  000134  6A02               	btfsc	(??_ISR_high+0+0)&0ffh,c,7
  3907  000136  BE01               	decf	(??_ISR_high+0+0+1)&0ffh,c
  3908  000138  0602               	movf	(??_ISR_high+0+0),c,w
  3909  00013A  5001               	addwf	((c:_string_vel)),c,w
  3910  00013C  2446               	movwf	c:fsr2l
  3911  00013E  6ED9               	movf	(??_ISR_high+0+1),c,w
  3912  000140  5002               	addwfc	((c:_string_vel+1)),c,w
  3913  000142  2047               	movwf	1+c:fsr2l
  3914  000144  6EDA               	movf	indf2,w
  3915  000146  50DF               	movwf	((c:4013)),c	;volatile
  3916  000148  6EAD               	goto	i2l1182
  3917  00014A  EFA7  F000         	line	118
  3918                           ;main.c: 118:         }
  3919                           	
  3920                           i2l177:
  3921  00014E                     	line	119
  3922                           	
  3923                           i2l1182:
  3924  00014E                     ;main.c: 119:         cursor++;
  3925                           	incf	((c:_cursor)),c
  3926  00014E  2A4F               	line	120
  3927                           	
  3928                           i2l1184:
  3929  000150                     ;main.c: 120:         if(5 < cursor)
  3930                           		movf	((c:_cursor)),c,w
  3931  000150  504F               	xorlw	80h
  3932  000152  0A80               	addlw	-(80h^06h)
  3933  000154  0F7A               	btfss	status,0
  3934  000156  A0D8               	goto	i2u39_41
  3935  000158  EFB0  F000         	goto	i2u39_40
  3936  00015C  EFB2  F000         
  3937                           i2u39_41:
  3938  000160                     	goto	i2l179
  3939  000160  EFB9  F000         i2u39_40:
  3940  000164                     	line	122
  3941                           	
  3942                           i2l1186:
  3943  000164                     ;main.c: 121:         {;main.c: 122:             TXIE = 0;
  3944                           	bcf	c:(31980/8),(31980)&7	;volatile
  3945  000164  989D               	line	123
  3946                           	
  3947                           i2l1188:
  3948  000166                     ;main.c: 123:             cursor = 0;
  3949                           	movlw	low(0)
  3950  000166  0E00               	movwf	((c:_cursor)),c
  3951  000168  6E4F               	goto	i2l179
  3952  00016A  EFB9  F000         	line	124
  3953                           ;main.c: 124:         }
  3954                           	
  3955                           i2l178:
  3956  00016E                     	goto	i2l179
  3957  00016E  EFB9  F000         	line	125
  3958                           ;main.c: 125:     }
  3959                           	
  3960                           i2l175:
  3961  000172                     	line	127
  3962                           	
  3963                           i2l179:
  3964  000172                     	movff	??_ISR_high+3,fsr2h+0
  3965  000172  C004  FFDA         	movff	??_ISR_high+2,fsr2l+0
  3966  000176  C003  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  3967  00017A  925A               	retfie f
  3968  00017C  0011               	opt stack 0
  3969                           GLOBAL	__end_of_ISR_high
  3970                           	__end_of_ISR_high:
  3971  00017E                     	signat	_ISR_high,89
  3972                           	GLOBAL	__activetblptr
  3973                           __activetblptr	EQU	0
  3974  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  3975                           	PSECT	rparam,class=COMRAM,space=1,noexec
  3976                           	GLOBAL	__Lrparam
  3977                           	FNCONF	rparam,??,?
  3978                           	GLOBAL	___rparam_used
  3979                           	___rparam_used EQU 1
  3980  0000                     	GLOBAL	___param_bank
  3981                           	___param_bank EQU 0
  3982  0000                     GLOBAL	__Lparam, __Hparam
  3983                           GLOBAL	__Lrparam, __Hrparam
  3984                           __Lparam	EQU	__Lrparam
  3985  0000                     __Hparam	EQU	__Hrparam
  3986  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  3987                           	global	btemp
  3988                           btemp:
  3989  00005A                     	ds	1
  3990  00005A                     	global	int$flags
  3991                           	int$flags	set btemp
  3992  0000                     	global	wtemp8
  3993                           	wtemp8 set btemp+1
  3994  0000                     	global	ttemp5
  3995                           	ttemp5 set btemp+1
  3996  0000                     	global	ttemp6
  3997                           	ttemp6 set btemp+4
  3998  0000                     	global	ttemp7
  3999                           	ttemp7 set btemp+8
  4000  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      89
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           244      0       0

Pointer List with Targets:

    sp__int2char	PTR unsigned char  size(2) Largest target is 5
		 -> int2char@string(COMRAM[5]), 

    string_vel	PTR unsigned char  size(2) Largest target is 5
		 -> NULL(NULL[0]), int2char@string(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_write_PWM
    _int2char->___lwdiv
    _init_PWM->_write_PWM
    _write_PWM->_calculatePWM
    _calculatePWM->___aldiv
    ___aldiv->___lmul

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3500
                       _calculatePWM
                          _dataToVel
                           _init_I2C
                           _init_ISR
                           _init_PWM
                           _init_QEI
                          _init_TMR1
                          _init_UART
                         _init_VNHIO
                           _int2char
                          _write_PWM
 ---------------------------------------------------------------------------------
 (1) _int2char                                             5     3      2     815
                                             11 COMRAM     5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _init_VNHIO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_QEI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PWM                                             0     0      0     197
                          _write_PWM
 ---------------------------------------------------------------------------------
 (1) _write_PWM                                            3     1      2     197
                                             42 COMRAM     3     1      2
                       _calculatePWM (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dataToVel                                            5     3      2      91
                                              4 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _calculatePWM                                        13     9      4    2200
                                             30 COMRAM    12     8      4
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1130
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     756
                                             16 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_high                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculatePWM
     ___aldiv
       ___lmul (ARG)
     ___lldiv
     ___lmul
   _dataToVel
   _init_I2C
   _init_ISR
   _init_PWM
     _write_PWM
       _calculatePWM (ARG)
         ___aldiv
           ___lmul (ARG)
         ___lldiv
         ___lmul
   _init_QEI
   _init_TMR1
   _init_UART
   _init_VNHIO
   _int2char
     ___lwdiv
     ___lwmod
   _write_PWM
     _calculatePWM (ARG)
       ___aldiv
         ___lmul (ARG)
       ___lldiv
       ___lmul

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F3      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            F4      0       0       8        0.0%
BANK2               F4      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      59       1       94.7%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      59       5        0.0%
DATA                 0      0      59      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Nov 12 21:49:09 2018

                     _BF 007E38             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$RC 000000  
                    l200 0A1E                      l203 0A10                      l212 099A  
                    l310 04D4                      l206 09B6                      l311 04F6  
                    l215 09FE                      l223 07EE                      l312 04FA  
                    l232 0928                      l224 07A2                      l313 0538  
                    l233 094A                      l209 097C                      l225 0800  
                    l314 054C                      l306 0480                      l234 0956  
                    l218 09D2                      l226 080C                      l315 0574  
                    l307 04A6                      l316 0588                      l308 0550  
                    l309 04E4                      l229 0A2C                      l270 06F8  
                    l246 089A                      l190 064E                      l271 0708  
                    l247 08BC                      l264 06F8                      l248 08E6  
                    l184 05E0                      l265 0690                      l249 08F6  
                    l193 01D4                      l185 0646                      l266 0680  
                    l194 01E2                      l186 063A                      l267 06A2  
                    l195 03B2                      l187 063E                      l268 06A6  
                    l196 03E8                      l188 064A                      l269 06E4  
                    l197 0454                      l189 064E                      l730 072C  
                    l731 074A                      l732 074E                      l740 0828  
                    l733 0778                      l741 0846                      l734 0788  
                    l742 084A                      l735 0790                      l743 086C  
                    l728 0788                      l744 087C                      l729 0738  
                    l745 0884                      l738 087C                      l739 0834  
                    _CKP 007E34                      _GIE 007F97             __CFG_CPB$OFF 000000  
                    u500 04F2                      u420 08A8                      u501 04EE  
                    u421 08A4                      u510 0522                      u430 08E6  
                    _PR2 000FCB                      _PID 002E                      u511 051E  
                    u431 08E2                      u520 0560                      u440 0678  
                    u600 093E                      u521 055C                      u441 0674  
                    u601 093A                      _PR5 000F90                      u450 069E  
                    u610 0190                      u530 0724             __CFG_CPD$OFF 000000  
                    u451 069A                      u611 018C                      u531 0720  
                    u460 06CE                      u620 039E                      u540 0746  
                    u461 06CA                      u621 039A                      u541 0742  
                    u470 0468                      u630 03D4                      u550 076A  
                    u471 0464                      u631 03D0                      u551 0766  
                    u480 048E                      u560 0820                      u640 07FC  
                    u481 048A                      u561 081C                      u641 07F8  
                    u490 04CC                      u570 0842                      u650 05FC  
                    u491 04C8                      u571 083E                      u651 05F8  
                    u580 0860                      u660 0632                      u581 085C  
                    u661 062E                      u590 091C                      u591 0918  
                    _vel 0056                      prod 000FF3                      wreg 000FE8  
           __CFG_IESO$ON 000000              int2char@num 000E             __CFG_LVP$OFF 000000  
                   l1030 0A00                     l1040 0A12                     l1032 0A08  
                   l1050 097E                     l1034 0A0A                     l1300 0574  
                   l1060 0998                     l1052 0986                     l1036 0A0C  
                   l1302 0588                     l1230 089A                     l1062 0A20  
                   l1070 09B8                     l1222 0958                     l1054 0988  
                   l1038 0A0E                     l1310 072C                     l1240 0662  
                   l1232 08A8                     l1400 03E8                     l1064 0A24  
                   l1224 096C                     l1056 0992                     l1320 0772  
                   l1312 0738                     l1304 070A                     l1250 06B0  
                   l1242 0678                     l1234 08BC                     l1402 0440  
                   l1226 0978                     l1058 0996                     l1066 09EA  
                   l1322 0778                     l1314 074E                     l1306 0712  
                   l1330 0828                     l1410 07A2                     l1260 0456  
                   l1252 06CE                     l1244 0680                     l1236 08C6  
                   l1228 0886                     l1404 0454                     l1068 09EE  
                   l1324 077E                     l1316 0754                     l1308 0724  
                   l1340 0872                     l1332 0834                     l1420 080C  
                   l1412 07CC                     l1270 048E                     l1262 045A  
                   l1254 06DE                     l1246 0690                     l1238 0652  
                   l1350 08FA                     l1342 099C                     l1318 076A  
                   l1334 084A                     l1326 080E                     l1414 07E8  
                   l1406 0792                     l1430 05CA                     l1422 058A  
                   l1280 04D4                     l1272 049E                     l1264 0468  
                   l1256 06E4                     l1248 06A6                     l1360 094A  
                   l1352 0906                     l1344 09A0                     l1336 0860  
                   l1328 0820                     l1416 07EE                     l1408 079A  
                   l1440 05E0                     l1432 05CE                     l1424 05BE  
                   l1290 0532                     l1282 04E4                     l1274 04A6  
                   l1266 0478                     l1258 06EE                     l1370 019E  
                   l1362 0956                     l1354 091C                     l1346 09A8  
                   l1338 086C                     l1418 0800                     l1450 0624  
                   l1442 05EE                     l1434 05D2                     l1426 05C2  
                   l1292 0538                     l1284 04FA                     l1276 04B6  
                   l1268 0480                     l1380 01E2                     l1372 01A4  
                   l1364 0182                     l1356 0928                     l1348 09AA  
                   l1452 0632                     l1444 05FC                     l1436 05D6  
                   l1428 05C6                     l1294 0542                     l1286 0504  
                   l1278 04CC                     l1390 0388                     l1382 01FE  
                   l1374 01A8                     l1366 0190                     l1358 093E  
                   l1446 060E                     l1438 05DA                     l1288 0522  
                   l1296 0550                     l1392 0390                     l1384 0258  
                   l1368 0198                     l1376 01D4                     l1448 0622  
                   l1298 0560                     l1394 039E                     l1386 02A6  
                   l1378 01DC                     l1396 03B2                     l1388 0354  
                   l1398 03D4                     _IPEN 007E87                     _TMR1 000FCE  
                   _WCOL 007E37                     _TXIE 007CEC                     _TXIF 007CF4  
                   _TXIP 007CFC            __CFG_FCMEN$ON 000000                     _main 058A  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
                   btemp 005A                     _volt 003E            __CFG_BOREN$ON 000000  
                   prodh 000FF4                     prodl 000FF3                     start 017E  
          __CFG_MCLRE$ON 000000             ___param_bank 000000          __end_of___aldiv 058A  
                  ?_main 0001          __end_of___lldiv 070A                    _T1CON 000FCD  
                  _T2CON 000FCA                    _LATA0 007C48                    _LATA1 007C49  
                  _LATC2 007C5A                    _T5CON 000FB7          __end_of___lwdiv 0792  
                  _GPREG 0050          __end_of___lwmod 0886                    i2l170 004A  
                  i2l171 0070                    i2l172 00A8                    i2l173 00CA  
                  i2l174 00F8                    i2l175 0172                    i2l167 00AA  
                  i2l176 0130                    i2l168 0058                    i2l177 014E  
                  i2l178 016E                    i2l179 0172                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _VELRH 000F69                    _VELRL 000F68  
                  _SSPIE 007CEB                    _SSPIF 007CF3                    _SSPIP 007CFB  
                  _SSPOV 007E36                    _TXREG 000FAD                    _TXSTA 000FAC  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
    ___lmul@multiplicand 0009            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
       __end_of_ISR_high 017E            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _error 004C  
                  ttemp5 005B                    ttemp6 005E                    ttemp7 0062  
                  status 000FD8                    wtemp8 005B            int2char@digit 0010  
        __initialization 09D4           __CFG_HPOL$HIGH 000000             __end_of_main 0652  
         __CFG_LPOL$HIGH 000000                   ??_main 002E            __activetblptr 000000  
                 _CCPR1L 000FBE                   _ANSEL0 000FB8                   _ANSEL1 000FB9  
  __size_of_calculatePWM 02D4                   i2l1150 003C                   i2l1160 00A0  
                 i2l1152 0058                   i2l1144 0012                   i2l1170 00EC  
                 i2l1162 00B8                   i2l1154 006A                   i2l1146 0020  
                 i2l1180 0130                   i2l1172 00F8                   i2l1164 00C6  
                 i2l1156 007E                   i2l1148 002E                   i2l1182 014E  
                 i2l1174 0106                   i2l1166 00D8                   i2l1158 008E  
                 i2l1184 0150                   i2l1176 0114                   i2l1168 00E6  
                 i2l1186 0164                   i2l1178 0128                   i2l1188 0166  
         __CFG_WDTEN$OFF 000000                   _QEICON 000FB6                   _OSCCON 000FD3  
                 _TMR1IE 007CE8                   _TMR1IF 007CF0           __CFG_WINEN$OFF 000000  
                 _TMR1IP 007CF8                   _TMR5IE 007D18                   _TMR5IF 007D20  
                 _TMR1ON 007E68                   _TMR5IP 007D28                   _TMR5ON 007DB8  
                 _SSPADD 000FC8                   _TRISA0 007C90                   _TRISA1 007C91  
                 _TRISA4 007C94                   _TRISA5 007C95                   _TRISC2 007CA2  
                 _TRISC4 007CA4                   _TRISC5 007CA5                   _TRISC6 007CA6  
                 _SSPBUF 000FC9                   _SSPCON 000FC6           __CFG_SSPMX$RD1 000000  
       __end_of_int2char 080E                   ___lmul 0886                ??___aldiv 0019  
         __CFG_STVREN$ON 000000                ??___lldiv 000D         __end_of_init_I2C 0A2E  
              ??___lwdiv 0009                ??___lwmod 0009         __end_of_init_QEI 099C  
       __end_of_init_ISR 09D4         __end_of_init_PWM 09B8                   _cursor 004F  
                 clear_0 09DA             _calculatePWM 0182            dataToVel@data 0007  
             __accesstop 0060  __end_of__initialization 09E0          __CFG_FLTAMX$RC1 000000  
          ___rparam_used 000001          __CFG_T1OSCMX$ON 000000           __pcstackCOMRAM 0001  
              ?_ISR_high 0001           int2char@number 000C       __size_of_dataToVel 0060  
         int2char@string 0051       __size_of_init_UART 0016       __size_of_init_TMR1 000E  
             __pnvCOMRAM 0058                  ?___lmul 0005               ??_ISR_high 0001  
        __CFG_WDPS$32768 000000                  _CAP1REN 007B1E                  _CCP1CON 000FBD  
                _BAUDCON 000FAA           ___lmul@product 000D          __CFG_PWM4MX$RB5 000000  
                i2u30_40 008E                  i2u30_41 008A                  i2u31_40 00A0  
                i2u31_41 009C                  i2u32_40 00B8                  i2u24_40 0020  
                i2u32_41 00B4                  i2u24_41 001C                  i2u33_40 00C6  
                i2u25_40 002E                  i2u33_41 00C2                  i2u25_41 002A  
                i2u34_40 00D8                  i2u26_40 003C                  i2u34_41 00D4  
                i2u26_41 0038                  i2u35_40 00E6                  i2u27_40 004A  
                i2u35_41 00E2                  i2u27_41 0046                  i2u36_40 0106  
                i2u28_40 006A                  i2u36_41 0102                  i2u28_41 0066  
                i2u37_40 0114                  i2u29_40 007E                  i2u37_41 0110  
                i2u29_41 007A                  i2u38_40 0128                  i2u38_41 0124  
                i2u39_40 0164                  i2u39_41 0160                ?_int2char 000C  
      __end_of_dataToVel 0958          __CFG_PWMPIN$OFF 000000                ?_init_I2C 0001  
              ?_init_QEI 0001                ?_init_ISR 0001                ?_init_PWM 0001  
                _i2cData 004E       __size_of_write_PWM 0026          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000               _init_VNHIO 0A00  
                ___aldiv 0456          __size_of___lmul 0072                  ___lldiv 0652  
                ___lwdiv 070A                  ___lwmod 080E                  __pcinit 09D4  
                __ramtop 0300                  __ptext0 058A                  __ptext1 0792  
                __ptext2 080E                  __ptext3 070A                  __ptext4 0A00  
                __ptext5 09EA                  __ptext6 0A12                  __ptext7 097E  
                __ptext8 099C                  __ptext9 0958        __end_of_init_UART 0A00  
      __end_of_init_TMR1 0A20                  _ref_vel 0058         ___aldiv@dividend 0011  
                _vel_ant 0048               ??_int2char 000E     end_of_initialization 09E0  
             ??_init_I2C 0005               ??_init_QEI 0005               ??_init_ISR 0005  
             ??_init_PWM 002E          ___lldiv@divisor 0009          ___lldiv@counter 0011  
       ___aldiv@quotient 001B                  postinc0 000FEE        __end_of_write_PWM 097E  
             _suma_error 0042              _CCP1CONbits 000FBD              ?_init_VNHIO 0001  
             _string_vel 0046         __CFG_EXCLKMX$RC3 000000           __end_of___lmul 08F8  
      __size_of_ISR_high 0176      start_initialization 09D4              _aceleracion 003A  
               ??___lmul 000D       write_PWM@dutyCycle 002B             dataToVel@vel 0008  
            __pbssCOMRAM 002E      __size_of_init_VNHIO 0012        __size_of_int2char 007C  
              _dataToVel 08F8        __size_of_init_I2C 000E        __size_of_init_QEI 001E  
      __size_of_init_ISR 001C        __size_of_init_PWM 001C         ___lwdiv@dividend 0005  
              __pintcode 0008                 ?___aldiv 0011                 ?___lldiv 0005  
               ?___lwdiv 0005                 ?___lwmod 0005                 _CAP1BUFH 000F69  
               _CAP1BUFL 000F68                _init_UART 09EA                _init_TMR1 0A12  
       ___lwdiv@quotient 0009                _error_ant 004A          ___aldiv@divisor 0015  
        ___aldiv@counter 0019               ?_dataToVel 0005                 _ISR_high 0008  
          ?_calculatePWM 001F               ?_init_UART 0001               ?_init_TMR1 0001  
              _write_PWM 0958        ___lmul@multiplier 0005                 __Hrparam 0000  
           ??_init_VNHIO 0005                 __Lrparam 0000         __size_of___aldiv 0134  
       __size_of___lldiv 00B8         __size_of___lwdiv 0088         __size_of___lwmod 0078  
         ??_calculatePWM 0023          ___lwdiv@divisor 0007          ___lwdiv@counter 000B  
               __ptext10 09B8                 __ptext11 0A20                 __ptext12 08F8  
               __ptext13 0182                 __ptext14 0886                 __ptext15 0652  
               __ptext16 0456               ?_write_PWM 002B       __end_of_init_VNHIO 0A12  
               _int2char 0792                 _init_I2C 0A20                 _init_QEI 097E  
               _init_ISR 09B8                 _init_PWM 099C            __size_of_main 00C8  
            ??_dataToVel 0007                 int$flags 005A              ??_init_UART 0005  
            ??_init_TMR1 0005     calculatePWM@setpoint 0001                 intlevel2 0000  
       ___lwmod@dividend 0005         ___lldiv@dividend 0005         ___lldiv@quotient 000D  
        ___lwmod@divisor 0007          ___lwmod@counter 0009             ___aldiv@sign 001A  
            ??_write_PWM 002D     __end_of_calculatePWM 0456  
