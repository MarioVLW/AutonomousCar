

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Oct 29 19:05:57 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4431 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   108                           DFLTCON equ 0F60h ;# 
   109  0000                     # 118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   110                           CAP3CON equ 0F61h ;# 
   111  0000                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   112                           CAP2CON equ 0F62h ;# 
   113  0000                     # 236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   114                           CAP1CON equ 0F63h ;# 
   115  0000                     # 295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   116                           CAP3BUFL equ 0F64h ;# 
   117  0000                     # 300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   118                           MAXCNTL equ 0F64h ;# 
   119  0000                     # 307 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   120                           CAP3BUFH equ 0F65h ;# 
   121  0000                     # 312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   122                           MAXCNTH equ 0F65h ;# 
   123  0000                     # 319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   124                           CAP2BUFL equ 0F66h ;# 
   125  0000                     # 324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   126                           POSCNTL equ 0F66h ;# 
   127  0000                     # 331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   128                           CAP2BUFH equ 0F67h ;# 
   129  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   130                           POSCNTH equ 0F67h ;# 
   131  0000                     # 343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   132                           CAP1BUFL equ 0F68h ;# 
   133  0000                     # 348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   134                           VELRL equ 0F68h ;# 
   135  0000                     # 355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   136                           CAP1BUFH equ 0F69h ;# 
   137  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   138                           VELRH equ 0F69h ;# 
   139  0000                     # 367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   140                           OVDCONS equ 0F6Ah ;# 
   141  0000                     # 437 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   142                           OVDCOND equ 0F6Bh ;# 
   143  0000                     # 507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   144                           FLTCONFIG equ 0F6Ch ;# 
   145  0000                     # 569 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   146                           DTCON equ 0F6Dh ;# 
   147  0000                     # 695 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   148                           PWMCON1 equ 0F6Eh ;# 
   149  0000                     # 761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   150                           PWMCON0 equ 0F6Fh ;# 
   151  0000                     # 831 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   152                           SEVTCMPH equ 0F70h ;# 
   153  0000                     # 838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   154                           SEVTCMPL equ 0F71h ;# 
   155  0000                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   156                           PDC3H equ 0F72h ;# 
   157  0000                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   158                           PDC3L equ 0F73h ;# 
   159  0000                     # 859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   160                           PDC2H equ 0F74h ;# 
   161  0000                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   162                           PDC2L equ 0F75h ;# 
   163  0000                     # 873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   164                           PDC1H equ 0F76h ;# 
   165  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   166                           PDC1L equ 0F77h ;# 
   167  0000                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   168                           PDC0H equ 0F78h ;# 
   169  0000                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   170                           PDC0L equ 0F79h ;# 
   171  0000                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   172                           PTPERH equ 0F7Ah ;# 
   173  0000                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   174                           PTPERL equ 0F7Bh ;# 
   175  0000                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   176                           PTMRH equ 0F7Ch ;# 
   177  0000                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   178                           PTMRL equ 0F7Dh ;# 
   179  0000                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   180                           PTCON1 equ 0F7Eh ;# 
   181  0000                     # 956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   182                           PTCON0 equ 0F7Fh ;# 
   183  0000                     # 1038 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   184                           PORTA equ 0F80h ;# 
   185  0000                     # 1199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   186                           PORTB equ 0F81h ;# 
   187  0000                     # 1270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   188                           PORTC equ 0F82h ;# 
   189  0000                     # 1536 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   190                           PORTD equ 0F83h ;# 
   191  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   192                           PORTE equ 0F84h ;# 
   193  0000                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   194                           TMR5 equ 0F87h ;# 
   195  0000                     # 1740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   196                           TMR5L equ 0F87h ;# 
   197  0000                     # 1747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   198                           TMR5H equ 0F88h ;# 
   199  0000                     # 1754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   200                           LATA equ 0F89h ;# 
   201  0000                     # 1866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   202                           LATB equ 0F8Ah ;# 
   203  0000                     # 1978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   204                           LATC equ 0F8Bh ;# 
   205  0000                     # 2090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   206                           LATD equ 0F8Ch ;# 
   207  0000                     # 2202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   208                           LATE equ 0F8Dh ;# 
   209  0000                     # 2254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   210                           PR5 equ 0F90h ;# 
   211  0000                     # 2261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   212                           PR5L equ 0F90h ;# 
   213  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   214                           PR5H equ 0F91h ;# 
   215  0000                     # 2275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   216                           TRISA equ 0F92h ;# 
   217  0000                     # 2280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   218                           DDRA equ 0F92h ;# 
   219  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   220                           TRISB equ 0F93h ;# 
   221  0000                     # 2502 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   222                           DDRB equ 0F93h ;# 
   223  0000                     # 2719 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   224                           TRISC equ 0F94h ;# 
   225  0000                     # 2724 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   226                           DDRC equ 0F94h ;# 
   227  0000                     # 2941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   228                           TRISD equ 0F95h ;# 
   229  0000                     # 2946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   230                           DDRD equ 0F95h ;# 
   231  0000                     # 3163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   232                           TRISE equ 0F96h ;# 
   233  0000                     # 3168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   234                           DDRE equ 0F96h ;# 
   235  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   236                           ADCHS equ 0F99h ;# 
   237  0000                     # 3403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   238                           ADCON3 equ 0F9Ah ;# 
   239  0000                     # 3475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   240                           OSCTUNE equ 0F9Bh ;# 
   241  0000                     # 3533 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   242                           PIE1 equ 0F9Dh ;# 
   243  0000                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   244                           PIR1 equ 0F9Eh ;# 
   245  0000                     # 3693 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   246                           IPR1 equ 0F9Fh ;# 
   247  0000                     # 3773 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   248                           PIE2 equ 0FA0h ;# 
   249  0000                     # 3814 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   250                           PIR2 equ 0FA1h ;# 
   251  0000                     # 3855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   252                           IPR2 equ 0FA2h ;# 
   253  0000                     # 3896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   254                           PIE3 equ 0FA3h ;# 
   255  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   256                           PIR3 equ 0FA4h ;# 
   257  0000                     # 4048 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   258                           IPR3 equ 0FA5h ;# 
   259  0000                     # 4108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   260                           EECON1 equ 0FA6h ;# 
   261  0000                     # 4174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   262                           EECON2 equ 0FA7h ;# 
   263  0000                     # 4181 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   264                           EEDATA equ 0FA8h ;# 
   265  0000                     # 4188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   266                           EEADR equ 0FA9h ;# 
   267  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   268                           BAUDCON equ 0FAAh ;# 
   269  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   270                           BAUDCTL equ 0FAAh ;# 
   271  0000                     # 4375 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   272                           RCSTA equ 0FABh ;# 
   273  0000                     # 4380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   274                           RCSTA1 equ 0FABh ;# 
   275  0000                     # 4585 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   276                           TXSTA equ 0FACh ;# 
   277  0000                     # 4590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   278                           TXSTA1 equ 0FACh ;# 
   279  0000                     # 4841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   280                           TXREG equ 0FADh ;# 
   281  0000                     # 4846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   282                           TXREG1 equ 0FADh ;# 
   283  0000                     # 4853 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   284                           RCREG equ 0FAEh ;# 
   285  0000                     # 4858 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   286                           RCREG1 equ 0FAEh ;# 
   287  0000                     # 4865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   288                           SPBRG equ 0FAFh ;# 
   289  0000                     # 4870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   290                           SPBRG1 equ 0FAFh ;# 
   291  0000                     # 4877 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   292                           SPBRGH equ 0FB0h ;# 
   293  0000                     # 4884 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   294                           QEICON equ 0FB6h ;# 
   295  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   296                           T5CON equ 0FB7h ;# 
   297  0000                     # 5154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   298                           ANSEL0 equ 0FB8h ;# 
   299  0000                     # 5216 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   300                           ANSEL1 equ 0FB9h ;# 
   301  0000                     # 5236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   302                           CCP2CON equ 0FBAh ;# 
   303  0000                     # 5315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   304                           CCPR2 equ 0FBBh ;# 
   305  0000                     # 5322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   306                           CCPR2L equ 0FBBh ;# 
   307  0000                     # 5329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   308                           CCPR2H equ 0FBCh ;# 
   309  0000                     # 5336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   310                           CCP1CON equ 0FBDh ;# 
   311  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   312                           CCPR1 equ 0FBEh ;# 
   313  0000                     # 5422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   314                           CCPR1L equ 0FBEh ;# 
   315  0000                     # 5429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   316                           CCPR1H equ 0FBFh ;# 
   317  0000                     # 5436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   318                           ADCON2 equ 0FC0h ;# 
   319  0000                     # 5512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   320                           ADCON1 equ 0FC1h ;# 
   321  0000                     # 5608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   322                           ADCON0 equ 0FC2h ;# 
   323  0000                     # 5727 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   324                           ADRES equ 0FC3h ;# 
   325  0000                     # 5734 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   326                           ADRESL equ 0FC3h ;# 
   327  0000                     # 5741 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   328                           ADRESH equ 0FC4h ;# 
   329  0000                     # 5748 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   330                           SSPCON equ 0FC6h ;# 
   331  0000                     # 5753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   332                           SSPCON1 equ 0FC6h ;# 
   333  0000                     # 5886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   334                           SSPSTAT equ 0FC7h ;# 
   335  0000                     # 6107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   336                           SSPADD equ 0FC8h ;# 
   337  0000                     # 6114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   338                           SSPBUF equ 0FC9h ;# 
   339  0000                     # 6121 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   340                           T2CON equ 0FCAh ;# 
   341  0000                     # 6219 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   342                           PR2 equ 0FCBh ;# 
   343  0000                     # 6224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   344                           MEMCON equ 0FCBh ;# 
   345  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   346                           TMR2 equ 0FCCh ;# 
   347  0000                     # 6336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   348                           T1CON equ 0FCDh ;# 
   349  0000                     # 6448 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   350                           TMR1 equ 0FCEh ;# 
   351  0000                     # 6455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   352                           TMR1L equ 0FCEh ;# 
   353  0000                     # 6462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   354                           TMR1H equ 0FCFh ;# 
   355  0000                     # 6469 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   356                           RCON equ 0FD0h ;# 
   357  0000                     # 6612 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   358                           WDTCON equ 0FD1h ;# 
   359  0000                     # 6639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   360                           LVDCON equ 0FD2h ;# 
   361  0000                     # 6704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   362                           OSCCON equ 0FD3h ;# 
   363  0000                     # 6790 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   364                           T0CON equ 0FD5h ;# 
   365  0000                     # 6866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   366                           TMR0 equ 0FD6h ;# 
   367  0000                     # 6873 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   368                           TMR0L equ 0FD6h ;# 
   369  0000                     # 6880 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   370                           TMR0H equ 0FD7h ;# 
   371  0000                     # 6887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   372                           STATUS equ 0FD8h ;# 
   373  0000                     # 6958 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   374                           FSR2 equ 0FD9h ;# 
   375  0000                     # 6965 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   376                           FSR2L equ 0FD9h ;# 
   377  0000                     # 6972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   378                           FSR2H equ 0FDAh ;# 
   379  0000                     # 6979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   380                           PLUSW2 equ 0FDBh ;# 
   381  0000                     # 6986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   382                           PREINC2 equ 0FDCh ;# 
   383  0000                     # 6993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   384                           POSTDEC2 equ 0FDDh ;# 
   385  0000                     # 7000 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   386                           POSTINC2 equ 0FDEh ;# 
   387  0000                     # 7007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   388                           INDF2 equ 0FDFh ;# 
   389  0000                     # 7014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   390                           BSR equ 0FE0h ;# 
   391  0000                     # 7021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   392                           FSR1 equ 0FE1h ;# 
   393  0000                     # 7028 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   394                           FSR1L equ 0FE1h ;# 
   395  0000                     # 7035 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   396                           FSR1H equ 0FE2h ;# 
   397  0000                     # 7042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   398                           PLUSW1 equ 0FE3h ;# 
   399  0000                     # 7049 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   400                           PREINC1 equ 0FE4h ;# 
   401  0000                     # 7056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   402                           POSTDEC1 equ 0FE5h ;# 
   403  0000                     # 7063 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   404                           POSTINC1 equ 0FE6h ;# 
   405  0000                     # 7070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   406                           INDF1 equ 0FE7h ;# 
   407  0000                     # 7077 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   408                           WREG equ 0FE8h ;# 
   409  0000                     # 7084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   410                           FSR0 equ 0FE9h ;# 
   411  0000                     # 7091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   412                           FSR0L equ 0FE9h ;# 
   413  0000                     # 7098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   414                           FSR0H equ 0FEAh ;# 
   415  0000                     # 7105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   416                           PLUSW0 equ 0FEBh ;# 
   417  0000                     # 7112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   418                           PREINC0 equ 0FECh ;# 
   419  0000                     # 7119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   420                           POSTDEC0 equ 0FEDh ;# 
   421  0000                     # 7126 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   422                           POSTINC0 equ 0FEEh ;# 
   423  0000                     # 7133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   424                           INDF0 equ 0FEFh ;# 
   425  0000                     # 7140 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   426                           INTCON3 equ 0FF0h ;# 
   427  0000                     # 7232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   428                           INTCON2 equ 0FF1h ;# 
   429  0000                     # 7309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   430                           INTCON equ 0FF2h ;# 
   431  0000                     # 7426 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   432                           PROD equ 0FF3h ;# 
   433  0000                     # 7433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   434                           PRODL equ 0FF3h ;# 
   435  0000                     # 7440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   436                           PRODH equ 0FF4h ;# 
   437  0000                     # 7447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   438                           TABLAT equ 0FF5h ;# 
   439  0000                     # 7456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   440                           TBLPTR equ 0FF6h ;# 
   441  0000                     # 7463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   442                           TBLPTRL equ 0FF6h ;# 
   443  0000                     # 7470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   444                           TBLPTRH equ 0FF7h ;# 
   445  0000                     # 7477 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   446                           TBLPTRU equ 0FF8h ;# 
   447  0000                     # 7486 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   448                           PCLAT equ 0FF9h ;# 
   449  0000                     # 7493 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   450                           PC equ 0FF9h ;# 
   451  0000                     # 7500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   452                           PCL equ 0FF9h ;# 
   453  0000                     # 7507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   454                           PCLATH equ 0FFAh ;# 
   455  0000                     # 7514 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   456                           PCLATU equ 0FFBh ;# 
   457  0000                     # 7521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   458                           STKPTR equ 0FFCh ;# 
   459  0000                     # 7595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   460                           TOS equ 0FFDh ;# 
   461  0000                     # 7602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   462                           TOSL equ 0FFDh ;# 
   463  0000                     # 7609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   464                           TOSH equ 0FFEh ;# 
   465  0000                     # 7616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4431.h"
   466                           TOSU equ 0FFFh ;# 
   467  0000                     	FNCALL	_main,_calculatePWM
   468                           	FNCALL	_main,_init_ISR
   469                           	FNCALL	_main,_init_PWM
   470                           	FNCALL	_main,_init_QEI
   471                           	FNCALL	_main,_init_TMR1
   472                           	FNCALL	_main,_init_UART
   473                           	FNCALL	_main,_init_VNHIO
   474                           	FNCALL	_main,_int2char
   475                           	FNCALL	_main,_write_PWM
   476                           	FNCALL	_int2char,___lwdiv
   477                           	FNCALL	_int2char,___lwmod
   478                           	FNCALL	_init_PWM,_write_PWM
   479                           	FNCALL	_calculatePWM,___aldiv
   480                           	FNCALL	_calculatePWM,___lldiv
   481                           	FNCALL	_calculatePWM,___lmul
   482                           	FNROOT	_main
   483                           	FNCALL	intlevel2,_ISR_high
   484                           	global	intlevel2
   485                           	FNROOT	intlevel2
   486                           	global	_ref_vel
   487                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   488                           global __pidataCOMRAM
   489                           __pidataCOMRAM:
   490  000934                     	file	"main.c"
   491                           	line	46
   492                           
   493                           ;initializer for _ref_vel
   494                           	dw	(0320h)&0ffffh
   495  000934  0320               	global	_PID
   496                           	global	_aceleracion
   497                           	global	_volt
   498                           	global	_suma_error
   499                           	global	_string_vel
   500                           	global	_error_ant
   501                           	global	_error
   502                           	global	_cursor
   503                           	global	_GPREG
   504                           	global	int2char@string
   505                           	global	_vel
   506                           	global	_PR5
   507                           _PR5	set	0xF90
   508  0000                     	global	_CAP1BUFH
   509                           _CAP1BUFH	set	0xF69
   510  0000                     	global	_CAP1BUFL
   511                           _CAP1BUFL	set	0xF68
   512  0000                     	global	_VELRL
   513                           _VELRL	set	0xF68
   514  0000                     	global	_VELRH
   515                           _VELRH	set	0xF69
   516  0000                     	global	_TRISC6
   517                           _TRISC6	set	0x7CA6
   518  0000                     	global	_CAP1REN
   519                           _CAP1REN	set	0x7B1E
   520  0000                     	global	_TRISA5
   521                           _TRISA5	set	0x7C95
   522  0000                     	global	_TRISA4
   523                           _TRISA4	set	0x7C94
   524  0000                     	global	_LATC2
   525                           _LATC2	set	0x7C5A
   526  0000                     	global	_TRISC2
   527                           _TRISC2	set	0x7CA2
   528  0000                     	global	_TRISA1
   529                           _TRISA1	set	0x7C91
   530  0000                     	global	_TRISA0
   531                           _TRISA0	set	0x7C90
   532  0000                     	global	_LATA1
   533                           _LATA1	set	0x7C49
   534  0000                     	global	_LATA0
   535                           _LATA0	set	0x7C48
   536  0000                     	global	_TMR1
   537                           _TMR1	set	0xFCE
   538  0000                     	global	_SPBRG
   539                           _SPBRG	set	0xFAF
   540  0000                     	global	_BAUDCON
   541                           _BAUDCON	set	0xFAA
   542  0000                     	global	_RCSTA
   543                           _RCSTA	set	0xFAB
   544  0000                     	global	_TXSTA
   545                           _TXSTA	set	0xFAC
   546  0000                     	global	_QEICON
   547                           _QEICON	set	0xFB6
   548  0000                     	global	_T5CON
   549                           _T5CON	set	0xFB7
   550  0000                     	global	_CCPR1L
   551                           _CCPR1L	set	0xFBE
   552  0000                     	global	_CCP1CONbits
   553                           _CCP1CONbits	set	0xFBD
   554  0000                     	global	_PR2
   555                           _PR2	set	0xFCB
   556  0000                     	global	_T2CON
   557                           _T2CON	set	0xFCA
   558  0000                     	global	_CCP1CON
   559                           _CCP1CON	set	0xFBD
   560  0000                     	global	_ANSEL1
   561                           _ANSEL1	set	0xFB9
   562  0000                     	global	_ANSEL0
   563                           _ANSEL0	set	0xFB8
   564  0000                     	global	_T1CON
   565                           _T1CON	set	0xFCD
   566  0000                     	global	_OSCCON
   567                           _OSCCON	set	0xFD3
   568  0000                     	global	_TXREG
   569                           _TXREG	set	0xFAD
   570  0000                     	global	_IPEN
   571                           _IPEN	set	0x7E87
   572  0000                     	global	_TXIP
   573                           _TXIP	set	0x7CFC
   574  0000                     	global	_TMR5IP
   575                           _TMR5IP	set	0x7D28
   576  0000                     	global	_TMR1IP
   577                           _TMR1IP	set	0x7CF8
   578  0000                     	global	_TMR5ON
   579                           _TMR5ON	set	0x7DB8
   580  0000                     	global	_TXIF
   581                           _TXIF	set	0x7CF4
   582  0000                     	global	_TXIE
   583                           _TXIE	set	0x7CEC
   584  0000                     	global	_TMR1ON
   585                           _TMR1ON	set	0x7E68
   586  0000                     	global	_TMR1IF
   587                           _TMR1IF	set	0x7CF0
   588  0000                     	global	_TMR1IE
   589                           _TMR1IE	set	0x7CE8
   590  0000                     	global	_TMR5IF
   591                           _TMR5IF	set	0x7D20
   592  0000                     	global	_TMR5IE
   593                           _TMR5IE	set	0x7D18
   594  0000                     	global	_GIE
   595                           _GIE	set	0x7F97
   596  0000                     ; #config settings
   597                           global __CFG_OSC$RC
   598                           __CFG_OSC$RC equ 0x0
   599  0000                     global __CFG_FCMEN$ON
   600                           __CFG_FCMEN$ON equ 0x0
   601  0000                     global __CFG_IESO$ON
   602                           __CFG_IESO$ON equ 0x0
   603  0000                     global __CFG_PWRTEN$OFF
   604                           __CFG_PWRTEN$OFF equ 0x0
   605  0000                     global __CFG_BOREN$ON
   606                           __CFG_BOREN$ON equ 0x0
   607  0000                     global __CFG_WDTEN$OFF
   608                           __CFG_WDTEN$OFF equ 0x0
   609  0000                     global __CFG_WDPS$32768
   610                           __CFG_WDPS$32768 equ 0x0
   611  0000                     global __CFG_WINEN$OFF
   612                           __CFG_WINEN$OFF equ 0x0
   613  0000                     global __CFG_PWMPIN$OFF
   614                           __CFG_PWMPIN$OFF equ 0x0
   615  0000                     global __CFG_LPOL$HIGH
   616                           __CFG_LPOL$HIGH equ 0x0
   617  0000                     global __CFG_HPOL$HIGH
   618                           __CFG_HPOL$HIGH equ 0x0
   619  0000                     global __CFG_T1OSCMX$ON
   620                           __CFG_T1OSCMX$ON equ 0x0
   621  0000                     global __CFG_FLTAMX$RC1
   622                           __CFG_FLTAMX$RC1 equ 0x0
   623  0000                     global __CFG_SSPMX$RC7
   624                           __CFG_SSPMX$RC7 equ 0x0
   625  0000                     global __CFG_PWM4MX$RB5
   626                           __CFG_PWM4MX$RB5 equ 0x0
   627  0000                     global __CFG_EXCLKMX$RC3
   628                           __CFG_EXCLKMX$RC3 equ 0x0
   629  0000                     global __CFG_MCLRE$ON
   630                           __CFG_MCLRE$ON equ 0x0
   631  0000                     global __CFG_STVREN$ON
   632                           __CFG_STVREN$ON equ 0x0
   633  0000                     global __CFG_LVP$OFF
   634                           __CFG_LVP$OFF equ 0x0
   635  0000                     global __CFG_CP0$OFF
   636                           __CFG_CP0$OFF equ 0x0
   637  0000                     global __CFG_CP1$OFF
   638                           __CFG_CP1$OFF equ 0x0
   639  0000                     global __CFG_CP2$OFF
   640                           __CFG_CP2$OFF equ 0x0
   641  0000                     global __CFG_CP3$OFF
   642                           __CFG_CP3$OFF equ 0x0
   643  0000                     global __CFG_CPB$OFF
   644                           __CFG_CPB$OFF equ 0x0
   645  0000                     global __CFG_CPD$OFF
   646                           __CFG_CPD$OFF equ 0x0
   647  0000                     global __CFG_WRT0$OFF
   648                           __CFG_WRT0$OFF equ 0x0
   649  0000                     global __CFG_WRT1$OFF
   650                           __CFG_WRT1$OFF equ 0x0
   651  0000                     global __CFG_WRT2$OFF
   652                           __CFG_WRT2$OFF equ 0x0
   653  0000                     global __CFG_WRT3$OFF
   654                           __CFG_WRT3$OFF equ 0x0
   655  0000                     global __CFG_WRTC$OFF
   656                           __CFG_WRTC$OFF equ 0x0
   657  0000                     global __CFG_WRTB$OFF
   658                           __CFG_WRTB$OFF equ 0x0
   659  0000                     global __CFG_WRTD$OFF
   660                           __CFG_WRTD$OFF equ 0x0
   661  0000                     global __CFG_EBTR0$OFF
   662                           __CFG_EBTR0$OFF equ 0x0
   663  0000                     global __CFG_EBTR1$OFF
   664                           __CFG_EBTR1$OFF equ 0x0
   665  0000                     global __CFG_EBTR2$OFF
   666                           __CFG_EBTR2$OFF equ 0x0
   667  0000                     global __CFG_EBTR3$OFF
   668                           __CFG_EBTR3$OFF equ 0x0
   669  0000                     global __CFG_EBTRB$OFF
   670                           __CFG_EBTRB$OFF equ 0x0
   671  0000                     	file	"C:\Users\MarioVL\AppData\Local\Temp\s8eg."
   672                           	line	#
   673                           psect	cinit,class=CODE,delta=1,reloc=2
   674                           global __pcinit
   675                           __pcinit:
   676  000854                     global start_initialization
   677                           start_initialization:
   678  000854                     
   679                           global __initialization
   680                           __initialization:
   681  000854                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   682                           global __pbssCOMRAM
   683                           __pbssCOMRAM:
   684  000001                     	global	_PID
   685                           _PID:
   686  000001                            ds      12
   687  000001                     	global	_aceleracion
   688                           _aceleracion:
   689  00000D                            ds      4
   690  00000D                     	global	_volt
   691                           _volt:
   692  000011                            ds      4
   693  000011                     	global	_suma_error
   694                           _suma_error:
   695  000015                            ds      4
   696  000015                     	global	_string_input
   697                           _string_input:
   698  000019                            ds      2
   699  000019                     	global	_string_vel
   700                           _string_vel:
   701  00001B                            ds      2
   702  00001B                     	global	_vel_ant
   703                           	global	_vel_ant
   704                           _vel_ant:
   705  00001D                            ds      2
   706  00001D                     	global	_error_ant
   707                           _error_ant:
   708  00001F                            ds      2
   709  00001F                     	global	_error
   710                           _error:
   711  000021                            ds      2
   712  000021                     	global	_input
   713                           	global	_input
   714                           _input:
   715  000023                            ds      2
   716  000023                     	global	_cursor
   717                           _cursor:
   718  000025                            ds      1
   719  000025                     	global	_vel_rpm
   720                           	global	_vel_rpm
   721                           _vel_rpm:
   722  000026                            ds      1
   723  000026                     	global	_GPREG
   724                           _GPREG:
   725  000027                            ds      1
   726  000027                     int2char@string:
   727  000028                            ds      5
   728  000028                     	global	_vel
   729                           _vel:
   730  00002D                            ds      2
   731  00002D                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   732                           global __pdataCOMRAM
   733                           __pdataCOMRAM:
   734  000059                     	file	"main.c"
   735                           	line	46
   736                           	global	_ref_vel
   737                           _ref_vel:
   738  000059                            ds      2
   739  000059                     	file	"C:\Users\MarioVL\AppData\Local\Temp\s8eg."
   740                           	line	#
   741                           psect	cinit
   742                           ; Initialize objects allocated to COMRAM (2 bytes)
   743                           	global __pidataCOMRAM
   744                           	; load TBLPTR registers with __pidataCOMRAM
   745                           	movlw	low (__pidataCOMRAM)
   746  000854  0E34               	movwf	tblptrl
   747  000856  6EF6               	movlw	high(__pidataCOMRAM)
   748  000858  0E09               	movwf	tblptrh
   749  00085A  6EF7               	movlw	low highword(__pidataCOMRAM)
   750  00085C  0E00               	movwf	tblptru
   751  00085E  6EF8               	tblrd*+ ;fetch initializer
   752  000860  0009               	movff	tablat, __pdataCOMRAM+0		
   753  000862  CFF5 F059          	tblrd*+ ;fetch initializer
   754  000866  0009               	movff	tablat, __pdataCOMRAM+1		
   755  000868  CFF5 F05A          	line	#
   756                           ; Clear objects allocated to COMRAM (46 bytes)
   757                           	global __pbssCOMRAM
   758                           lfsr	0,__pbssCOMRAM
   759  00086C  EE00  F001         movlw	46
   760  000870  0E2E               clear_0:
   761  000872                     clrf	postinc0,c
   762  000872  6AEE               decf	wreg
   763  000874  06E8               bnz	clear_0
   764  000876  E1FD               psect cinit,class=CODE,delta=1
   765                           global end_of_initialization,__end_of__initialization
   766                           
   767                           ;End of C runtime variable initialization code
   768                           
   769                           end_of_initialization:
   770  000878                     __end_of__initialization:
   771  000878                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   772  000878  905B               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   773  00087A  925B               movlb 0
   774  00087C  0100               goto _main	;jump to C main() function
   775  00087E  EF79  F002         psect	cstackBANK0,class=BANK0,space=1,noexec
   776                           global __pcstackBANK0
   777                           __pcstackBANK0:
   778  000060                     ?_write_PWM:	; 1 bytes @ 0x0
   779  000060                     	global	write_PWM@dutyCycle
   780                           write_PWM@dutyCycle:	; 2 bytes @ 0x0
   781  000060                     	ds   2
   782  000060                     ??_write_PWM:	; 1 bytes @ 0x2
   783  000062                     	ds   1
   784  000062                     	global	main@counter
   785                           main@counter:	; 1 bytes @ 0x3
   786  000063                     	ds   1
   787  000063                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   788                           global __pcstackCOMRAM
   789                           __pcstackCOMRAM:
   790  00002F                     ?_init_VNHIO:	; 1 bytes @ 0x0
   791  00002F                     ?_init_TMR1:	; 1 bytes @ 0x0
   792  00002F                     ?_init_PWM:	; 1 bytes @ 0x0
   793  00002F                     ?_init_QEI:	; 1 bytes @ 0x0
   794  00002F                     ?_init_UART:	; 1 bytes @ 0x0
   795  00002F                     ?_init_ISR:	; 1 bytes @ 0x0
   796  00002F                     ?_ISR_high:	; 1 bytes @ 0x0
   797  00002F                     ??_ISR_high:	; 1 bytes @ 0x0
   798  00002F                     ?_main:	; 1 bytes @ 0x0
   799  00002F                     calculatePWM@setpoint:	; 1 bytes @ 0x0
   800  00002F                     	ds   4
   801  00002F                     ??_init_VNHIO:	; 1 bytes @ 0x4
   802  000033                     ??_init_TMR1:	; 1 bytes @ 0x4
   803  000033                     ??_init_QEI:	; 1 bytes @ 0x4
   804  000033                     ??_init_UART:	; 1 bytes @ 0x4
   805  000033                     ??_init_ISR:	; 1 bytes @ 0x4
   806  000033                     	global	?___lwdiv
   807                           ?___lwdiv:	; 2 bytes @ 0x4
   808  000033                     	global	?___lwmod
   809                           ?___lwmod:	; 2 bytes @ 0x4
   810  000033                     	global	?___lmul
   811                           ?___lmul:	; 4 bytes @ 0x4
   812  000033                     	global	?___lldiv
   813                           ?___lldiv:	; 4 bytes @ 0x4
   814  000033                     	global	___lwdiv@dividend
   815                           ___lwdiv@dividend:	; 2 bytes @ 0x4
   816  000033                     	global	___lwmod@dividend
   817                           ___lwmod@dividend:	; 2 bytes @ 0x4
   818  000033                     	global	___lmul@multiplier
   819                           ___lmul@multiplier:	; 4 bytes @ 0x4
   820  000033                     	global	___lldiv@dividend
   821                           ___lldiv@dividend:	; 4 bytes @ 0x4
   822  000033                     	ds   2
   823  000033                     	global	___lwdiv@divisor
   824                           ___lwdiv@divisor:	; 2 bytes @ 0x6
   825  000035                     	global	___lwmod@divisor
   826                           ___lwmod@divisor:	; 2 bytes @ 0x6
   827  000035                     	ds   2
   828  000035                     ??___lwdiv:	; 1 bytes @ 0x8
   829  000037                     ??___lwmod:	; 1 bytes @ 0x8
   830  000037                     	global	___lwdiv@counter
   831                           ___lwdiv@counter:	; 1 bytes @ 0x8
   832  000037                     	global	___lwmod@counter
   833                           ___lwmod@counter:	; 1 bytes @ 0x8
   834  000037                     	global	___lmul@multiplicand
   835                           ___lmul@multiplicand:	; 4 bytes @ 0x8
   836  000037                     	global	___lldiv@divisor
   837                           ___lldiv@divisor:	; 4 bytes @ 0x8
   838  000037                     	ds   1
   839  000037                     	global	___lwdiv@quotient
   840                           ___lwdiv@quotient:	; 2 bytes @ 0x9
   841  000038                     	ds   2
   842  000038                     	global	?_int2char
   843                           ?_int2char:	; 2 bytes @ 0xB
   844  00003A                     	global	int2char@number
   845                           int2char@number:	; 2 bytes @ 0xB
   846  00003A                     	ds   1
   847  00003A                     ??___lmul:	; 1 bytes @ 0xC
   848  00003B                     ??___lldiv:	; 1 bytes @ 0xC
   849  00003B                     	global	___lmul@product
   850                           ___lmul@product:	; 4 bytes @ 0xC
   851  00003B                     	global	___lldiv@quotient
   852                           ___lldiv@quotient:	; 4 bytes @ 0xC
   853  00003B                     	ds   1
   854  00003B                     ??_int2char:	; 1 bytes @ 0xD
   855  00003C                     	global	int2char@num
   856                           int2char@num:	; 2 bytes @ 0xD
   857  00003C                     	ds   2
   858  00003C                     	global	int2char@digit
   859                           int2char@digit:	; 1 bytes @ 0xF
   860  00003E                     	ds   1
   861  00003E                     	global	?___aldiv
   862                           ?___aldiv:	; 4 bytes @ 0x10
   863  00003F                     	global	___lldiv@counter
   864                           ___lldiv@counter:	; 1 bytes @ 0x10
   865  00003F                     	global	___aldiv@dividend
   866                           ___aldiv@dividend:	; 4 bytes @ 0x10
   867  00003F                     	ds   4
   868  00003F                     	global	___aldiv@divisor
   869                           ___aldiv@divisor:	; 4 bytes @ 0x14
   870  000043                     	ds   4
   871  000043                     ??___aldiv:	; 1 bytes @ 0x18
   872  000047                     	global	___aldiv@counter
   873                           ___aldiv@counter:	; 1 bytes @ 0x18
   874  000047                     	ds   1
   875  000047                     	global	___aldiv@sign
   876                           ___aldiv@sign:	; 1 bytes @ 0x19
   877  000048                     	ds   1
   878  000048                     	global	___aldiv@quotient
   879                           ___aldiv@quotient:	; 4 bytes @ 0x1A
   880  000049                     	ds   4
   881  000049                     	global	?_calculatePWM
   882                           ?_calculatePWM:	; 4 bytes @ 0x1E
   883  00004D                     	ds   4
   884  00004D                     ??_calculatePWM:	; 1 bytes @ 0x22
   885  000051                     	ds   8
   886  000051                     ??_init_PWM:	; 1 bytes @ 0x2A
   887  000059                     ??_main:	; 1 bytes @ 0x2A
   888  000059                     ;!
   889                           ;!Data Sizes:
   890                           ;!    Strings     0
   891                           ;!    Constant    0
   892                           ;!    Data        2
   893                           ;!    BSS         46
   894                           ;!    Persistent  0
   895                           ;!    Stack       0
   896                           ;!
   897                           ;!Auto Spaces:
   898                           ;!    Space          Size  Autos    Used
   899                           ;!    COMRAM           94     42      90
   900                           ;!    BANK0           160      4       4
   901                           ;!    BANK1           256      0       0
   902                           ;!    BANK2           244      0       0
   903                           
   904                           ;!
   905                           ;!Pointer List with Targets:
   906                           ;!
   907                           ;!    string_input	PTR unsigned char  size(2) Largest target is 0
   908                           ;!		 -> NULL(NULL[0]), 
   909                           ;!
   910                           ;!    sp__int2char	PTR unsigned char  size(2) Largest target is 5
   911                           ;!		 -> int2char@string(COMRAM[5]), 
   912                           ;!
   913                           ;!    string_vel	PTR unsigned char  size(2) Largest target is 5
   914                           ;!		 -> NULL(NULL[0]), int2char@string(COMRAM[5]), 
   915                           ;!
   916                           
   917                           
   918                           ;!
   919                           ;!Critical Paths under _main in COMRAM
   920                           ;!
   921                           ;!    _main->_calculatePWM
   922                           ;!    _int2char->___lwdiv
   923                           ;!    _write_PWM->_calculatePWM
   924                           ;!    _calculatePWM->___aldiv
   925                           ;!    ___aldiv->___lmul
   926                           ;!
   927                           ;!Critical Paths under _ISR_high in COMRAM
   928                           ;!
   929                           ;!    None.
   930                           ;!
   931                           ;!Critical Paths under _main in BANK0
   932                           ;!
   933                           ;!    _main->_write_PWM
   934                           ;!    _init_PWM->_write_PWM
   935                           ;!
   936                           ;!Critical Paths under _ISR_high in BANK0
   937                           ;!
   938                           ;!    None.
   939                           ;!
   940                           ;!Critical Paths under _main in BANK1
   941                           ;!
   942                           ;!    None.
   943                           ;!
   944                           ;!Critical Paths under _ISR_high in BANK1
   945                           ;!
   946                           ;!    None.
   947                           ;!
   948                           ;!Critical Paths under _main in BANK2
   949                           ;!
   950                           ;!    None.
   951                           ;!
   952                           ;!Critical Paths under _ISR_high in BANK2
   953                           ;!
   954                           ;!    None.
   955                           
   956 ;;
   957 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   958 ;;
   959                           
   960                           ;!
   961                           ;!Call Graph Tables:
   962                           ;!
   963                           ;! ---------------------------------------------------------------------------------
   964                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   965                           ;! ---------------------------------------------------------------------------------
   966                           ;! (0) _main                                                 1     1      0    4345
   967                           ;!                                              3 BANK0      1     1      0
   968                           ;!                       _calculatePWM
   969                           ;!                           _init_ISR
   970                           ;!                           _init_PWM
   971                           ;!                           _init_QEI
   972                           ;!                          _init_TMR1
   973                           ;!                          _init_UART
   974                           ;!                         _init_VNHIO
   975                           ;!                           _int2char
   976                           ;!                          _write_PWM
   977                           ;! ---------------------------------------------------------------------------------
   978                           ;! (1) _int2char                                             5     3      2    1090
   979                           ;!                                             11 COMRAM     5     3      2
   980                           ;!                            ___lwdiv
   981                           ;!                            ___lwmod
   982                           ;! ---------------------------------------------------------------------------------
   983                           ;! (2) ___lwmod                                              5     1      4     412
   984                           ;!                                              4 COMRAM     5     1      4
   985                           ;! ---------------------------------------------------------------------------------
   986                           ;! (2) ___lwdiv                                              7     3      4     421
   987                           ;!                                              4 COMRAM     7     3      4
   988                           ;! ---------------------------------------------------------------------------------
   989                           ;! (1) _init_VNHIO                                           0     0      0       0
   990                           ;! ---------------------------------------------------------------------------------
   991                           ;! (1) _init_UART                                            0     0      0       0
   992                           ;! ---------------------------------------------------------------------------------
   993                           ;! (1) _init_TMR1                                            0     0      0       0
   994                           ;! ---------------------------------------------------------------------------------
   995                           ;! (1) _init_QEI                                             0     0      0       0
   996                           ;! ---------------------------------------------------------------------------------
   997                           ;! (1) _init_PWM                                             0     0      0     245
   998                           ;!                          _write_PWM
   999                           ;! ---------------------------------------------------------------------------------
  1000                           ;! (1) _write_PWM                                            3     1      2     245
  1001                           ;!                                              0 BANK0      3     1      2
  1002                           ;!                       _calculatePWM (ARG)
  1003                           ;! ---------------------------------------------------------------------------------
  1004                           ;! (1) _init_ISR                                             0     0      0       0
  1005                           ;! ---------------------------------------------------------------------------------
  1006                           ;! (1) _calculatePWM                                        13     9      4    2762
  1007                           ;!                                             30 COMRAM    12     8      4
  1008                           ;!                            ___aldiv
  1009                           ;!                            ___lldiv
  1010                           ;!                             ___lmul
  1011                           ;! ---------------------------------------------------------------------------------
  1012                           ;! (2) ___lmul                                              12     4      8    1356
  1013                           ;!                                              4 COMRAM    12     4      8
  1014                           ;! ---------------------------------------------------------------------------------
  1015                           ;! (2) ___lldiv                                             13     5      8     421
  1016                           ;!                                              4 COMRAM    13     5      8
  1017                           ;! ---------------------------------------------------------------------------------
  1018                           ;! (2) ___aldiv                                             14     6      8     985
  1019                           ;!                                             16 COMRAM    14     6      8
  1020                           ;!                             ___lmul (ARG)
  1021                           ;! ---------------------------------------------------------------------------------
  1022                           ;! Estimated maximum stack depth 2
  1023                           ;! ---------------------------------------------------------------------------------
  1024                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1025                           ;! ---------------------------------------------------------------------------------
  1026                           ;! (3) _ISR_high                                             4     4      0       0
  1027                           ;!                                              0 COMRAM     4     4      0
  1028                           ;! ---------------------------------------------------------------------------------
  1029                           ;! Estimated maximum stack depth 3
  1030                           ;! ---------------------------------------------------------------------------------
  1031                           ;!
  1032                           ;! Call Graph Graphs:
  1033                           ;!
  1034                           ;! _main (ROOT)
  1035                           ;!   _calculatePWM
  1036                           ;!     ___aldiv
  1037                           ;!       ___lmul (ARG)
  1038                           ;!     ___lldiv
  1039                           ;!     ___lmul
  1040                           ;!   _init_ISR
  1041                           ;!   _init_PWM
  1042                           ;!     _write_PWM
  1043                           ;!       _calculatePWM (ARG)
  1044                           ;!         ___aldiv
  1045                           ;!           ___lmul (ARG)
  1046                           ;!         ___lldiv
  1047                           ;!         ___lmul
  1048                           ;!   _init_QEI
  1049                           ;!   _init_TMR1
  1050                           ;!   _init_UART
  1051                           ;!   _init_VNHIO
  1052                           ;!   _int2char
  1053                           ;!     ___lwdiv
  1054                           ;!     ___lwmod
  1055                           ;!   _write_PWM
  1056                           ;!     _calculatePWM (ARG)
  1057                           ;!       ___aldiv
  1058                           ;!         ___lmul (ARG)
  1059                           ;!       ___lldiv
  1060                           ;!       ___lmul
  1061                           ;!
  1062                           ;! _ISR_high (ROOT)
  1063                           ;!
  1064                           
  1065                           ;! Address spaces:
  1066                           
  1067                           ;!Name               Size   Autos  Total    Cost      Usage
  1068                           ;!BIGRAM             2F3      0       0      10        0.0%
  1069                           ;!EEDATA             100      0       0       0        0.0%
  1070                           ;!BITBANK1           100      0       0       6        0.0%
  1071                           ;!BANK1              100      0       0       7        0.0%
  1072                           ;!BITBANK2            F4      0       0       8        0.0%
  1073                           ;!BANK2               F4      0       0       9        0.0%
  1074                           ;!BITBANK0            A0      0       0       3        0.0%
  1075                           ;!BANK0               A0      4       4       4        2.5%
  1076                           ;!BITCOMRAM           5E      0       0       0        0.0%
  1077                           ;!COMRAM              5E     2A      5A       1       95.7%
  1078                           ;!BITSFR_5             0      0       0     200        0.0%
  1079                           ;!SFR_5                0      0       0     200        0.0%
  1080                           ;!BITSFR_4             0      0       0     200        0.0%
  1081                           ;!SFR_4                0      0       0     200        0.0%
  1082                           ;!BITSFR_3             0      0       0     200        0.0%
  1083                           ;!SFR_3                0      0       0     200        0.0%
  1084                           ;!BITSFR_2             0      0       0     200        0.0%
  1085                           ;!SFR_2                0      0       0     200        0.0%
  1086                           ;!BITSFR_1             0      0       0     200        0.0%
  1087                           ;!SFR_1                0      0       0     200        0.0%
  1088                           ;!BITSFR               0      0       0     200        0.0%
  1089                           ;!SFR                  0      0       0     200        0.0%
  1090                           ;!STACK                0      0       0       2        0.0%
  1091                           ;!NULL                 0      0       0       0        0.0%
  1092                           ;!ABS                  0      0      5E       5        0.0%
  1093                           ;!DATA                 0      0      5E      11        0.0%
  1094                           ;!CODE                 0      0       0       0        0.0%
  1095                           
  1096                           	global	_main
  1097                           
  1098 ;; *************** function _main *****************
  1099 ;; Defined at:
  1100 ;;		line 96 in file "main.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  counter         1    3[BANK0 ] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1114 ;;      Params:         0       0       0       0
  1115 ;;      Locals:         0       1       0       0
  1116 ;;      Temps:          0       0       0       0
  1117 ;;      Totals:         0       1       0       0
  1118 ;;Total ram usage:        1 bytes
  1119 ;; Hardware stack levels required when called:    3
  1120 ;; This function calls:
  1121 ;;		_calculatePWM
  1122 ;;		_init_ISR
  1123 ;;		_init_PWM
  1124 ;;		_init_QEI
  1125 ;;		_init_TMR1
  1126 ;;		_init_UART
  1127 ;;		_init_VNHIO
  1128 ;;		_int2char
  1129 ;;		_write_PWM
  1130 ;; This function is called by:
  1131 ;;		Startup code after reset
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1135                           	file	"main.c"
  1136                           	line	96
  1137                           global __ptext0
  1138                           __ptext0:
  1139  0004F2                     psect	text0
  1140                           	file	"main.c"
  1141                           	line	96
  1142                           	global	__size_of_main
  1143                           	__size_of_main	equ	__end_of_main-_main
  1144  0000                     	
  1145                           _main:
  1146  0004F2                     ;incstack = 0
  1147                           	opt	stack 28
  1148                           	line	98
  1149                           	
  1150                           l1580:
  1151  0004F2                     ;main.c: 98:     OSCCON = 0x70;
  1152                           	movlw	low(070h)
  1153  0004F2  0E70               	movwf	((c:4051)),c	;volatile
  1154  0004F4  6ED3               	line	100
  1155                           ;main.c: 100:     PID.Kp = 48087;
  1156                           	movlw	low(0BBD7h)
  1157  0004F6  0ED7               	movwf	((c:_PID)),c
  1158  0004F8  6E01               	movlw	high(0BBD7h)
  1159  0004FA  0EBB               	movwf	((c:_PID+1)),c
  1160  0004FC  6E02               	movlw	low highword(0BBD7h)
  1161  0004FE  0E00               	movwf	((c:_PID+2)),c
  1162  000500  6E03               	movlw	high highword(0BBD7h)
  1163  000502  0E00               	movwf	((c:_PID+3)),c
  1164  000504  6E04               	line	101
  1165                           ;main.c: 101:     PID.Ki = 64120;
  1166                           	movlw	low(0FA78h)
  1167  000506  0E78               	movwf	(0+((c:_PID)+04h)),c
  1168  000508  6E05               	movlw	high(0FA78h)
  1169  00050A  0EFA               	movwf	(1+((c:_PID)+04h)),c
  1170  00050C  6E06               	movlw	low highword(0FA78h)
  1171  00050E  0E00               	movwf	(2+((c:_PID)+04h)),c
  1172  000510  6E07               	movlw	high highword(0FA78h)
  1173  000512  0E00               	movwf	(3+((c:_PID)+04h)),c
  1174  000514  6E08               	line	102
  1175                           ;main.c: 102:     PID.Kd = 90;
  1176                           	movlw	low(05Ah)
  1177  000516  0E5A               	movwf	(0+((c:_PID)+08h)),c
  1178  000518  6E09               	movlw	high(05Ah)
  1179  00051A  0E00               	movwf	(1+((c:_PID)+08h)),c
  1180  00051C  6E0A               	movlw	low highword(05Ah)
  1181  00051E  0E00               	movwf	(2+((c:_PID)+08h)),c
  1182  000520  6E0B               	movlw	high highword(05Ah)
  1183  000522  0E00               	movwf	(3+((c:_PID)+08h)),c
  1184  000524  6E0C               	line	104
  1185                           	
  1186                           l1582:
  1187  000526                     ;main.c: 104:     init_VNHIO();
  1188                           	call	_init_VNHIO	;wreg free
  1189  000526  EC8A  F004         	line	105
  1190                           	
  1191                           l1584:
  1192  00052A                     ;main.c: 105:     init_TMR1();
  1193                           	call	_init_TMR1	;wreg free
  1194  00052A  EC93  F004         	line	106
  1195                           	
  1196                           l1586:
  1197  00052E                     ;main.c: 106:     init_PWM();
  1198                           	call	_init_PWM	;wreg free
  1199  00052E  EC64  F004         	line	107
  1200                           	
  1201                           l1588:
  1202  000532                     ;main.c: 107:     init_QEI();
  1203                           	call	_init_QEI	;wreg free
  1204  000532  EC55  F004         	line	108
  1205                           	
  1206                           l1590:
  1207  000536                     ;main.c: 108:     init_UART();
  1208                           	call	_init_UART	;wreg free
  1209  000536  EC7F  F004         	line	109
  1210                           	
  1211                           l1592:
  1212  00053A                     ;main.c: 109:     init_ISR();
  1213                           	call	_init_ISR	;wreg free
  1214  00053A  EC73  F004         	line	110
  1215                           	
  1216                           l1594:
  1217  00053E                     ;main.c: 110:     GPREG.DIRCTRL = 1;
  1218                           	bsf	((c:_GPREG)),c,0
  1219  00053E  8027               	line	112
  1220                           	
  1221                           l1596:
  1222  000540                     ;main.c: 112:     uint8_t counter = 0;
  1223                           	movlw	low(0)
  1224  000540  0E00               	movlb	0	; () banked
  1225  000542  0100               	movwf	((main@counter))&0ffh
  1226  000544  6F63               	goto	l1598
  1227  000546  EFA5  F002         	line	114
  1228                           ;main.c: 114:     while(1)
  1229                           	
  1230                           l154:; BSR set to: 0
  1231  00054A                     
  1232                           	line	116
  1233                           	
  1234                           l1598:
  1235  00054A                     ;main.c: 115:     {;main.c: 116:         if(1 == GPREG.STCTRL)
  1236                           	btfss	((c:_GPREG)),c,1
  1237  00054A  A227               	goto	u761
  1238  00054C  EFAA  F002         	goto	u760
  1239  000550  EFAC  F002         u761:
  1240  000554                     	goto	l1598
  1241  000554  EFA5  F002         u760:
  1242  000558                     	line	124
  1243                           	
  1244                           l1600:
  1245  000558                     ;main.c: 117:         {;main.c: 124:             write_PWM(calculatePWM(ref_vel));
  1246                           	movf	((c:_ref_vel)),c,w
  1247  000558  5059               	
  1248                           	call	_calculatePWM
  1249  00055A  EC75  F000         	movff	0+?_calculatePWM,(write_PWM@dutyCycle)
  1250  00055E  C04D  F060         	movff	1+?_calculatePWM,(write_PWM@dutyCycle+1)
  1251  000562  C04E  F061         	call	_write_PWM	;wreg free
  1252  000566  EC41  F004         	line	129
  1253                           	
  1254                           l1602:
  1255  00056A                     ;main.c: 129:             string_vel = int2char(vel);
  1256                           	movff	(c:_vel),(c:int2char@number)
  1257  00056A  C02D  F03A         	movff	(c:_vel+1),(c:int2char@number+1)
  1258  00056E  C02E  F03B         	call	_int2char	;wreg free
  1259  000572  EC77  F003         	movff	0+?_int2char,(c:_string_vel)
  1260  000576  C03A  F01B         	movff	1+?_int2char,(c:_string_vel+1)
  1261  00057A  C03B  F01C         	line	131
  1262                           	
  1263                           l1604:
  1264  00057E                     ;main.c: 131:             TXIE = 1;
  1265                           	bsf	c:(31980/8),(31980)&7	;volatile
  1266  00057E  889D               	line	133
  1267                           	
  1268                           l1606:
  1269  000580                     ;main.c: 133:             if(1 == GPREG.DIRCTRL)
  1270                           	btfss	((c:_GPREG)),c,0
  1271  000580  A027               	goto	u771
  1272  000582  EFC5  F002         	goto	u770
  1273  000586  EFC7  F002         u771:
  1274  00058A                     	goto	l156
  1275  00058A  EFCB  F002         u770:
  1276  00058E                     	line	136
  1277                           	
  1278                           l1608:
  1279  00058E                     ;main.c: 134:             {;main.c: 136:                 LATA0 = 0;
  1280                           	bcf	c:(31816/8),(31816)&7	;volatile
  1281  00058E  9089               	line	137
  1282                           ;main.c: 137:                 LATA1 = 1;
  1283                           	bsf	c:(31817/8),(31817)&7	;volatile
  1284  000590  8289               	line	138
  1285                           ;main.c: 138:             } else {
  1286                           	goto	l157
  1287  000592  EFCD  F002         	
  1288                           l156:
  1289  000596                     	line	140
  1290                           ;main.c: 140:                 LATA0 = 1;
  1291                           	bsf	c:(31816/8),(31816)&7	;volatile
  1292  000596  8089               	line	141
  1293                           ;main.c: 141:                 LATA1 = 0;
  1294                           	bcf	c:(31817/8),(31817)&7	;volatile
  1295  000598  9289               	line	142
  1296                           ;main.c: 142:             }
  1297                           	
  1298                           l157:
  1299  00059A                     	line	144
  1300                           ;main.c: 144:             GPREG.STCTRL = 0;
  1301                           	bcf	((c:_GPREG)),c,1
  1302  00059A  9227               	line	145
  1303                           ;main.c: 145:             TMR1ON = 1;
  1304                           	bsf	c:(32360/8),(32360)&7	;volatile
  1305  00059C  80CD               	goto	l1598
  1306  00059E  EFA5  F002         	line	146
  1307                           ;main.c: 146:         }
  1308                           	
  1309                           l155:
  1310  0005A2                     	goto	l1598
  1311  0005A2  EFA5  F002         	line	147
  1312                           ;main.c: 147:     }
  1313                           	
  1314                           l158:
  1315  0005A6                     	goto	l1598
  1316  0005A6  EFA5  F002         	
  1317                           l159:
  1318  0005AA                     	line	149
  1319                           	
  1320                           l160:
  1321  0005AA                     	global	start
  1322                           	goto	start
  1323  0005AA  EF73  F000         	opt stack 0
  1324                           GLOBAL	__end_of_main
  1325                           	__end_of_main:
  1326  0005AE                     	signat	_main,89
  1327                           	global	_int2char
  1328                           
  1329 ;; *************** function _int2char *****************
  1330 ;; Defined at:
  1331 ;;		line 274 in file "main.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  number          2   11[COMRAM] unsigned int 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  digit           1   15[COMRAM] char 
  1336 ;;  num             2   13[COMRAM] unsigned int 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  2   11[COMRAM] PTR unsigned char 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1346 ;;      Params:         2       0       0       0
  1347 ;;      Locals:         3       0       0       0
  1348 ;;      Temps:          0       0       0       0
  1349 ;;      Totals:         5       0       0       0
  1350 ;;Total ram usage:        5 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    2
  1353 ;; This function calls:
  1354 ;;		___lwdiv
  1355 ;;		___lwmod
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1361                           	line	274
  1362                           global __ptext1
  1363                           __ptext1:
  1364  0006EE                     psect	text1
  1365                           	file	"main.c"
  1366                           	line	274
  1367                           	global	__size_of_int2char
  1368                           	__size_of_int2char	equ	__end_of_int2char-_int2char
  1369  0000                     	
  1370                           _int2char:
  1371  0006EE                     ;incstack = 0
  1372                           	opt	stack 28
  1373                           	line	277
  1374                           	
  1375                           l1564:
  1376  0006EE                     ;main.c: 274: uint8_t * int2char(uint16_t number);main.c: 275: {;main.c: 276:     static
                                  uint8_t string[5];;main.c: 277:     uint16_t num = number;
  1377                           	movff	(c:int2char@number),(c:int2char@num)
  1378  0006EE  C03A  F03C         	movff	(c:int2char@number+1),(c:int2char@num+1)
  1379  0006F2  C03B  F03D         	line	279
  1380                           	
  1381                           l1566:
  1382  0006F6                     ;main.c: 279:     for(int8_t digit = 4; 0 <= digit; digit--)
  1383                           	movlw	low(04h)
  1384  0006F6  0E04               	movwf	((c:int2char@digit)),c
  1385  0006F8  6E3E               	goto	l1574
  1386  0006FA  EFA5  F003         	
  1387                           l194:
  1388  0006FE                     	line	281
  1389                           	
  1390                           l1568:
  1391  0006FE                     ;main.c: 280:     {;main.c: 281:         string[digit] = 0x30 + num%10;
  1392                           	movf	((c:int2char@digit)),c,w
  1393  0006FE  503E               	mullw	01h
  1394  000700  0D01               	movlw	low(int2char@string)
  1395  000702  0E28               	addwf	(prodl),c,w
  1396  000704  24F3               	movwf	c:fsr2l
  1397  000706  6ED9               	movlw	high(int2char@string)
  1398  000708  0E00               	addwfc	prod+1,w
  1399  00070A  20F4               	movwf	1+c:fsr2l
  1400  00070C  6EDA               	movff	(c:int2char@num),(c:___lwmod@dividend)
  1401  00070E  C03C  F033         	movff	(c:int2char@num+1),(c:___lwmod@dividend+1)
  1402  000712  C03D  F034         	movlw	high(0Ah)
  1403  000716  0E00               	movwf	((c:___lwmod@divisor+1)),c
  1404  000718  6E36               	movlw	low(0Ah)
  1405  00071A  0E0A               	movwf	((c:___lwmod@divisor)),c
  1406  00071C  6E35               	call	___lwmod	;wreg free
  1407  00071E  ECB5  F003         	movf	(0+?___lwmod),c,w
  1408  000722  5033               	addlw	low(030h)
  1409  000724  0F30               	movwf	indf2,c
  1410  000726  6EDF               
  1411                           	line	282
  1412                           	
  1413                           l1570:
  1414  000728                     ;main.c: 282:         num = num/10;
  1415                           	movff	(c:int2char@num),(c:___lwdiv@dividend)
  1416  000728  C03C  F033         	movff	(c:int2char@num+1),(c:___lwdiv@dividend+1)
  1417  00072C  C03D  F034         	movlw	high(0Ah)
  1418  000730  0E00               	movwf	((c:___lwdiv@divisor+1)),c
  1419  000732  6E36               	movlw	low(0Ah)
  1420  000734  0E0A               	movwf	((c:___lwdiv@divisor)),c
  1421  000736  6E35               	call	___lwdiv	;wreg free
  1422  000738  EC33  F003         	movff	0+?___lwdiv,(c:int2char@num)
  1423  00073C  C033  F03C         	movff	1+?___lwdiv,(c:int2char@num+1)
  1424  000740  C034  F03D         	line	283
  1425                           	
  1426                           l1572:
  1427  000744                     ;main.c: 283:     }
  1428                           	decf	((c:int2char@digit)),c
  1429  000744  063E               	goto	l1574
  1430  000746  EFA5  F003         	
  1431                           l193:
  1432  00074A                     	
  1433                           l1574:
  1434  00074A                     	btfsc	((c:int2char@digit)),c,7
  1435  00074A  BE3E               	goto	u750
  1436  00074C  EFAC  F003         	goto	u751
  1437  000750  EFAA  F003         
  1438                           u751:
  1439  000754                     	goto	l1568
  1440  000754  EF7F  F003         u750:
  1441  000758                     	goto	l1576
  1442  000758  EFAE  F003         	
  1443                           l195:
  1444  00075C                     	line	285
  1445                           	
  1446                           l1576:
  1447  00075C                     ;main.c: 285:     return string;
  1448                           		movlw	low(int2char@string)
  1449  00075C  0E28               	movwf	((c:?_int2char)),c
  1450  00075E  6E3A               	movlw	high(int2char@string)
  1451  000760  0E00               	movwf	((c:?_int2char+1)),c
  1452  000762  6E3B               
  1453                           	goto	l196
  1454  000764  EFB4  F003         	
  1455                           l1578:
  1456  000768                     	line	286
  1457                           	
  1458                           l196:
  1459  000768                     	return	;funcret
  1460  000768  0012               	opt stack 0
  1461                           GLOBAL	__end_of_int2char
  1462                           	__end_of_int2char:
  1463  00076A                     	signat	_int2char,4218
  1464                           	global	___lwmod
  1465                           
  1466 ;; *************** function ___lwmod *****************
  1467 ;; Defined at:
  1468 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  dividend        2    4[COMRAM] unsigned int 
  1471 ;;  divisor         2    6[COMRAM] unsigned int 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  counter         1    8[COMRAM] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  2    4[COMRAM] unsigned int 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1483 ;;      Params:         4       0       0       0
  1484 ;;      Locals:         1       0       0       0
  1485 ;;      Temps:          0       0       0       0
  1486 ;;      Totals:         5       0       0       0
  1487 ;;Total ram usage:        5 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_int2char
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           psect	text2,class=CODE,space=0,reloc=2,group=1
  1497                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1498                           	line	7
  1499                           global __ptext2
  1500                           __ptext2:
  1501  00076A                     psect	text2
  1502                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwmod.c"
  1503                           	line	7
  1504                           	global	__size_of___lwmod
  1505                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1506  0000                     	
  1507                           ___lwmod:
  1508  00076A                     ;incstack = 0
  1509                           	opt	stack 28
  1510                           	line	12
  1511                           	
  1512                           l1468:
  1513  00076A                     	movf	((c:___lwmod@divisor)),c,w
  1514  00076A  5035               iorwf	((c:___lwmod@divisor+1)),c,w
  1515  00076C  1036               	btfsc	status,2
  1516  00076E  B4D8               	goto	u691
  1517  000770  EFBC  F003         	goto	u690
  1518  000774  EFBE  F003         
  1519                           u691:
  1520  000778                     	goto	l700
  1521  000778  EFEC  F003         u690:
  1522  00077C                     	line	13
  1523                           	
  1524                           l1470:
  1525  00077C                     	movlw	low(01h)
  1526  00077C  0E01               	movwf	((c:___lwmod@counter)),c
  1527  00077E  6E37               	line	14
  1528                           	goto	l1474
  1529  000780  EFC8  F003         	
  1530                           l702:
  1531  000784                     	line	15
  1532                           	
  1533                           l1472:
  1534  000784                     	bcf	status,0
  1535  000784  90D8               	rlcf	((c:___lwmod@divisor)),c
  1536  000786  3635               	rlcf	((c:___lwmod@divisor+1)),c
  1537  000788  3636               	line	16
  1538                           	incf	((c:___lwmod@counter)),c
  1539  00078A  2A37               	goto	l1474
  1540  00078C  EFC8  F003         	line	17
  1541                           	
  1542                           l701:
  1543  000790                     	line	14
  1544                           	
  1545                           l1474:
  1546  000790                     	
  1547                           	btfss	((c:___lwmod@divisor+1)),c,(15)&7
  1548  000790  AE36               	goto	u701
  1549  000792  EFCD  F003         	goto	u700
  1550  000796  EFCF  F003         u701:
  1551  00079A                     	goto	l1472
  1552  00079A  EFC2  F003         u700:
  1553  00079E                     	goto	l1476
  1554  00079E  EFD3  F003         	
  1555                           l703:
  1556  0007A2                     	goto	l1476
  1557  0007A2  EFD3  F003         	line	18
  1558                           	
  1559                           l704:
  1560  0007A6                     	line	19
  1561                           	
  1562                           l1476:
  1563  0007A6                     		movf	((c:___lwmod@divisor)),c,w
  1564  0007A6  5035               	subwf	((c:___lwmod@dividend)),c,w
  1565  0007A8  5C33               	movf	((c:___lwmod@divisor+1)),c,w
  1566  0007AA  5036               	subwfb	((c:___lwmod@dividend+1)),c,w
  1567  0007AC  5834               	btfss	status,0
  1568  0007AE  A0D8               	goto	u711
  1569  0007B0  EFDC  F003         	goto	u710
  1570  0007B4  EFDE  F003         
  1571                           u711:
  1572  0007B8                     	goto	l1480
  1573  0007B8  EFE4  F003         u710:
  1574  0007BC                     	line	20
  1575                           	
  1576                           l1478:
  1577  0007BC                     	movf	((c:___lwmod@divisor)),c,w
  1578  0007BC  5035               	subwf	((c:___lwmod@dividend)),c
  1579  0007BE  5E33               	movf	((c:___lwmod@divisor+1)),c,w
  1580  0007C0  5036               	subwfb	((c:___lwmod@dividend+1)),c
  1581  0007C2  5A34               
  1582                           	goto	l1480
  1583  0007C4  EFE4  F003         	
  1584                           l705:
  1585  0007C8                     	line	21
  1586                           	
  1587                           l1480:
  1588  0007C8                     	bcf	status,0
  1589  0007C8  90D8               	rrcf	((c:___lwmod@divisor+1)),c
  1590  0007CA  3236               	rrcf	((c:___lwmod@divisor)),c
  1591  0007CC  3235               	line	22
  1592                           	
  1593                           l1482:
  1594  0007CE                     	decfsz	((c:___lwmod@counter)),c
  1595  0007CE  2E37               	
  1596                           	goto	l1476
  1597  0007D0  EFD3  F003         	goto	l700
  1598  0007D4  EFEC  F003         	
  1599                           l706:
  1600  0007D8                     	line	23
  1601                           	
  1602                           l700:
  1603  0007D8                     	line	24
  1604                           	movff	(c:___lwmod@dividend),(c:?___lwmod)
  1605  0007D8  C033  F033         	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
  1606  0007DC  C034  F034         	line	25
  1607                           	
  1608                           l707:
  1609  0007E0                     	return	;funcret
  1610  0007E0  0012               	opt stack 0
  1611                           GLOBAL	__end_of___lwmod
  1612                           	__end_of___lwmod:
  1613  0007E2                     	signat	___lwmod,8314
  1614                           	global	___lwdiv
  1615                           
  1616 ;; *************** function ___lwdiv *****************
  1617 ;; Defined at:
  1618 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  dividend        2    4[COMRAM] unsigned int 
  1621 ;;  divisor         2    6[COMRAM] unsigned int 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  quotient        2    9[COMRAM] unsigned int 
  1624 ;;  counter         1    8[COMRAM] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  2    4[COMRAM] unsigned int 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1634 ;;      Params:         4       0       0       0
  1635 ;;      Locals:         3       0       0       0
  1636 ;;      Temps:          0       0       0       0
  1637 ;;      Totals:         7       0       0       0
  1638 ;;Total ram usage:        7 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_int2char
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           psect	text3,class=CODE,space=0,reloc=2,group=1
  1648                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1649                           	line	7
  1650                           global __ptext3
  1651                           __ptext3:
  1652  000666                     psect	text3
  1653                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  1654                           	line	7
  1655                           	global	__size_of___lwdiv
  1656                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1657  0000                     	
  1658                           ___lwdiv:
  1659  000666                     ;incstack = 0
  1660                           	opt	stack 28
  1661                           	line	13
  1662                           	
  1663                           l1446:
  1664  000666                     	movlw	high(0)
  1665  000666  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  1666  000668  6E39               	movlw	low(0)
  1667  00066A  0E00               	movwf	((c:___lwdiv@quotient)),c
  1668  00066C  6E38               	line	14
  1669                           	
  1670                           l1448:
  1671  00066E                     	movf	((c:___lwdiv@divisor)),c,w
  1672  00066E  5035               iorwf	((c:___lwdiv@divisor+1)),c,w
  1673  000670  1036               	btfsc	status,2
  1674  000672  B4D8               	goto	u661
  1675  000674  EF3E  F003         	goto	u660
  1676  000678  EF40  F003         
  1677                           u661:
  1678  00067C                     	goto	l690
  1679  00067C  EF72  F003         u660:
  1680  000680                     	line	15
  1681                           	
  1682                           l1450:
  1683  000680                     	movlw	low(01h)
  1684  000680  0E01               	movwf	((c:___lwdiv@counter)),c
  1685  000682  6E37               	line	16
  1686                           	goto	l1454
  1687  000684  EF4A  F003         	
  1688                           l692:
  1689  000688                     	line	17
  1690                           	
  1691                           l1452:
  1692  000688                     	bcf	status,0
  1693  000688  90D8               	rlcf	((c:___lwdiv@divisor)),c
  1694  00068A  3635               	rlcf	((c:___lwdiv@divisor+1)),c
  1695  00068C  3636               	line	18
  1696                           	incf	((c:___lwdiv@counter)),c
  1697  00068E  2A37               	goto	l1454
  1698  000690  EF4A  F003         	line	19
  1699                           	
  1700                           l691:
  1701  000694                     	line	16
  1702                           	
  1703                           l1454:
  1704  000694                     	
  1705                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  1706  000694  AE36               	goto	u671
  1707  000696  EF4F  F003         	goto	u670
  1708  00069A  EF51  F003         u671:
  1709  00069E                     	goto	l1452
  1710  00069E  EF44  F003         u670:
  1711  0006A2                     	goto	l1456
  1712  0006A2  EF55  F003         	
  1713                           l693:
  1714  0006A6                     	goto	l1456
  1715  0006A6  EF55  F003         	line	20
  1716                           	
  1717                           l694:
  1718  0006AA                     	line	21
  1719                           	
  1720                           l1456:
  1721  0006AA                     	bcf	status,0
  1722  0006AA  90D8               	rlcf	((c:___lwdiv@quotient)),c
  1723  0006AC  3638               	rlcf	((c:___lwdiv@quotient+1)),c
  1724  0006AE  3639               	line	22
  1725                           	
  1726                           l1458:
  1727  0006B0                     		movf	((c:___lwdiv@divisor)),c,w
  1728  0006B0  5035               	subwf	((c:___lwdiv@dividend)),c,w
  1729  0006B2  5C33               	movf	((c:___lwdiv@divisor+1)),c,w
  1730  0006B4  5036               	subwfb	((c:___lwdiv@dividend+1)),c,w
  1731  0006B6  5834               	btfss	status,0
  1732  0006B8  A0D8               	goto	u681
  1733  0006BA  EF61  F003         	goto	u680
  1734  0006BE  EF63  F003         
  1735                           u681:
  1736  0006C2                     	goto	l1464
  1737  0006C2  EF6A  F003         u680:
  1738  0006C6                     	line	23
  1739                           	
  1740                           l1460:
  1741  0006C6                     	movf	((c:___lwdiv@divisor)),c,w
  1742  0006C6  5035               	subwf	((c:___lwdiv@dividend)),c
  1743  0006C8  5E33               	movf	((c:___lwdiv@divisor+1)),c,w
  1744  0006CA  5036               	subwfb	((c:___lwdiv@dividend+1)),c
  1745  0006CC  5A34               
  1746                           	line	24
  1747                           	
  1748                           l1462:
  1749  0006CE                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  1750  0006CE  8038               	goto	l1464
  1751  0006D0  EF6A  F003         	line	25
  1752                           	
  1753                           l695:
  1754  0006D4                     	line	26
  1755                           	
  1756                           l1464:
  1757  0006D4                     	bcf	status,0
  1758  0006D4  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  1759  0006D6  3236               	rrcf	((c:___lwdiv@divisor)),c
  1760  0006D8  3235               	line	27
  1761                           	
  1762                           l1466:
  1763  0006DA                     	decfsz	((c:___lwdiv@counter)),c
  1764  0006DA  2E37               	
  1765                           	goto	l1456
  1766  0006DC  EF55  F003         	goto	l690
  1767  0006E0  EF72  F003         	
  1768                           l696:
  1769  0006E4                     	line	28
  1770                           	
  1771                           l690:
  1772  0006E4                     	line	29
  1773                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  1774  0006E4  C038  F033         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  1775  0006E8  C039  F034         	line	30
  1776                           	
  1777                           l697:
  1778  0006EC                     	return	;funcret
  1779  0006EC  0012               	opt stack 0
  1780                           GLOBAL	__end_of___lwdiv
  1781                           	__end_of___lwdiv:
  1782  0006EE                     	signat	___lwdiv,8314
  1783                           	global	_init_VNHIO
  1784                           
  1785 ;; *************** function _init_VNHIO *****************
  1786 ;; Defined at:
  1787 ;;		line 199 in file "main.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1801 ;;      Params:         0       0       0       0
  1802 ;;      Locals:         0       0       0       0
  1803 ;;      Temps:          0       0       0       0
  1804 ;;      Totals:         0       0       0       0
  1805 ;;Total ram usage:        0 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    1
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1815                           	file	"main.c"
  1816                           	line	199
  1817                           global __ptext4
  1818                           __ptext4:
  1819  000914                     psect	text4
  1820                           	file	"main.c"
  1821                           	line	199
  1822                           	global	__size_of_init_VNHIO
  1823                           	__size_of_init_VNHIO	equ	__end_of_init_VNHIO-_init_VNHIO
  1824  0000                     	
  1825                           _init_VNHIO:
  1826  000914                     ;incstack = 0
  1827                           	opt	stack 29
  1828                           	line	201
  1829                           	
  1830                           l1484:
  1831  000914                     ;main.c: 201:     ANSEL0 = 0;
  1832                           	movlw	low(0)
  1833  000914  0E00               	movwf	((c:4024)),c	;volatile
  1834  000916  6EB8               	line	202
  1835                           ;main.c: 202:     ANSEL1 = 0;
  1836                           	movlw	low(0)
  1837  000918  0E00               	movwf	((c:4025)),c	;volatile
  1838  00091A  6EB9               	line	203
  1839                           	
  1840                           l1486:
  1841  00091C                     ;main.c: 203:     TRISA0 = 0;
  1842                           	bcf	c:(31888/8),(31888)&7	;volatile
  1843  00091C  9092               	line	204
  1844                           	
  1845                           l1488:
  1846  00091E                     ;main.c: 204:     TRISA1 = 0;
  1847                           	bcf	c:(31889/8),(31889)&7	;volatile
  1848  00091E  9292               	line	205
  1849                           	
  1850                           l1490:
  1851  000920                     ;main.c: 205:     LATA0 = 0;
  1852                           	bcf	c:(31816/8),(31816)&7	;volatile
  1853  000920  9089               	line	206
  1854                           	
  1855                           l1492:
  1856  000922                     ;main.c: 206:     LATA1 = 1;
  1857                           	bsf	c:(31817/8),(31817)&7	;volatile
  1858  000922  8289               	line	207
  1859                           	
  1860                           l173:
  1861  000924                     	return	;funcret
  1862  000924  0012               	opt stack 0
  1863                           GLOBAL	__end_of_init_VNHIO
  1864                           	__end_of_init_VNHIO:
  1865  000926                     	signat	_init_VNHIO,89
  1866                           	global	_init_UART
  1867                           
  1868 ;; *************** function _init_UART *****************
  1869 ;; Defined at:
  1870 ;;		line 243 in file "main.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1884 ;;      Params:         0       0       0       0
  1885 ;;      Locals:         0       0       0       0
  1886 ;;      Temps:          0       0       0       0
  1887 ;;      Totals:         0       0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1898                           	line	243
  1899                           global __ptext5
  1900                           __ptext5:
  1901  0008FE                     psect	text5
  1902                           	file	"main.c"
  1903                           	line	243
  1904                           	global	__size_of_init_UART
  1905                           	__size_of_init_UART	equ	__end_of_init_UART-_init_UART
  1906  0000                     	
  1907                           _init_UART:
  1908  0008FE                     ;incstack = 0
  1909                           	opt	stack 29
  1910                           	line	245
  1911                           	
  1912                           l1516:
  1913  0008FE                     ;main.c: 245:     GPREG.TXCTRL = 0;
  1914                           	bcf	((c:_GPREG)),c,4
  1915  0008FE  9827               	line	246
  1916                           ;main.c: 246:     TRISC6 = 0;
  1917                           	bcf	c:(31910/8),(31910)&7	;volatile
  1918  000900  9C94               	line	247
  1919                           	
  1920                           l1518:
  1921  000902                     ;main.c: 247:     TXSTA = 0x20;
  1922                           	movlw	low(020h)
  1923  000902  0E20               	movwf	((c:4012)),c	;volatile
  1924  000904  6EAC               	line	248
  1925                           ;main.c: 248:     RCSTA = 0x90;
  1926                           	movlw	low(090h)
  1927  000906  0E90               	movwf	((c:4011)),c	;volatile
  1928  000908  6EAB               	line	249
  1929                           ;main.c: 249:     BAUDCON = 0x0;
  1930                           	movlw	low(0)
  1931  00090A  0E00               	movwf	((c:4010)),c	;volatile
  1932  00090C  6EAA               	line	250
  1933                           ;main.c: 250:     SPBRG = 12;
  1934                           	movlw	low(0Ch)
  1935  00090E  0E0C               	movwf	((c:4015)),c	;volatile
  1936  000910  6EAF               	line	251
  1937                           	
  1938                           l185:
  1939  000912                     	return	;funcret
  1940  000912  0012               	opt stack 0
  1941                           GLOBAL	__end_of_init_UART
  1942                           	__end_of_init_UART:
  1943  000914                     	signat	_init_UART,89
  1944                           	global	_init_TMR1
  1945                           
  1946 ;; *************** function _init_TMR1 *****************
  1947 ;; Defined at:
  1948 ;;		line 192 in file "main.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1962 ;;      Params:         0       0       0       0
  1963 ;;      Locals:         0       0       0       0
  1964 ;;      Temps:          0       0       0       0
  1965 ;;      Totals:         0       0       0       0
  1966 ;;Total ram usage:        0 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    1
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           psect	text6,class=CODE,space=0,reloc=2,group=0
  1976                           	line	192
  1977                           global __ptext6
  1978                           __ptext6:
  1979  000926                     psect	text6
  1980                           	file	"main.c"
  1981                           	line	192
  1982                           	global	__size_of_init_TMR1
  1983                           	__size_of_init_TMR1	equ	__end_of_init_TMR1-_init_TMR1
  1984  0000                     	
  1985                           _init_TMR1:
  1986  000926                     ;incstack = 0
  1987                           	opt	stack 29
  1988                           	line	195
  1989                           	
  1990                           l1494:
  1991  000926                     ;main.c: 195:     T1CON = 0xF9;
  1992                           	movlw	low(0F9h)
  1993  000926  0EF9               	movwf	((c:4045)),c	;volatile
  1994  000928  6ECD               	line	196
  1995                           ;main.c: 196:     TMR1 = 53035;
  1996                           	movlw	high(0CF2Bh)
  1997  00092A  0ECF               	movwf	((c:4046+1)),c	;volatile
  1998  00092C  6ECF               	movlw	low(0CF2Bh)
  1999  00092E  0E2B               	movwf	((c:4046)),c	;volatile
  2000  000930  6ECE               	line	197
  2001                           	
  2002                           l170:
  2003  000932                     	return	;funcret
  2004  000932  0012               	opt stack 0
  2005                           GLOBAL	__end_of_init_TMR1
  2006                           	__end_of_init_TMR1:
  2007  000934                     	signat	_init_TMR1,89
  2008                           	global	_init_QEI
  2009                           
  2010 ;; *************** function _init_QEI *****************
  2011 ;; Defined at:
  2012 ;;		line 227 in file "main.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2026 ;;      Params:         0       0       0       0
  2027 ;;      Locals:         0       0       0       0
  2028 ;;      Temps:          0       0       0       0
  2029 ;;      Totals:         0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           psect	text7,class=CODE,space=0,reloc=2,group=0
  2040                           	line	227
  2041                           global __ptext7
  2042                           __ptext7:
  2043  0008AA                     psect	text7
  2044                           	file	"main.c"
  2045                           	line	227
  2046                           	global	__size_of_init_QEI
  2047                           	__size_of_init_QEI	equ	__end_of_init_QEI-_init_QEI
  2048  0000                     	
  2049                           _init_QEI:
  2050  0008AA                     ;incstack = 0
  2051                           	opt	stack 29
  2052                           	line	229
  2053                           	
  2054                           l1504:
  2055  0008AA                     ;main.c: 229:     CAP1BUFL = 0;
  2056                           	movlw	low(0)
  2057  0008AA  0E00               	movwf	((c:3944)),c	;volatile
  2058  0008AC  6E68               	line	230
  2059                           ;main.c: 230:     CAP1BUFH = 0;
  2060                           	movlw	low(0)
  2061  0008AE  0E00               	movwf	((c:3945)),c	;volatile
  2062  0008B0  6E69               	line	231
  2063                           	
  2064                           l1506:
  2065  0008B2                     ;main.c: 231:     TRISA4 = 1;
  2066                           	bsf	c:(31892/8),(31892)&7	;volatile
  2067  0008B2  8892               	line	232
  2068                           	
  2069                           l1508:
  2070  0008B4                     ;main.c: 232:     TRISA5 = 1;
  2071                           	bsf	c:(31893/8),(31893)&7	;volatile
  2072  0008B4  8A92               	line	235
  2073                           ;main.c: 235:     T5CON = 0x80;
  2074                           	movlw	low(080h)
  2075  0008B6  0E80               	movwf	((c:4023)),c	;volatile
  2076  0008B8  6EB7               	line	236
  2077                           ;main.c: 236:     QEICON = 0x19;
  2078                           	movlw	low(019h)
  2079  0008BA  0E19               	movwf	((c:4022)),c	;volatile
  2080  0008BC  6EB6               	line	237
  2081                           	
  2082                           l1510:
  2083  0008BE                     ;main.c: 237:     PR5 = 0xFFFF;
  2084                           	setf	((c:3984)),c	;volatile
  2085  0008BE  6890               	setf	((c:3984+1)),c	;volatile
  2086  0008C0  6891               	line	238
  2087                           	
  2088                           l1512:
  2089  0008C2                     ;main.c: 238:     CAP1REN = 1;
  2090                           	bsf	c:(31518/8),(31518)&7	;volatile
  2091  0008C2  8C63               	line	239
  2092                           	
  2093                           l1514:
  2094  0008C4                     ;main.c: 239:     TMR5ON = 1;
  2095                           	bsf	c:(32184/8),(32184)&7	;volatile
  2096  0008C4  80B7               	line	241
  2097                           	
  2098                           l182:
  2099  0008C6                     	return	;funcret
  2100  0008C6  0012               	opt stack 0
  2101                           GLOBAL	__end_of_init_QEI
  2102                           	__end_of_init_QEI:
  2103  0008C8                     	signat	_init_QEI,89
  2104                           	global	_init_PWM
  2105                           
  2106 ;; *************** function _init_PWM *****************
  2107 ;; Defined at:
  2108 ;;		line 209 in file "main.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;		None
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2122 ;;      Params:         0       0       0       0
  2123 ;;      Locals:         0       0       0       0
  2124 ;;      Temps:          0       0       0       0
  2125 ;;      Totals:         0       0       0       0
  2126 ;;Total ram usage:        0 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    2
  2129 ;; This function calls:
  2130 ;;		_write_PWM
  2131 ;; This function is called by:
  2132 ;;		_main
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           psect	text8,class=CODE,space=0,reloc=2,group=0
  2136                           	line	209
  2137                           global __ptext8
  2138                           __ptext8:
  2139  0008C8                     psect	text8
  2140                           	file	"main.c"
  2141                           	line	209
  2142                           	global	__size_of_init_PWM
  2143                           	__size_of_init_PWM	equ	__end_of_init_PWM-_init_PWM
  2144  0000                     	
  2145                           _init_PWM:
  2146  0008C8                     ;incstack = 0
  2147                           	opt	stack 28
  2148                           	line	211
  2149                           	
  2150                           l1496:
  2151  0008C8                     ;main.c: 211:     TRISC2 = 0;
  2152                           	bcf	c:(31906/8),(31906)&7	;volatile
  2153  0008C8  9494               	line	212
  2154                           ;main.c: 212:     LATC2 = 0;
  2155                           	bcf	c:(31834/8),(31834)&7	;volatile
  2156  0008CA  948B               	line	214
  2157                           	
  2158                           l1498:
  2159  0008CC                     ;main.c: 214:     CCP1CON = 0xF;
  2160                           	movlw	low(0Fh)
  2161  0008CC  0E0F               	movwf	((c:4029)),c	;volatile
  2162  0008CE  6EBD               	line	215
  2163                           ;main.c: 215:     T2CON = 0x4;
  2164                           	movlw	low(04h)
  2165  0008D0  0E04               	movwf	((c:4042)),c	;volatile
  2166  0008D2  6ECA               	line	216
  2167                           	
  2168                           l1500:
  2169  0008D4                     ;main.c: 216:     PR2 = 255u;
  2170                           	setf	((c:4043)),c	;volatile
  2171  0008D4  68CB               	line	217
  2172                           	
  2173                           l1502:
  2174  0008D6                     ;main.c: 217:     write_PWM(0);
  2175                           	movlw	high(0)
  2176  0008D6  0E00               	movlb	0	; () banked
  2177  0008D8  0100               	movwf	((write_PWM@dutyCycle+1))&0ffh
  2178  0008DA  6F61               	movlw	low(0)
  2179  0008DC  0E00               	movwf	((write_PWM@dutyCycle))&0ffh
  2180  0008DE  6F60               	call	_write_PWM	;wreg free
  2181  0008E0  EC41  F004         	line	218
  2182                           	
  2183                           l176:
  2184  0008E4                     	return	;funcret
  2185  0008E4  0012               	opt stack 0
  2186                           GLOBAL	__end_of_init_PWM
  2187                           	__end_of_init_PWM:
  2188  0008E6                     	signat	_init_PWM,89
  2189                           	global	_write_PWM
  2190                           
  2191 ;; *************** function _write_PWM *****************
  2192 ;; Defined at:
  2193 ;;		line 220 in file "main.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  dutyCycle       2    0[BANK0 ] unsigned int 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2207 ;;      Params:         0       2       0       0
  2208 ;;      Locals:         0       0       0       0
  2209 ;;      Temps:          0       1       0       0
  2210 ;;      Totals:         0       3       0       0
  2211 ;;Total ram usage:        3 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    1
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;;		_init_PWM
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           psect	text9,class=CODE,space=0,reloc=2,group=0
  2222                           	line	220
  2223                           global __ptext9
  2224                           __ptext9:
  2225  000882                     psect	text9
  2226                           	file	"main.c"
  2227                           	line	220
  2228                           	global	__size_of_write_PWM
  2229                           	__size_of_write_PWM	equ	__end_of_write_PWM-_write_PWM
  2230  0000                     	
  2231                           _write_PWM:
  2232  000882                     ;incstack = 0
  2233                           	opt	stack 29
  2234                           	line	222
  2235                           	
  2236                           l1364:
  2237  000882                     ;main.c: 220: void write_PWM(uint16_t dutyCycle);main.c: 221: {;main.c: 222:     CCP1CON
                                 bits.DC1B = dutyCycle % 4u;
  2238                           	movff	(write_PWM@dutyCycle),??_write_PWM+0+0
  2239  000882  C060  F062         	movlw	03h
  2240  000886  0E03               	movlb	0	; () banked
  2241  000888  0100               	andwf	(??_write_PWM+0+0)&0ffh
  2242  00088A  1762               	swapf	(??_write_PWM+0+0)&0ffh
  2243  00088C  3B62               	movf	((c:4029)),c,w	;volatile
  2244  00088E  50BD               	xorwf	(??_write_PWM+0+0)&0ffh,w
  2245  000890  1962               	andlw	not (((1<<2)-1)<<4)
  2246  000892  0BCF               	xorwf	(??_write_PWM+0+0)&0ffh,w
  2247  000894  1962               	movwf	((c:4029)),c	;volatile
  2248  000896  6EBD               	line	223
  2249                           	
  2250                           l1366:; BSR set to: 0
  2251  000898                     
  2252                           ;main.c: 223:     dutyCycle >>= 2;
  2253                           	bcf	status,0
  2254  000898  90D8               	rrcf	((write_PWM@dutyCycle+1))&0ffh
  2255  00089A  3361               	rrcf	((write_PWM@dutyCycle))&0ffh
  2256  00089C  3360               	bcf	status,0
  2257  00089E  90D8               	rrcf	((write_PWM@dutyCycle+1))&0ffh
  2258  0008A0  3361               	rrcf	((write_PWM@dutyCycle))&0ffh
  2259  0008A2  3360               	line	224
  2260                           	
  2261                           l1368:; BSR set to: 0
  2262  0008A4                     
  2263                           ;main.c: 224:     CCPR1L = (uint8_t) dutyCycle;
  2264                           	movff	(write_PWM@dutyCycle),(c:4030)	;volatile
  2265  0008A4  C060  FFBE         	line	225
  2266                           	
  2267                           l179:; BSR set to: 0
  2268  0008A8                     
  2269                           	return	;funcret
  2270  0008A8  0012               	opt stack 0
  2271                           GLOBAL	__end_of_write_PWM
  2272                           	__end_of_write_PWM:
  2273  0008AA                     	signat	_write_PWM,4217
  2274                           	global	_init_ISR
  2275                           
  2276 ;; *************** function _init_ISR *****************
  2277 ;; Defined at:
  2278 ;;		line 253 in file "main.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		None
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2292 ;;      Params:         0       0       0       0
  2293 ;;      Locals:         0       0       0       0
  2294 ;;      Temps:          0       0       0       0
  2295 ;;      Totals:         0       0       0       0
  2296 ;;Total ram usage:        0 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           psect	text10,class=CODE,space=0,reloc=2,group=0
  2306                           	line	253
  2307                           global __ptext10
  2308                           __ptext10:
  2309  0008E6                     psect	text10
  2310                           	file	"main.c"
  2311                           	line	253
  2312                           	global	__size_of_init_ISR
  2313                           	__size_of_init_ISR	equ	__end_of_init_ISR-_init_ISR
  2314  0000                     	
  2315                           _init_ISR:; BSR set to: 0
  2316  0008E6                     
  2317                           ;incstack = 0
  2318                           	opt	stack 29
  2319                           	line	256
  2320                           	
  2321                           l1520:
  2322  0008E6                     ;main.c: 256:     TMR1IF = 0;
  2323                           	bcf	c:(31984/8),(31984)&7	;volatile
  2324  0008E6  909E               	line	257
  2325                           ;main.c: 257:     TMR1IE = 1;
  2326                           	bsf	c:(31976/8),(31976)&7	;volatile
  2327  0008E8  809D               	line	258
  2328                           ;main.c: 258:     TMR1IP = 1;
  2329                           	bsf	c:(31992/8),(31992)&7	;volatile
  2330  0008EA  809F               	line	261
  2331                           ;main.c: 261:     TMR5IF = 0;
  2332                           	bcf	c:(32032/8),(32032)&7	;volatile
  2333  0008EC  90A4               	line	262
  2334                           ;main.c: 262:     TMR5IE = 1;
  2335                           	bsf	c:(32024/8),(32024)&7	;volatile
  2336  0008EE  80A3               	line	263
  2337                           ;main.c: 263:     TMR5IP = 1;
  2338                           	bsf	c:(32040/8),(32040)&7	;volatile
  2339  0008F0  80A5               	line	266
  2340                           ;main.c: 266:     TXIE = 0;
  2341                           	bcf	c:(31980/8),(31980)&7	;volatile
  2342  0008F2  989D               	line	267
  2343                           ;main.c: 267:     TXIP = 1;
  2344                           	bsf	c:(31996/8),(31996)&7	;volatile
  2345  0008F4  889F               	line	268
  2346                           ;main.c: 268:     TXIF = 0;
  2347                           	bcf	c:(31988/8),(31988)&7	;volatile
  2348  0008F6  989E               	line	270
  2349                           ;main.c: 270:     IPEN=1;
  2350                           	bsf	c:(32391/8),(32391)&7	;volatile
  2351  0008F8  8ED0               	line	271
  2352                           ;main.c: 271:     GIE = 1;
  2353                           	bsf	c:(32663/8),(32663)&7	;volatile
  2354  0008FA  8EF2               	line	272
  2355                           	
  2356                           l188:
  2357  0008FC                     	return	;funcret
  2358  0008FC  0012               	opt stack 0
  2359                           GLOBAL	__end_of_init_ISR
  2360                           	__end_of_init_ISR:
  2361  0008FE                     	signat	_init_ISR,89
  2362                           	global	_calculatePWM
  2363                           
  2364 ;; *************** function _calculatePWM *****************
  2365 ;; Defined at:
  2366 ;;		line 151 in file "main.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  setpoint        1    wreg     char 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  setpoint        1    0[COMRAM] char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  4   30[COMRAM] long 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2380 ;;      Params:         4       0       0       0
  2381 ;;      Locals:         0       0       0       0
  2382 ;;      Temps:          8       0       0       0
  2383 ;;      Totals:        12       0       0       0
  2384 ;;Total ram usage:       12 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    2
  2387 ;; This function calls:
  2388 ;;		___aldiv
  2389 ;;		___lldiv
  2390 ;;		___lmul
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           psect	text11,class=CODE,space=0,reloc=2,group=0
  2396                           	line	151
  2397                           global __ptext11
  2398                           __ptext11:
  2399  0000EA                     psect	text11
  2400                           	file	"main.c"
  2401                           	line	151
  2402                           	global	__size_of_calculatePWM
  2403                           	__size_of_calculatePWM	equ	__end_of_calculatePWM-_calculatePWM
  2404  0000                     	
  2405                           _calculatePWM:
  2406  0000EA                     ;incstack = 0
  2407                           	opt	stack 28
  2408                           	line	154
  2409                           	
  2410                           l1522:
  2411  0000EA                     ;main.c: 151: int32_t calculatePWM(int8_t setpoint);main.c: 152: {;main.c: 154:     if(0
                                  == GPREG.STPCRL)
  2412                           	btfsc	((c:_GPREG)),c,3
  2413  0000EA  B627               	goto	u721
  2414  0000EC  EF7A  F000         	goto	u720
  2415  0000F0  EF7C  F000         u721:
  2416  0000F4                     	goto	l1534
  2417  0000F4  EF9E  F000         u720:
  2418  0000F8                     	line	156
  2419                           	
  2420                           l1524:
  2421  0000F8                     ;main.c: 155:     {;main.c: 156:         vel = 0;
  2422                           	movlw	high(0)
  2423  0000F8  0E00               	movwf	((c:_vel+1)),c
  2424  0000FA  6E2E               	movlw	low(0)
  2425  0000FC  0E00               	movwf	((c:_vel)),c
  2426  0000FE  6E2D               	line	157
  2427                           	
  2428                           l1526:
  2429  000100                     ;main.c: 157:         vel = VELRH;
  2430                           	movff	(c:3945),(c:_vel)	;volatile
  2431  000100  CF69 F02D          	clrf	((c:_vel+1)),c
  2432  000104  6A2E               	line	158
  2433                           	
  2434                           l1528:
  2435  000106                     ;main.c: 158:         vel <<= 8;
  2436                           	movf	((c:_vel)),c,w
  2437  000106  502D               	movwf	((c:_vel+1)),c
  2438  000108  6E2E               	clrf	((c:_vel)),c
  2439  00010A  6A2D               	line	159
  2440                           	
  2441                           l1530:
  2442  00010C                     ;main.c: 159:         vel |= VELRL;
  2443                           	movf	((c:3944)),c,w	;volatile
  2444  00010C  5068               	iorwf	((c:_vel)),c
  2445  00010E  122D               	line	161
  2446                           	
  2447                           l1532:
  2448  000110                     ;main.c: 161:         vel = 571420u/vel;
  2449                           	movlw	low(08B81Ch)
  2450  000110  0E1C               	movwf	((c:___lldiv@dividend)),c
  2451  000112  6E33               	movlw	high(08B81Ch)
  2452  000114  0EB8               	movwf	((c:___lldiv@dividend+1)),c
  2453  000116  6E34               	movlw	low highword(08B81Ch)
  2454  000118  0E08               	movwf	((c:___lldiv@dividend+2)),c
  2455  00011A  6E35               	movlw	high highword(08B81Ch)
  2456  00011C  0E00               	movwf	((c:___lldiv@dividend+3)),c
  2457  00011E  6E36               	movff	(c:_vel),(c:___lldiv@divisor)
  2458  000120  C02D  F037         	movff	(c:_vel+1),(c:___lldiv@divisor+1)
  2459  000124  C02E  F038         	clrf	((c:___lldiv@divisor+2)),c
  2460  000128  6A39               	clrf	((c:___lldiv@divisor+3)),c
  2461  00012A  6A3A               
  2462                           	call	___lldiv	;wreg free
  2463  00012C  ECD7  F002         	movff	0+?___lldiv,(c:_vel)
  2464  000130  C033  F02D         	movff	1+?___lldiv,(c:_vel+1)
  2465  000134  C034  F02E         	line	163
  2466                           ;main.c: 163:     } else {
  2467                           	goto	l1538
  2468  000138  EFA5  F000         	
  2469                           l163:
  2470  00013C                     	line	164
  2471                           	
  2472                           l1534:
  2473  00013C                     ;main.c: 164:         vel = 0;
  2474                           	movlw	high(0)
  2475  00013C  0E00               	movwf	((c:_vel+1)),c
  2476  00013E  6E2E               	movlw	low(0)
  2477  000140  0E00               	movwf	((c:_vel)),c
  2478  000142  6E2D               	line	165
  2479                           	
  2480                           l1536:
  2481  000144                     ;main.c: 165:         GPREG.STPCRL = 0;
  2482                           	bcf	((c:_GPREG)),c,3
  2483  000144  9627               	goto	l1538
  2484  000146  EFA5  F000         	line	166
  2485                           ;main.c: 166:     }
  2486                           	
  2487                           l164:
  2488  00014A                     	line	168
  2489                           	
  2490                           l1538:
  2491  00014A                     ;main.c: 168:     error = (ref_vel - vel);
  2492                           	movff	(c:_vel),??_calculatePWM+0+0
  2493  00014A  C02D  F051         	movff	(c:_vel+1),??_calculatePWM+0+0+1
  2494  00014E  C02E  F052         	comf	(??_calculatePWM+0+0),c
  2495  000152  1E51               	comf	(??_calculatePWM+0+1),c
  2496  000154  1E52               	infsnz	(??_calculatePWM+0+0),c
  2497  000156  4A51               	incf	(??_calculatePWM+0+1),c
  2498  000158  2A52               	movf	((c:_ref_vel)),c,w
  2499  00015A  5059               	addwf	(??_calculatePWM+0+0),c,w
  2500  00015C  2451               	movwf	((c:_error)),c
  2501  00015E  6E21               	movf	((c:_ref_vel+1)),c,w
  2502  000160  505A               	addwfc	(??_calculatePWM+0+1),c,w
  2503  000162  2052               	movwf	1+((c:_error)),c
  2504  000164  6E22               	line	169
  2505                           	
  2506                           l1540:
  2507  000166                     ;main.c: 169:     suma_error += (50*(int32_t)error)/1000;
  2508                           	movff	(c:_error),(c:___lmul@multiplier)
  2509  000166  C021  F033         	movff	(c:_error+1),(c:___lmul@multiplier+1)
  2510  00016A  C022  F034         	movlw	0
  2511  00016E  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2512  000170  BE34               	movlw	-1
  2513  000172  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2514  000174  6E35               	movwf	((c:___lmul@multiplier+3)),c
  2515  000176  6E36               	movlw	low(032h)
  2516  000178  0E32               	movwf	((c:___lmul@multiplicand)),c
  2517  00017A  6E37               	movlw	high(032h)
  2518  00017C  0E00               	movwf	((c:___lmul@multiplicand+1)),c
  2519  00017E  6E38               	movlw	low highword(032h)
  2520  000180  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2521  000182  6E39               	movlw	high highword(032h)
  2522  000184  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2523  000186  6E3A               	call	___lmul	;wreg free
  2524  000188  ECF1  F003         	movff	0+?___lmul,(c:___aldiv@dividend)
  2525  00018C  C033  F03F         	movff	1+?___lmul,(c:___aldiv@dividend+1)
  2526  000190  C034  F040         	movff	2+?___lmul,(c:___aldiv@dividend+2)
  2527  000194  C035  F041         	movff	3+?___lmul,(c:___aldiv@dividend+3)
  2528  000198  C036  F042         	
  2529                           	movlw	low(03E8h)
  2530  00019C  0EE8               	movwf	((c:___aldiv@divisor)),c
  2531  00019E  6E43               	movlw	high(03E8h)
  2532  0001A0  0E03               	movwf	((c:___aldiv@divisor+1)),c
  2533  0001A2  6E44               	movlw	low highword(03E8h)
  2534  0001A4  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2535  0001A6  6E45               	movlw	high highword(03E8h)
  2536  0001A8  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2537  0001AA  6E46               	call	___aldiv	;wreg free
  2538  0001AC  ECDF  F001         	movf	(0+?___aldiv),c,w
  2539  0001B0  503F               	addwf	((c:_suma_error)),c
  2540  0001B2  2615               	movf	(1+?___aldiv),c,w
  2541  0001B4  5040               	addwfc	((c:_suma_error+1)),c
  2542  0001B6  2216               	movf	(2+?___aldiv),c,w
  2543  0001B8  5041               	addwfc	((c:_suma_error+2)),c
  2544  0001BA  2217               	movf	(3+?___aldiv),c,w
  2545  0001BC  5042               	addwfc	((c:_suma_error+3)),c
  2546  0001BE  2218               
  2547                           	line	170
  2548                           	
  2549                           l1542:
  2550  0001C0                     ;main.c: 170:     aceleracion = (int32_t)(error - error_ant)*20;
  2551                           	movff	(c:_error_ant),??_calculatePWM+0+0
  2552  0001C0  C01F  F051         	movff	(c:_error_ant+1),??_calculatePWM+0+0+1
  2553  0001C4  C020  F052         	comf	(??_calculatePWM+0+0),c
  2554  0001C8  1E51               	comf	(??_calculatePWM+0+1),c
  2555  0001CA  1E52               	infsnz	(??_calculatePWM+0+0),c
  2556  0001CC  4A51               	incf	(??_calculatePWM+0+1),c
  2557  0001CE  2A52               	movf	((c:_error)),c,w
  2558  0001D0  5021               	addwf	(??_calculatePWM+0+0),c
  2559  0001D2  2651               	movf	((c:_error+1)),c,w
  2560  0001D4  5022               	addwfc	(??_calculatePWM+0+1),c
  2561  0001D6  2252               	movff	??_calculatePWM+0+0,(c:___lmul@multiplier)
  2562  0001D8  C051  F033         	movff	??_calculatePWM+0+1,(c:___lmul@multiplier+1)
  2563  0001DC  C052  F034         	movlw	0
  2564  0001E0  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2565  0001E2  BE34               	movlw	-1
  2566  0001E4  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2567  0001E6  6E35               	movwf	((c:___lmul@multiplier+3)),c
  2568  0001E8  6E36               	movlw	low(014h)
  2569  0001EA  0E14               	movwf	((c:___lmul@multiplicand)),c
  2570  0001EC  6E37               	movlw	high(014h)
  2571  0001EE  0E00               	movwf	((c:___lmul@multiplicand+1)),c
  2572  0001F0  6E38               	movlw	low highword(014h)
  2573  0001F2  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2574  0001F4  6E39               	movlw	high highword(014h)
  2575  0001F6  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2576  0001F8  6E3A               	call	___lmul	;wreg free
  2577  0001FA  ECF1  F003         	movff	0+?___lmul,(c:_aceleracion)
  2578  0001FE  C033  F00D         	movff	1+?___lmul,(c:_aceleracion+1)
  2579  000202  C034  F00E         	movff	2+?___lmul,(c:_aceleracion+2)
  2580  000206  C035  F00F         	movff	3+?___lmul,(c:_aceleracion+3)
  2581  00020A  C036  F010         	
  2582                           	line	171
  2583                           	
  2584                           l1544:
  2585  00020E                     ;main.c: 171:     volt = ((PID.Kp * (int32_t)error) + ((PID.Ki * suma_error)) + (PID.Kd*
                                 aceleracion));
  2586                           	movff	(c:_error),(c:___lmul@multiplier)
  2587  00020E  C021  F033         	movff	(c:_error+1),(c:___lmul@multiplier+1)
  2588  000212  C022  F034         	movlw	0
  2589  000216  0E00               	btfsc	((c:___lmul@multiplier+1)),c,7
  2590  000218  BE34               	movlw	-1
  2591  00021A  0EFF               	movwf	((c:___lmul@multiplier+2)),c
  2592  00021C  6E35               	movwf	((c:___lmul@multiplier+3)),c
  2593  00021E  6E36               	movff	(c:_PID),(c:___lmul@multiplicand)
  2594  000220  C001  F037         	movff	(c:_PID+1),(c:___lmul@multiplicand+1)
  2595  000224  C002  F038         	movff	(c:_PID+2),(c:___lmul@multiplicand+2)
  2596  000228  C003  F039         	movff	(c:_PID+3),(c:___lmul@multiplicand+3)
  2597  00022C  C004  F03A         	call	___lmul	;wreg free
  2598  000230  ECF1  F003         	movff	0+?___lmul,??_calculatePWM+0+0
  2599  000234  C033  F051         	movff	1+?___lmul,??_calculatePWM+0+0+1
  2600  000238  C034  F052         	movff	2+?___lmul,??_calculatePWM+0+0+2
  2601  00023C  C035  F053         	movff	3+?___lmul,??_calculatePWM+0+0+3
  2602  000240  C036  F054         	
  2603                           	movff	0+((c:_PID)+04h),(c:___lmul@multiplier)
  2604  000244  C005  F033         	movff	1+((c:_PID)+04h),(c:___lmul@multiplier+1)
  2605  000248  C006  F034         	movff	2+((c:_PID)+04h),(c:___lmul@multiplier+2)
  2606  00024C  C007  F035         	movff	3+((c:_PID)+04h),(c:___lmul@multiplier+3)
  2607  000250  C008  F036         	movff	(c:_suma_error),(c:___lmul@multiplicand)
  2608  000254  C015  F037         	movff	(c:_suma_error+1),(c:___lmul@multiplicand+1)
  2609  000258  C016  F038         	movff	(c:_suma_error+2),(c:___lmul@multiplicand+2)
  2610  00025C  C017  F039         	movff	(c:_suma_error+3),(c:___lmul@multiplicand+3)
  2611  000260  C018  F03A         	call	___lmul	;wreg free
  2612  000264  ECF1  F003         	movf	(0+?___lmul),c,w
  2613  000268  5033               	addwf	(??_calculatePWM+0+0),c,w
  2614  00026A  2451               	movwf	(??_calculatePWM+4+0)&0ffh,c
  2615  00026C  6E55               	movf	(1+?___lmul),c,w
  2616  00026E  5034               	addwfc	(??_calculatePWM+0+1),c,w
  2617  000270  2052               	movwf	1+(??_calculatePWM+4+0)&0ffh,c
  2618  000272  6E56               	
  2619                           	movf	(2+?___lmul),c,w
  2620  000274  5035               	addwfc	(??_calculatePWM+0+2),c,w
  2621  000276  2053               	movwf	2+(??_calculatePWM+4+0)&0ffh,c
  2622  000278  6E57               	
  2623                           	movf	(3+?___lmul),c,w
  2624  00027A  5036               	addwfc	(??_calculatePWM+0+3),c,w
  2625  00027C  2054               	movwf	3+(??_calculatePWM+4+0)&0ffh,c
  2626  00027E  6E58               	movff	0+((c:_PID)+08h),(c:___lmul@multiplier)
  2627  000280  C009  F033         	movff	1+((c:_PID)+08h),(c:___lmul@multiplier+1)
  2628  000284  C00A  F034         	movff	2+((c:_PID)+08h),(c:___lmul@multiplier+2)
  2629  000288  C00B  F035         	movff	3+((c:_PID)+08h),(c:___lmul@multiplier+3)
  2630  00028C  C00C  F036         	movff	(c:_aceleracion),(c:___lmul@multiplicand)
  2631  000290  C00D  F037         	movff	(c:_aceleracion+1),(c:___lmul@multiplicand+1)
  2632  000294  C00E  F038         	movff	(c:_aceleracion+2),(c:___lmul@multiplicand+2)
  2633  000298  C00F  F039         	movff	(c:_aceleracion+3),(c:___lmul@multiplicand+3)
  2634  00029C  C010  F03A         	call	___lmul	;wreg free
  2635  0002A0  ECF1  F003         	movf	(0+?___lmul),c,w
  2636  0002A4  5033               	addwf	(??_calculatePWM+4+0),c,w
  2637  0002A6  2455               	movwf	((c:_volt)),c
  2638  0002A8  6E11               	movf	(1+?___lmul),c,w
  2639  0002AA  5034               	addwfc	(??_calculatePWM+4+1),c,w
  2640  0002AC  2056               	movwf	1+((c:_volt)),c
  2641  0002AE  6E12               	
  2642                           	movf	(2+?___lmul),c,w
  2643  0002B0  5035               	addwfc	(??_calculatePWM+4+2),c,w
  2644  0002B2  2057               	movwf	2+((c:_volt)),c
  2645  0002B4  6E13               	
  2646                           	movf	(3+?___lmul),c,w
  2647  0002B6  5036               	addwfc	(??_calculatePWM+4+3),c,w
  2648  0002B8  2058               	movwf	3+((c:_volt)),c
  2649  0002BA  6E14               	line	172
  2650                           	
  2651                           l1546:
  2652  0002BC                     ;main.c: 172:     volt /= 10;
  2653                           	movff	(c:_volt),(c:___aldiv@dividend)
  2654  0002BC  C011  F03F         	movff	(c:_volt+1),(c:___aldiv@dividend+1)
  2655  0002C0  C012  F040         	movff	(c:_volt+2),(c:___aldiv@dividend+2)
  2656  0002C4  C013  F041         	movff	(c:_volt+3),(c:___aldiv@dividend+3)
  2657  0002C8  C014  F042         	movlw	low(0Ah)
  2658  0002CC  0E0A               	movwf	((c:___aldiv@divisor)),c
  2659  0002CE  6E43               	movlw	high(0Ah)
  2660  0002D0  0E00               	movwf	((c:___aldiv@divisor+1)),c
  2661  0002D2  6E44               	movlw	low highword(0Ah)
  2662  0002D4  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2663  0002D6  6E45               	movlw	high highword(0Ah)
  2664  0002D8  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2665  0002DA  6E46               	call	___aldiv	;wreg free
  2666  0002DC  ECDF  F001         	movff	0+?___aldiv,(c:_volt)
  2667  0002E0  C03F  F011         	movff	1+?___aldiv,(c:_volt+1)
  2668  0002E4  C040  F012         	movff	2+?___aldiv,(c:_volt+2)
  2669  0002E8  C041  F013         	movff	3+?___aldiv,(c:_volt+3)
  2670  0002EC  C042  F014         	
  2671                           	line	173
  2672                           	
  2673                           l1548:
  2674  0002F0                     ;main.c: 173:     error_ant = error;
  2675                           	movff	(c:_error),(c:_error_ant)
  2676  0002F0  C021  F01F         	movff	(c:_error+1),(c:_error_ant+1)
  2677  0002F4  C022  F020         	line	176
  2678                           	
  2679                           l1550:
  2680  0002F8                     ;main.c: 176:     if(0 > volt)
  2681                           	btfsc	((c:_volt+3)),c,7
  2682  0002F8  BE14               	goto	u730
  2683  0002FA  EF83  F001         	goto	u731
  2684  0002FE  EF81  F001         
  2685                           u731:
  2686  000302                     	goto	l1554
  2687  000302  EF8D  F001         u730:
  2688  000306                     	line	178
  2689                           	
  2690                           l1552:
  2691  000306                     ;main.c: 177:     {;main.c: 178:         volt = 0;
  2692                           	movlw	low(0)
  2693  000306  0E00               	movwf	((c:_volt)),c
  2694  000308  6E11               	movlw	high(0)
  2695  00030A  0E00               	movwf	((c:_volt+1)),c
  2696  00030C  6E12               	movlw	low highword(0)
  2697  00030E  0E00               	movwf	((c:_volt+2)),c
  2698  000310  6E13               	movlw	high highword(0)
  2699  000312  0E00               	movwf	((c:_volt+3)),c
  2700  000314  6E14               	goto	l1554
  2701  000316  EF8D  F001         	line	179
  2702                           ;main.c: 179:     }
  2703                           	
  2704                           l165:
  2705  00031A                     	line	181
  2706                           	
  2707                           l1554:
  2708  00031A                     ;main.c: 181:     if(800 < volt)
  2709                           	btfsc	((c:_volt+3)),c,7
  2710  00031A  BE14               	goto	u741
  2711  00031C  EF9C  F001         	movf	((c:_volt+3)),c,w
  2712  000320  5014               	iorwf	((c:_volt+2)),c,w
  2713  000322  1013               	bnz	u740
  2714  000324  E10B               	movlw	33
  2715  000326  0E21               	subwf	 ((c:_volt)),c,w
  2716  000328  5C11               	movlw	3
  2717  00032A  0E03               	subwfb	((c:_volt+1)),c,w
  2718  00032C  5812               	btfss	status,0
  2719  00032E  A0D8               	goto	u741
  2720  000330  EF9C  F001         	goto	u740
  2721  000334  EF9E  F001         
  2722                           u741:
  2723  000338                     	goto	l1558
  2724  000338  EFA8  F001         u740:
  2725  00033C                     	line	183
  2726                           	
  2727                           l1556:
  2728  00033C                     ;main.c: 182:     {;main.c: 183:         volt = 800;
  2729                           	movlw	low(0320h)
  2730  00033C  0E20               	movwf	((c:_volt)),c
  2731  00033E  6E11               	movlw	high(0320h)
  2732  000340  0E03               	movwf	((c:_volt+1)),c
  2733  000342  6E12               	movlw	low highword(0320h)
  2734  000344  0E00               	movwf	((c:_volt+2)),c
  2735  000346  6E13               	movlw	high highword(0320h)
  2736  000348  0E00               	movwf	((c:_volt+3)),c
  2737  00034A  6E14               	goto	l1558
  2738  00034C  EFA8  F001         	line	184
  2739                           ;main.c: 184:     }
  2740                           	
  2741                           l166:
  2742  000350                     	line	186
  2743                           	
  2744                           l1558:
  2745  000350                     ;main.c: 186:     volt = (volt*1022u)/800;
  2746                           	movff	(c:_volt),(c:___lmul@multiplier)
  2747  000350  C011  F033         	movff	(c:_volt+1),(c:___lmul@multiplier+1)
  2748  000354  C012  F034         	movff	(c:_volt+2),(c:___lmul@multiplier+2)
  2749  000358  C013  F035         	movff	(c:_volt+3),(c:___lmul@multiplier+3)
  2750  00035C  C014  F036         	movlw	low(03FEh)
  2751  000360  0EFE               	movwf	((c:___lmul@multiplicand)),c
  2752  000362  6E37               	movlw	high(03FEh)
  2753  000364  0E03               	movwf	((c:___lmul@multiplicand+1)),c
  2754  000366  6E38               	movlw	low highword(03FEh)
  2755  000368  0E00               	movwf	((c:___lmul@multiplicand+2)),c
  2756  00036A  6E39               	movlw	high highword(03FEh)
  2757  00036C  0E00               	movwf	((c:___lmul@multiplicand+3)),c
  2758  00036E  6E3A               	call	___lmul	;wreg free
  2759  000370  ECF1  F003         	movff	0+?___lmul,(c:___aldiv@dividend)
  2760  000374  C033  F03F         	movff	1+?___lmul,(c:___aldiv@dividend+1)
  2761  000378  C034  F040         	movff	2+?___lmul,(c:___aldiv@dividend+2)
  2762  00037C  C035  F041         	movff	3+?___lmul,(c:___aldiv@dividend+3)
  2763  000380  C036  F042         	
  2764                           	movlw	low(0320h)
  2765  000384  0E20               	movwf	((c:___aldiv@divisor)),c
  2766  000386  6E43               	movlw	high(0320h)
  2767  000388  0E03               	movwf	((c:___aldiv@divisor+1)),c
  2768  00038A  6E44               	movlw	low highword(0320h)
  2769  00038C  0E00               	movwf	((c:___aldiv@divisor+2)),c
  2770  00038E  6E45               	movlw	high highword(0320h)
  2771  000390  0E00               	movwf	((c:___aldiv@divisor+3)),c
  2772  000392  6E46               	call	___aldiv	;wreg free
  2773  000394  ECDF  F001         	movff	0+?___aldiv,(c:_volt)
  2774  000398  C03F  F011         	movff	1+?___aldiv,(c:_volt+1)
  2775  00039C  C040  F012         	movff	2+?___aldiv,(c:_volt+2)
  2776  0003A0  C041  F013         	movff	3+?___aldiv,(c:_volt+3)
  2777  0003A4  C042  F014         	
  2778                           	line	189
  2779                           	
  2780                           l1560:
  2781  0003A8                     ;main.c: 189:     return volt;
  2782                           	movff	(c:_volt),(c:?_calculatePWM)
  2783  0003A8  C011  F04D         	movff	(c:_volt+1),(c:?_calculatePWM+1)
  2784  0003AC  C012  F04E         	movff	(c:_volt+2),(c:?_calculatePWM+2)
  2785  0003B0  C013  F04F         	movff	(c:_volt+3),(c:?_calculatePWM+3)
  2786  0003B4  C014  F050         	goto	l167
  2787  0003B8  EFDE  F001         	
  2788                           l1562:
  2789  0003BC                     	line	190
  2790                           	
  2791                           l167:
  2792  0003BC                     	return	;funcret
  2793  0003BC  0012               	opt stack 0
  2794                           GLOBAL	__end_of_calculatePWM
  2795                           	__end_of_calculatePWM:
  2796  0003BE                     	signat	_calculatePWM,4220
  2797                           	global	___lmul
  2798                           
  2799 ;; *************** function ___lmul *****************
  2800 ;; Defined at:
  2801 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  multiplier      4    4[COMRAM] unsigned long 
  2804 ;;  multiplicand    4    8[COMRAM] unsigned long 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  product         4   12[COMRAM] unsigned long 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  4    4[COMRAM] unsigned long 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2816 ;;      Params:         8       0       0       0
  2817 ;;      Locals:         4       0       0       0
  2818 ;;      Temps:          0       0       0       0
  2819 ;;      Totals:        12       0       0       0
  2820 ;;Total ram usage:       12 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    1
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_calculatePWM
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           psect	text12,class=CODE,space=0,reloc=2,group=1
  2830                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  2831                           	line	15
  2832                           global __ptext12
  2833                           __ptext12:
  2834  0007E2                     psect	text12
  2835                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul32.c"
  2836                           	line	15
  2837                           	global	__size_of___lmul
  2838                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  2839  0000                     	
  2840                           ___lmul:
  2841  0007E2                     ;incstack = 0
  2842                           	opt	stack 28
  2843                           	line	119
  2844                           	
  2845                           l1370:
  2846  0007E2                     	movlw	low(0)
  2847  0007E2  0E00               	movwf	((c:___lmul@product)),c
  2848  0007E4  6E3B               	movlw	high(0)
  2849  0007E6  0E00               	movwf	((c:___lmul@product+1)),c
  2850  0007E8  6E3C               	movlw	low highword(0)
  2851  0007EA  0E00               	movwf	((c:___lmul@product+2)),c
  2852  0007EC  6E3D               	movlw	high highword(0)
  2853  0007EE  0E00               	movwf	((c:___lmul@product+3)),c
  2854  0007F0  6E3E               	goto	l1372
  2855  0007F2  EFFB  F003         	line	120
  2856                           	
  2857                           l208:
  2858  0007F6                     	line	121
  2859                           	
  2860                           l1372:
  2861  0007F6                     	
  2862                           	btfss	((c:___lmul@multiplier)),c,(0)&7
  2863  0007F6  A033               	goto	u551
  2864  0007F8  EF00  F004         	goto	u550
  2865  0007FC  EF02  F004         u551:
  2866  000800                     	goto	l1376
  2867  000800  EF0C  F004         u550:
  2868  000804                     	line	122
  2869                           	
  2870                           l1374:
  2871  000804                     	movf	((c:___lmul@multiplicand)),c,w
  2872  000804  5037               	addwf	((c:___lmul@product)),c
  2873  000806  263B               	movf	((c:___lmul@multiplicand+1)),c,w
  2874  000808  5038               	addwfc	((c:___lmul@product+1)),c
  2875  00080A  223C               	movf	((c:___lmul@multiplicand+2)),c,w
  2876  00080C  5039               	addwfc	((c:___lmul@product+2)),c
  2877  00080E  223D               	movf	((c:___lmul@multiplicand+3)),c,w
  2878  000810  503A               	addwfc	((c:___lmul@product+3)),c
  2879  000812  223E               	goto	l1376
  2880  000814  EF0C  F004         	
  2881                           l209:
  2882  000818                     	line	123
  2883                           	
  2884                           l1376:
  2885  000818                     	bcf	status,0
  2886  000818  90D8               	rlcf	((c:___lmul@multiplicand)),c
  2887  00081A  3637               	rlcf	((c:___lmul@multiplicand+1)),c
  2888  00081C  3638               	rlcf	((c:___lmul@multiplicand+2)),c
  2889  00081E  3639               	rlcf	((c:___lmul@multiplicand+3)),c
  2890  000820  363A               	line	124
  2891                           	
  2892                           l1378:
  2893  000822                     	bcf	status,0
  2894  000822  90D8               	rrcf	((c:___lmul@multiplier+3)),c
  2895  000824  3236               	rrcf	((c:___lmul@multiplier+2)),c
  2896  000826  3235               	rrcf	((c:___lmul@multiplier+1)),c
  2897  000828  3234               	rrcf	((c:___lmul@multiplier)),c
  2898  00082A  3233               	line	125
  2899                           	movf	((c:___lmul@multiplier)),c,w
  2900  00082C  5033               iorwf	((c:___lmul@multiplier+1)),c,w
  2901  00082E  1034               iorwf	((c:___lmul@multiplier+2)),c,w
  2902  000830  1035               iorwf	((c:___lmul@multiplier+3)),c,w
  2903  000832  1036               	btfss	status,2
  2904  000834  A4D8               	goto	u561
  2905  000836  EF1F  F004         	goto	u560
  2906  00083A  EF21  F004         
  2907                           u561:
  2908  00083E                     	goto	l1372
  2909  00083E  EFFB  F003         u560:
  2910  000842                     	
  2911                           l210:
  2912  000842                     	line	128
  2913                           	movff	(c:___lmul@product),(c:?___lmul)
  2914  000842  C03B  F033         	movff	(c:___lmul@product+1),(c:?___lmul+1)
  2915  000846  C03C  F034         	movff	(c:___lmul@product+2),(c:?___lmul+2)
  2916  00084A  C03D  F035         	movff	(c:___lmul@product+3),(c:?___lmul+3)
  2917  00084E  C03E  F036         	line	129
  2918                           	
  2919                           l211:
  2920  000852                     	return	;funcret
  2921  000852  0012               	opt stack 0
  2922                           GLOBAL	__end_of___lmul
  2923                           	__end_of___lmul:
  2924  000854                     	signat	___lmul,8316
  2925                           	global	___lldiv
  2926                           
  2927 ;; *************** function ___lldiv *****************
  2928 ;; Defined at:
  2929 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  dividend        4    4[COMRAM] unsigned long 
  2932 ;;  divisor         4    8[COMRAM] unsigned long 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  quotient        4   12[COMRAM] unsigned long 
  2935 ;;  counter         1   16[COMRAM] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  4    4[COMRAM] unsigned long 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2945 ;;      Params:         8       0       0       0
  2946 ;;      Locals:         5       0       0       0
  2947 ;;      Temps:          0       0       0       0
  2948 ;;      Totals:        13       0       0       0
  2949 ;;Total ram usage:       13 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_calculatePWM
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           psect	text13,class=CODE,space=0,reloc=2,group=1
  2959                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  2960                           	line	7
  2961                           global __ptext13
  2962                           __ptext13:
  2963  0005AE                     psect	text13
  2964                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\__lldiv.c"
  2965                           	line	7
  2966                           	global	__size_of___lldiv
  2967                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  2968  0000                     	
  2969                           ___lldiv:
  2970  0005AE                     ;incstack = 0
  2971                           	opt	stack 28
  2972                           	line	13
  2973                           	
  2974                           l1380:
  2975  0005AE                     	movlw	low(0)
  2976  0005AE  0E00               	movwf	((c:___lldiv@quotient)),c
  2977  0005B0  6E3B               	movlw	high(0)
  2978  0005B2  0E00               	movwf	((c:___lldiv@quotient+1)),c
  2979  0005B4  6E3C               	movlw	low highword(0)
  2980  0005B6  0E00               	movwf	((c:___lldiv@quotient+2)),c
  2981  0005B8  6E3D               	movlw	high highword(0)
  2982  0005BA  0E00               	movwf	((c:___lldiv@quotient+3)),c
  2983  0005BC  6E3E               	line	14
  2984                           	
  2985                           l1382:
  2986  0005BE                     	movf	((c:___lldiv@divisor)),c,w
  2987  0005BE  5037               iorwf	((c:___lldiv@divisor+1)),c,w
  2988  0005C0  1038               iorwf	((c:___lldiv@divisor+2)),c,w
  2989  0005C2  1039               iorwf	((c:___lldiv@divisor+3)),c,w
  2990  0005C4  103A               	btfsc	status,2
  2991  0005C6  B4D8               	goto	u571
  2992  0005C8  EFE8  F002         	goto	u570
  2993  0005CC  EFEA  F002         
  2994                           u571:
  2995  0005D0                     	goto	l226
  2996  0005D0  EF2A  F003         u570:
  2997  0005D4                     	line	15
  2998                           	
  2999                           l1384:
  3000  0005D4                     	movlw	low(01h)
  3001  0005D4  0E01               	movwf	((c:___lldiv@counter)),c
  3002  0005D6  6E3F               	line	16
  3003                           	goto	l1388
  3004  0005D8  EFF6  F002         	
  3005                           l228:
  3006  0005DC                     	line	17
  3007                           	
  3008                           l1386:
  3009  0005DC                     	bcf	status,0
  3010  0005DC  90D8               	rlcf	((c:___lldiv@divisor)),c
  3011  0005DE  3637               	rlcf	((c:___lldiv@divisor+1)),c
  3012  0005E0  3638               	rlcf	((c:___lldiv@divisor+2)),c
  3013  0005E2  3639               	rlcf	((c:___lldiv@divisor+3)),c
  3014  0005E4  363A               	line	18
  3015                           	incf	((c:___lldiv@counter)),c
  3016  0005E6  2A3F               	goto	l1388
  3017  0005E8  EFF6  F002         	line	19
  3018                           	
  3019                           l227:
  3020  0005EC                     	line	16
  3021                           	
  3022                           l1388:
  3023  0005EC                     	
  3024                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
  3025  0005EC  AE3A               	goto	u581
  3026  0005EE  EFFB  F002         	goto	u580
  3027  0005F2  EFFD  F002         u581:
  3028  0005F6                     	goto	l1386
  3029  0005F6  EFEE  F002         u580:
  3030  0005FA                     	goto	l1390
  3031  0005FA  EF01  F003         	
  3032                           l229:
  3033  0005FE                     	goto	l1390
  3034  0005FE  EF01  F003         	line	20
  3035                           	
  3036                           l230:
  3037  000602                     	line	21
  3038                           	
  3039                           l1390:
  3040  000602                     	bcf	status,0
  3041  000602  90D8               	rlcf	((c:___lldiv@quotient)),c
  3042  000604  363B               	rlcf	((c:___lldiv@quotient+1)),c
  3043  000606  363C               	rlcf	((c:___lldiv@quotient+2)),c
  3044  000608  363D               	rlcf	((c:___lldiv@quotient+3)),c
  3045  00060A  363E               	line	22
  3046                           	
  3047                           l1392:
  3048  00060C                     		movf	((c:___lldiv@divisor)),c,w
  3049  00060C  5037               	subwf	((c:___lldiv@dividend)),c,w
  3050  00060E  5C33               	movf	((c:___lldiv@divisor+1)),c,w
  3051  000610  5038               	subwfb	((c:___lldiv@dividend+1)),c,w
  3052  000612  5834               	movf	((c:___lldiv@divisor+2)),c,w
  3053  000614  5039               	subwfb	((c:___lldiv@dividend+2)),c,w
  3054  000616  5835               	movf	((c:___lldiv@divisor+3)),c,w
  3055  000618  503A               	subwfb	((c:___lldiv@dividend+3)),c,w
  3056  00061A  5836               	btfss	status,0
  3057  00061C  A0D8               	goto	u591
  3058  00061E  EF13  F003         	goto	u590
  3059  000622  EF15  F003         
  3060                           u591:
  3061  000626                     	goto	l1398
  3062  000626  EF20  F003         u590:
  3063  00062A                     	line	23
  3064                           	
  3065                           l1394:
  3066  00062A                     	movf	((c:___lldiv@divisor)),c,w
  3067  00062A  5037               	subwf	((c:___lldiv@dividend)),c
  3068  00062C  5E33               	movf	((c:___lldiv@divisor+1)),c,w
  3069  00062E  5038               	subwfb	((c:___lldiv@dividend+1)),c
  3070  000630  5A34               	movf	((c:___lldiv@divisor+2)),c,w
  3071  000632  5039               	subwfb	((c:___lldiv@dividend+2)),c
  3072  000634  5A35               	movf	((c:___lldiv@divisor+3)),c,w
  3073  000636  503A               	subwfb	((c:___lldiv@dividend+3)),c
  3074  000638  5A36               	line	24
  3075                           	
  3076                           l1396:
  3077  00063A                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
  3078  00063A  803B               	goto	l1398
  3079  00063C  EF20  F003         	line	25
  3080                           	
  3081                           l231:
  3082  000640                     	line	26
  3083                           	
  3084                           l1398:
  3085  000640                     	bcf	status,0
  3086  000640  90D8               	rrcf	((c:___lldiv@divisor+3)),c
  3087  000642  323A               	rrcf	((c:___lldiv@divisor+2)),c
  3088  000644  3239               	rrcf	((c:___lldiv@divisor+1)),c
  3089  000646  3238               	rrcf	((c:___lldiv@divisor)),c
  3090  000648  3237               	line	27
  3091                           	
  3092                           l1400:
  3093  00064A                     	decfsz	((c:___lldiv@counter)),c
  3094  00064A  2E3F               	
  3095                           	goto	l1390
  3096  00064C  EF01  F003         	goto	l226
  3097  000650  EF2A  F003         	
  3098                           l232:
  3099  000654                     	line	28
  3100                           	
  3101                           l226:
  3102  000654                     	line	29
  3103                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
  3104  000654  C03B  F033         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
  3105  000658  C03C  F034         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
  3106  00065C  C03D  F035         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
  3107  000660  C03E  F036         	line	30
  3108                           	
  3109                           l233:
  3110  000664                     	return	;funcret
  3111  000664  0012               	opt stack 0
  3112                           GLOBAL	__end_of___lldiv
  3113                           	__end_of___lldiv:
  3114  000666                     	signat	___lldiv,8316
  3115                           	global	___aldiv
  3116                           
  3117 ;; *************** function ___aldiv *****************
  3118 ;; Defined at:
  3119 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  dividend        4   16[COMRAM] long 
  3122 ;;  divisor         4   20[COMRAM] long 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  quotient        4   26[COMRAM] long 
  3125 ;;  sign            1   25[COMRAM] unsigned char 
  3126 ;;  counter         1   24[COMRAM] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  4   16[COMRAM] long 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3136 ;;      Params:         8       0       0       0
  3137 ;;      Locals:         6       0       0       0
  3138 ;;      Temps:          0       0       0       0
  3139 ;;      Totals:        14       0       0       0
  3140 ;;Total ram usage:       14 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    1
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_calculatePWM
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           psect	text14,class=CODE,space=0,reloc=2,group=1
  3150                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3151                           	line	7
  3152                           global __ptext14
  3153                           __ptext14:
  3154  0003BE                     psect	text14
  3155                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aldiv.c"
  3156                           	line	7
  3157                           	global	__size_of___aldiv
  3158                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  3159  0000                     	
  3160                           ___aldiv:
  3161  0003BE                     ;incstack = 0
  3162                           	opt	stack 28
  3163                           	line	13
  3164                           	
  3165                           l1402:
  3166  0003BE                     	movlw	low(0)
  3167  0003BE  0E00               	movwf	((c:___aldiv@sign)),c
  3168  0003C0  6E48               	line	14
  3169                           	
  3170                           l1404:
  3171  0003C2                     	btfsc	((c:___aldiv@divisor+3)),c,7
  3172  0003C2  BE46               	goto	u600
  3173  0003C4  EFE8  F001         	goto	u601
  3174  0003C8  EFE6  F001         
  3175                           u601:
  3176  0003CC                     	goto	l1410
  3177  0003CC  EFF4  F001         u600:
  3178  0003D0                     	line	15
  3179                           	
  3180                           l1406:
  3181  0003D0                     	comf	((c:___aldiv@divisor+3)),c
  3182  0003D0  1E46               	comf	((c:___aldiv@divisor+2)),c
  3183  0003D2  1E45               	comf	((c:___aldiv@divisor+1)),c
  3184  0003D4  1E44               	negf	((c:___aldiv@divisor)),c
  3185  0003D6  6C43               	movlw	0
  3186  0003D8  0E00               	addwfc	((c:___aldiv@divisor+1)),c
  3187  0003DA  2244               	addwfc	((c:___aldiv@divisor+2)),c
  3188  0003DC  2245               	addwfc	((c:___aldiv@divisor+3)),c
  3189  0003DE  2246               	line	16
  3190                           	
  3191                           l1408:
  3192  0003E0                     	movlw	low(01h)
  3193  0003E0  0E01               	movwf	((c:___aldiv@sign)),c
  3194  0003E2  6E48               	goto	l1410
  3195  0003E4  EFF4  F001         	line	17
  3196                           	
  3197                           l268:
  3198  0003E8                     	line	18
  3199                           	
  3200                           l1410:
  3201  0003E8                     	btfsc	((c:___aldiv@dividend+3)),c,7
  3202  0003E8  BE42               	goto	u610
  3203  0003EA  EFFB  F001         	goto	u611
  3204  0003EE  EFF9  F001         
  3205                           u611:
  3206  0003F2                     	goto	l1416
  3207  0003F2  EF07  F002         u610:
  3208  0003F6                     	line	19
  3209                           	
  3210                           l1412:
  3211  0003F6                     	comf	((c:___aldiv@dividend+3)),c
  3212  0003F6  1E42               	comf	((c:___aldiv@dividend+2)),c
  3213  0003F8  1E41               	comf	((c:___aldiv@dividend+1)),c
  3214  0003FA  1E40               	negf	((c:___aldiv@dividend)),c
  3215  0003FC  6C3F               	movlw	0
  3216  0003FE  0E00               	addwfc	((c:___aldiv@dividend+1)),c
  3217  000400  2240               	addwfc	((c:___aldiv@dividend+2)),c
  3218  000402  2241               	addwfc	((c:___aldiv@dividend+3)),c
  3219  000404  2242               	line	20
  3220                           	
  3221                           l1414:
  3222  000406                     	movlw	(01h)&0ffh
  3223  000406  0E01               	xorwf	((c:___aldiv@sign)),c
  3224  000408  1A48               	goto	l1416
  3225  00040A  EF07  F002         	line	21
  3226                           	
  3227                           l269:
  3228  00040E                     	line	22
  3229                           	
  3230                           l1416:
  3231  00040E                     	movlw	low(0)
  3232  00040E  0E00               	movwf	((c:___aldiv@quotient)),c
  3233  000410  6E49               	movlw	high(0)
  3234  000412  0E00               	movwf	((c:___aldiv@quotient+1)),c
  3235  000414  6E4A               	movlw	low highword(0)
  3236  000416  0E00               	movwf	((c:___aldiv@quotient+2)),c
  3237  000418  6E4B               	movlw	high highword(0)
  3238  00041A  0E00               	movwf	((c:___aldiv@quotient+3)),c
  3239  00041C  6E4C               	line	23
  3240                           	
  3241                           l1418:
  3242  00041E                     	movf	((c:___aldiv@divisor)),c,w
  3243  00041E  5043               iorwf	((c:___aldiv@divisor+1)),c,w
  3244  000420  1044               iorwf	((c:___aldiv@divisor+2)),c,w
  3245  000422  1045               iorwf	((c:___aldiv@divisor+3)),c,w
  3246  000424  1046               	btfsc	status,2
  3247  000426  B4D8               	goto	u621
  3248  000428  EF18  F002         	goto	u620
  3249  00042C  EF1A  F002         
  3250                           u621:
  3251  000430                     	goto	l1438
  3252  000430  EF5C  F002         u620:
  3253  000434                     	line	24
  3254                           	
  3255                           l1420:
  3256  000434                     	movlw	low(01h)
  3257  000434  0E01               	movwf	((c:___aldiv@counter)),c
  3258  000436  6E47               	line	25
  3259                           	goto	l1424
  3260  000438  EF26  F002         	
  3261                           l272:
  3262  00043C                     	line	26
  3263                           	
  3264                           l1422:
  3265  00043C                     	bcf	status,0
  3266  00043C  90D8               	rlcf	((c:___aldiv@divisor)),c
  3267  00043E  3643               	rlcf	((c:___aldiv@divisor+1)),c
  3268  000440  3644               	rlcf	((c:___aldiv@divisor+2)),c
  3269  000442  3645               	rlcf	((c:___aldiv@divisor+3)),c
  3270  000444  3646               	line	27
  3271                           	incf	((c:___aldiv@counter)),c
  3272  000446  2A47               	goto	l1424
  3273  000448  EF26  F002         	line	28
  3274                           	
  3275                           l271:
  3276  00044C                     	line	25
  3277                           	
  3278                           l1424:
  3279  00044C                     	
  3280                           	btfss	((c:___aldiv@divisor+3)),c,(31)&7
  3281  00044C  AE46               	goto	u631
  3282  00044E  EF2B  F002         	goto	u630
  3283  000452  EF2D  F002         u631:
  3284  000456                     	goto	l1422
  3285  000456  EF1E  F002         u630:
  3286  00045A                     	goto	l1426
  3287  00045A  EF31  F002         	
  3288                           l273:
  3289  00045E                     	goto	l1426
  3290  00045E  EF31  F002         	line	29
  3291                           	
  3292                           l274:
  3293  000462                     	line	30
  3294                           	
  3295                           l1426:
  3296  000462                     	bcf	status,0
  3297  000462  90D8               	rlcf	((c:___aldiv@quotient)),c
  3298  000464  3649               	rlcf	((c:___aldiv@quotient+1)),c
  3299  000466  364A               	rlcf	((c:___aldiv@quotient+2)),c
  3300  000468  364B               	rlcf	((c:___aldiv@quotient+3)),c
  3301  00046A  364C               	line	31
  3302                           	
  3303                           l1428:
  3304  00046C                     		movf	((c:___aldiv@divisor)),c,w
  3305  00046C  5043               	subwf	((c:___aldiv@dividend)),c,w
  3306  00046E  5C3F               	movf	((c:___aldiv@divisor+1)),c,w
  3307  000470  5044               	subwfb	((c:___aldiv@dividend+1)),c,w
  3308  000472  5840               	movf	((c:___aldiv@divisor+2)),c,w
  3309  000474  5045               	subwfb	((c:___aldiv@dividend+2)),c,w
  3310  000476  5841               	movf	((c:___aldiv@divisor+3)),c,w
  3311  000478  5046               	subwfb	((c:___aldiv@dividend+3)),c,w
  3312  00047A  5842               	btfss	status,0
  3313  00047C  A0D8               	goto	u641
  3314  00047E  EF43  F002         	goto	u640
  3315  000482  EF45  F002         
  3316                           u641:
  3317  000486                     	goto	l1434
  3318  000486  EF50  F002         u640:
  3319  00048A                     	line	32
  3320                           	
  3321                           l1430:
  3322  00048A                     	movf	((c:___aldiv@divisor)),c,w
  3323  00048A  5043               	subwf	((c:___aldiv@dividend)),c
  3324  00048C  5E3F               	movf	((c:___aldiv@divisor+1)),c,w
  3325  00048E  5044               	subwfb	((c:___aldiv@dividend+1)),c
  3326  000490  5A40               	movf	((c:___aldiv@divisor+2)),c,w
  3327  000492  5045               	subwfb	((c:___aldiv@dividend+2)),c
  3328  000494  5A41               	movf	((c:___aldiv@divisor+3)),c,w
  3329  000496  5046               	subwfb	((c:___aldiv@dividend+3)),c
  3330  000498  5A42               	line	33
  3331                           	
  3332                           l1432:
  3333  00049A                     	bsf	(0+(0/8)+(c:___aldiv@quotient)),c,(0)&7
  3334  00049A  8049               	goto	l1434
  3335  00049C  EF50  F002         	line	34
  3336                           	
  3337                           l275:
  3338  0004A0                     	line	35
  3339                           	
  3340                           l1434:
  3341  0004A0                     	bcf	status,0
  3342  0004A0  90D8               	rrcf	((c:___aldiv@divisor+3)),c
  3343  0004A2  3246               	rrcf	((c:___aldiv@divisor+2)),c
  3344  0004A4  3245               	rrcf	((c:___aldiv@divisor+1)),c
  3345  0004A6  3244               	rrcf	((c:___aldiv@divisor)),c
  3346  0004A8  3243               	line	36
  3347                           	
  3348                           l1436:
  3349  0004AA                     	decfsz	((c:___aldiv@counter)),c
  3350  0004AA  2E47               	
  3351                           	goto	l1426
  3352  0004AC  EF31  F002         	goto	l1438
  3353  0004B0  EF5C  F002         	
  3354                           l276:
  3355  0004B4                     	goto	l1438
  3356  0004B4  EF5C  F002         	line	37
  3357                           	
  3358                           l270:
  3359  0004B8                     	line	38
  3360                           	
  3361                           l1438:
  3362  0004B8                     	movf	((c:___aldiv@sign)),c,w
  3363  0004B8  5048               	btfsc	status,2
  3364  0004BA  B4D8               	goto	u651
  3365  0004BC  EF62  F002         	goto	u650
  3366  0004C0  EF64  F002         u651:
  3367  0004C4                     	goto	l1442
  3368  0004C4  EF6E  F002         u650:
  3369  0004C8                     	line	39
  3370                           	
  3371                           l1440:
  3372  0004C8                     	comf	((c:___aldiv@quotient+3)),c
  3373  0004C8  1E4C               	comf	((c:___aldiv@quotient+2)),c
  3374  0004CA  1E4B               	comf	((c:___aldiv@quotient+1)),c
  3375  0004CC  1E4A               	negf	((c:___aldiv@quotient)),c
  3376  0004CE  6C49               	movlw	0
  3377  0004D0  0E00               	addwfc	((c:___aldiv@quotient+1)),c
  3378  0004D2  224A               	addwfc	((c:___aldiv@quotient+2)),c
  3379  0004D4  224B               	addwfc	((c:___aldiv@quotient+3)),c
  3380  0004D6  224C               	goto	l1442
  3381  0004D8  EF6E  F002         	
  3382                           l277:
  3383  0004DC                     	line	40
  3384                           	
  3385                           l1442:
  3386  0004DC                     	movff	(c:___aldiv@quotient),(c:?___aldiv)
  3387  0004DC  C049  F03F         	movff	(c:___aldiv@quotient+1),(c:?___aldiv+1)
  3388  0004E0  C04A  F040         	movff	(c:___aldiv@quotient+2),(c:?___aldiv+2)
  3389  0004E4  C04B  F041         	movff	(c:___aldiv@quotient+3),(c:?___aldiv+3)
  3390  0004E8  C04C  F042         	goto	l278
  3391  0004EC  EF78  F002         	
  3392                           l1444:
  3393  0004F0                     	line	41
  3394                           	
  3395                           l278:
  3396  0004F0                     	return	;funcret
  3397  0004F0  0012               	opt stack 0
  3398                           GLOBAL	__end_of___aldiv
  3399                           	__end_of___aldiv:
  3400  0004F2                     	signat	___aldiv,8316
  3401                           	global	_ISR_high
  3402                           
  3403 ;; *************** function _ISR_high *****************
  3404 ;; Defined at:
  3405 ;;		line 61 in file "main.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3419 ;;      Params:         0       0       0       0
  3420 ;;      Locals:         0       0       0       0
  3421 ;;      Temps:          4       0       0       0
  3422 ;;      Totals:         4       0       0       0
  3423 ;;Total ram usage:        4 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; This function calls:
  3426 ;;		Nothing
  3427 ;; This function is called by:
  3428 ;;		Interrupt level 2
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           psect	intcode,class=CODE,space=0,reloc=2
  3432                           global __pintcode
  3433                           __pintcode:
  3434  000008                     psect	intcode
  3435                           	file	"main.c"
  3436                           	line	61
  3437                           	global	__size_of_ISR_high
  3438                           	__size_of_ISR_high	equ	__end_of_ISR_high-_ISR_high
  3439  0000                     	
  3440                           _ISR_high:
  3441  000008                     ;incstack = 0
  3442                           	opt	stack 28
  3443                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  3444  000008  825B               	movff	fsr2l+0,??_ISR_high+2
  3445  00000A  CFD9 F031          	movff	fsr2h+0,??_ISR_high+3
  3446  00000E  CFDA F032          	line	63
  3447                           	
  3448                           i2l1088:
  3449  000012                     ;main.c: 63:     if(1 == TMR5IE && 1 == TMR5IF)
  3450                           	btfss	c:(32024/8),(32024)&7	;volatile
  3451  000012  A0A3               	goto	i2u22_41
  3452  000014  EF0E  F000         	goto	i2u22_40
  3453  000018  EF10  F000         i2u22_41:
  3454  00001C                     	goto	i2l143
  3455  00001C  EF19  F000         i2u22_40:
  3456  000020                     	
  3457                           i2l1090:
  3458  000020                     	btfss	c:(32032/8),(32032)&7	;volatile
  3459  000020  A0A4               	goto	i2u23_41
  3460  000022  EF15  F000         	goto	i2u23_40
  3461  000026  EF17  F000         i2u23_41:
  3462  00002A                     	goto	i2l143
  3463  00002A  EF19  F000         i2u23_40:
  3464  00002E                     	line	65
  3465                           	
  3466                           i2l1092:
  3467  00002E                     ;main.c: 64:     {;main.c: 65:         TMR5IF = 0;
  3468                           	bcf	c:(32032/8),(32032)&7	;volatile
  3469  00002E  90A4               	line	66
  3470                           ;main.c: 66:         GPREG.STPCRL = 1;
  3471                           	bsf	((c:_GPREG)),c,3
  3472  000030  8627               	line	67
  3473                           ;main.c: 67:     }
  3474                           	
  3475                           i2l143:
  3476  000032                     	line	69
  3477                           ;main.c: 69:     if(1 == TMR1IE && 1 == TMR1IF)
  3478                           	btfss	c:(31976/8),(31976)&7	;volatile
  3479  000032  A09D               	goto	i2u24_41
  3480  000034  EF1E  F000         	goto	i2u24_40
  3481  000038  EF20  F000         i2u24_41:
  3482  00003C                     	goto	i2l1100
  3483  00003C  EF30  F000         i2u24_40:
  3484  000040                     	
  3485                           i2l1094:
  3486  000040                     	btfss	c:(31984/8),(31984)&7	;volatile
  3487  000040  A09E               	goto	i2u25_41
  3488  000042  EF25  F000         	goto	i2u25_40
  3489  000046  EF27  F000         i2u25_41:
  3490  00004A                     	goto	i2l1100
  3491  00004A  EF30  F000         i2u25_40:
  3492  00004E                     	line	71
  3493                           	
  3494                           i2l1096:
  3495  00004E                     ;main.c: 70:     {;main.c: 71:         GPREG.STCTRL = 1;
  3496                           	bsf	((c:_GPREG)),c,1
  3497  00004E  8227               	line	72
  3498                           ;main.c: 72:         TMR1IF = 0;
  3499                           	bcf	c:(31984/8),(31984)&7	;volatile
  3500  000050  909E               	line	73
  3501                           ;main.c: 73:         TMR1ON = 0;
  3502                           	bcf	c:(32360/8),(32360)&7	;volatile
  3503  000052  90CD               	line	74
  3504                           	
  3505                           i2l1098:
  3506  000054                     ;main.c: 74:         TMR1 = 65485;
  3507                           	movlw	high(0FFCDh)
  3508  000054  0EFF               	movwf	((c:4046+1)),c	;volatile
  3509  000056  6ECF               	movlw	low(0FFCDh)
  3510  000058  0ECD               	movwf	((c:4046)),c	;volatile
  3511  00005A  6ECE               	goto	i2l1100
  3512  00005C  EF30  F000         	line	76
  3513                           ;main.c: 76:     }
  3514                           	
  3515                           i2l144:
  3516  000060                     	line	78
  3517                           	
  3518                           i2l1100:
  3519  000060                     ;main.c: 78:     if((1 == TXIE) && (1 == TXIF))
  3520                           	btfss	c:(31980/8),(31980)&7	;volatile
  3521  000060  A89D               	goto	i2u26_41
  3522  000062  EF35  F000         	goto	i2u26_40
  3523  000066  EF37  F000         i2u26_41:
  3524  00006A                     	goto	i2l149
  3525  00006A  EF6D  F000         i2u26_40:
  3526  00006E                     	
  3527                           i2l1102:
  3528  00006E                     	btfss	c:(31988/8),(31988)&7	;volatile
  3529  00006E  A89E               	goto	i2u27_41
  3530  000070  EF3C  F000         	goto	i2u27_40
  3531  000074  EF3E  F000         i2u27_41:
  3532  000078                     	goto	i2l149
  3533  000078  EF6D  F000         i2u27_40:
  3534  00007C                     	line	80
  3535                           	
  3536                           i2l1104:
  3537  00007C                     ;main.c: 79:     {;main.c: 80:         if(4 < cursor)
  3538                           		movf	((c:_cursor)),c,w
  3539  00007C  5025               	xorlw	80h
  3540  00007E  0A80               	addlw	-(80h^05h)
  3541  000080  0F7B               	btfss	status,0
  3542  000082  A0D8               	goto	i2u28_41
  3543  000084  EF46  F000         	goto	i2u28_40
  3544  000088  EF48  F000         
  3545                           i2u28_41:
  3546  00008C                     	goto	i2l1108
  3547  00008C  EF4C  F000         i2u28_40:
  3548  000090                     	line	82
  3549                           	
  3550                           i2l1106:
  3551  000090                     ;main.c: 81:         {;main.c: 82:             TXREG = 0x2C;
  3552                           	movlw	low(02Ch)
  3553  000090  0E2C               	movwf	((c:4013)),c	;volatile
  3554  000092  6EAD               	line	83
  3555                           ;main.c: 83:         } else {
  3556                           	goto	i2l1110
  3557  000094  EF5B  F000         	
  3558                           i2l146:
  3559  000098                     	line	84
  3560                           	
  3561                           i2l1108:
  3562  000098                     ;main.c: 84:             TXREG = *(string_vel + cursor);
  3563                           	movff	(c:_cursor),??_ISR_high+0+0
  3564  000098  C025  F02F         	clrf	(??_ISR_high+0+0+1)&0ffh,c
  3565  00009C  6A30               	btfsc	(??_ISR_high+0+0)&0ffh,c,7
  3566  00009E  BE2F               	decf	(??_ISR_high+0+0+1)&0ffh,c
  3567  0000A0  0630               	movf	(??_ISR_high+0+0),c,w
  3568  0000A2  502F               	addwf	((c:_string_vel)),c,w
  3569  0000A4  241B               	movwf	c:fsr2l
  3570  0000A6  6ED9               	movf	(??_ISR_high+0+1),c,w
  3571  0000A8  5030               	addwfc	((c:_string_vel+1)),c,w
  3572  0000AA  201C               	movwf	1+c:fsr2l
  3573  0000AC  6EDA               	movf	indf2,w
  3574  0000AE  50DF               	movwf	((c:4013)),c	;volatile
  3575  0000B0  6EAD               	goto	i2l1110
  3576  0000B2  EF5B  F000         	line	85
  3577                           ;main.c: 85:         }
  3578                           	
  3579                           i2l147:
  3580  0000B6                     	line	86
  3581                           	
  3582                           i2l1110:
  3583  0000B6                     ;main.c: 86:         cursor++;
  3584                           	incf	((c:_cursor)),c
  3585  0000B6  2A25               	line	87
  3586                           	
  3587                           i2l1112:
  3588  0000B8                     ;main.c: 87:         if(5 < cursor)
  3589                           		movf	((c:_cursor)),c,w
  3590  0000B8  5025               	xorlw	80h
  3591  0000BA  0A80               	addlw	-(80h^06h)
  3592  0000BC  0F7A               	btfss	status,0
  3593  0000BE  A0D8               	goto	i2u29_41
  3594  0000C0  EF64  F000         	goto	i2u29_40
  3595  0000C4  EF66  F000         
  3596                           i2u29_41:
  3597  0000C8                     	goto	i2l149
  3598  0000C8  EF6D  F000         i2u29_40:
  3599  0000CC                     	line	89
  3600                           	
  3601                           i2l1114:
  3602  0000CC                     ;main.c: 88:         {;main.c: 89:             TXIE = 0;
  3603                           	bcf	c:(31980/8),(31980)&7	;volatile
  3604  0000CC  989D               	line	90
  3605                           	
  3606                           i2l1116:
  3607  0000CE                     ;main.c: 90:             cursor = 0;
  3608                           	movlw	low(0)
  3609  0000CE  0E00               	movwf	((c:_cursor)),c
  3610  0000D0  6E25               	goto	i2l149
  3611  0000D2  EF6D  F000         	line	91
  3612                           ;main.c: 91:         }
  3613                           	
  3614                           i2l148:
  3615  0000D6                     	goto	i2l149
  3616  0000D6  EF6D  F000         	line	92
  3617                           ;main.c: 92:     }
  3618                           	
  3619                           i2l145:
  3620  0000DA                     	line	94
  3621                           	
  3622                           i2l149:
  3623  0000DA                     	movff	??_ISR_high+3,fsr2h+0
  3624  0000DA  C032  FFDA         	movff	??_ISR_high+2,fsr2l+0
  3625  0000DE  C031  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  3626  0000E2  925B               	retfie f
  3627  0000E4  0011               	opt stack 0
  3628                           GLOBAL	__end_of_ISR_high
  3629                           	__end_of_ISR_high:
  3630  0000E6                     	signat	_ISR_high,89
  3631                           	GLOBAL	__activetblptr
  3632                           __activetblptr	EQU	0
  3633  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  3634                           	PSECT	rparam,class=COMRAM,space=1,noexec
  3635                           	GLOBAL	__Lrparam
  3636                           	FNCONF	rparam,??,?
  3637                           	GLOBAL	___rparam_used
  3638                           	___rparam_used EQU 1
  3639  0000                     	GLOBAL	___param_bank
  3640                           	___param_bank EQU 0
  3641  0000                     GLOBAL	__Lparam, __Hparam
  3642                           GLOBAL	__Lrparam, __Hrparam
  3643                           __Lparam	EQU	__Lrparam
  3644  0000                     __Hparam	EQU	__Hrparam
  3645  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  3646                           	global	btemp
  3647                           btemp:
  3648  00005B                     	ds	1
  3649  00005B                     	global	int$flags
  3650                           	int$flags	set btemp
  3651  0000                     	global	wtemp8
  3652                           	wtemp8 set btemp+1
  3653  0000                     	global	ttemp5
  3654                           	ttemp5 set btemp+1
  3655  0000                     	global	ttemp6
  3656                           	ttemp6 set btemp+4
  3657  0000                     	global	ttemp7
  3658                           	ttemp7 set btemp+8
  3659  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      90
    BANK0           160      4       4
    BANK1           256      0       0
    BANK2           244      0       0

Pointer List with Targets:

    string_input	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__int2char	PTR unsigned char  size(2) Largest target is 5
		 -> int2char@string(COMRAM[5]), 

    string_vel	PTR unsigned char  size(2) Largest target is 5
		 -> NULL(NULL[0]), int2char@string(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_calculatePWM
    _int2char->___lwdiv
    _write_PWM->_calculatePWM
    _calculatePWM->___aldiv
    ___aldiv->___lmul

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_write_PWM
    _init_PWM->_write_PWM

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4345
                                              3 BANK0      1     1      0
                       _calculatePWM
                           _init_ISR
                           _init_PWM
                           _init_QEI
                          _init_TMR1
                          _init_UART
                         _init_VNHIO
                           _int2char
                          _write_PWM
 ---------------------------------------------------------------------------------
 (1) _int2char                                             5     3      2    1090
                                             11 COMRAM     5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _init_VNHIO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_QEI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PWM                                             0     0      0     245
                          _write_PWM
 ---------------------------------------------------------------------------------
 (1) _write_PWM                                            3     1      2     245
                                              0 BANK0      3     1      2
                       _calculatePWM (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calculatePWM                                        13     9      4    2762
                                             30 COMRAM    12     8      4
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1356
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     985
                                             16 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_high                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculatePWM
     ___aldiv
       ___lmul (ARG)
     ___lldiv
     ___lmul
   _init_ISR
   _init_PWM
     _write_PWM
       _calculatePWM (ARG)
         ___aldiv
           ___lmul (ARG)
         ___lldiv
         ___lmul
   _init_QEI
   _init_TMR1
   _init_UART
   _init_VNHIO
   _int2char
     ___lwdiv
     ___lwmod
   _write_PWM
     _calculatePWM (ARG)
       ___aldiv
         ___lmul (ARG)
       ___lldiv
       ___lmul

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F3      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2            F4      0       0       8        0.0%
BANK2               F4      0       0       9        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      4       4       4        2.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      5A       1       95.7%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E       5        0.0%
DATA                 0      0      5E      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Oct 29 19:05:57 2018

           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$RC 000000                      l210 0842  
                    l211 0852                      l230 0602                      l231 0640  
                    l232 0654                      l208 07F6                      l160 05AA  
                    l233 0664                      l209 0818                      l226 0654  
                    l170 0932                      l154 054A                      l227 05EC  
                    l163 013C                      l155 05A2                      l228 05DC  
                    l164 014A                      l156 0596                      l229 05FE  
                    l165 031A                      l173 0924                      l157 059A  
                    l270 04B8                      l166 0350                      l182 08C6  
                    l158 05A6                      l271 044C                      l167 03BC  
                    l159 05AA                      l272 043C                      l176 08E4  
                    l273 045E                      l185 0912                      l193 074A  
                    l274 0462                      l194 06FE                      l275 04A0  
                    l179 08A8                      l195 075C                      l276 04B4  
                    l268 03E8                      l188 08FC                      l700 07D8  
                    l196 0768                      l277 04DC                      l269 040E  
                    l701 0790                      l278 04F0                      l702 0784  
                    l703 07A2                      l704 07A6                      l705 07C8  
                    l706 07D8                      l707 07E0                      l690 06E4  
                    l691 0694                      l692 0688                      l693 06A6  
                    l694 06AA                      l695 06D4                      l696 06E4  
                    l697 06EC                      _GIE 007F97             __CFG_CPB$OFF 000000  
                    _PR2 000FCB                      _PID 0001                      u600 03D0  
                    u601 03CC                      _PR5 000F90                      u610 03F6  
           __CFG_CPD$OFF 000000                      u611 03F2                      u620 0434  
                    u700 079E                      u621 0430                      u701 079A  
                    u630 045A                      u550 0804                      u710 07BC  
                    u631 0456                      u551 0800                      u711 07B8  
                    u640 048A                      u560 0842                      u720 00F8  
                    u641 0486                      u561 083E                      u721 00F4  
                    u650 04C8                      u570 05D4                      u730 0306  
                    u651 04C4                      u571 05D0                      u731 0302  
                    u580 05FA                      u740 033C                      u660 0680  
                    u581 05F6                      u741 0338                      u661 067C  
                    u590 062A                      u670 06A2                      u750 0758  
                    u591 0626                      u671 069E                      u751 0754  
                    u680 06C6                      u760 0558                      u681 06C2  
                    u761 0554                      u690 077C                      u770 058E  
                    u691 0778                      u771 058A                      _vel 002D  
                    prod 000FF3                      wreg 000FE8             __CFG_IESO$ON 000000  
            int2char@num 003C             __CFG_LVP$OFF 000000                     l1400 064A  
                   l1410 03E8                     l1402 03BE                     l1420 0434  
                   l1412 03F6                     l1404 03C2                     l1500 08D4  
                   l1430 048A                     l1422 043C                     l1414 0406  
                   l1406 03D0                     l1502 08D6                     l1510 08BE  
                   l1440 04C8                     l1432 049A                     l1424 044C  
                   l1416 040E                     l1408 03E0                     l1520 08E6  
                   l1512 08C2                     l1504 08AA                     l1600 0558  
                   l1442 04DC                     l1434 04A0                     l1426 0462  
                   l1418 041E                     l1370 07E2                     l1530 010C  
                   l1522 00EA                     l1514 08C4                     l1506 08B2  
                   l1450 0680                     l1602 056A                     l1444 04F0  
                   l1436 04AA                     l1428 046C                     l1380 05AE  
                   l1372 07F6                     l1540 0166                     l1532 0110  
                   l1524 00F8                     l1364 0882                     l1508 08B4  
                   l1516 08FE                     l1460 06C6                     l1452 0688  
                   l1604 057E                     l1438 04B8                     l1390 0602  
                   l1382 05BE                     l1374 0804                     l1550 02F8  
                   l1542 01C0                     l1526 0100                     l1534 013C  
                   l1366 0898                     l1518 0902                     l1462 06CE  
                   l1454 0694                     l1446 0666                     l1470 077C  
                   l1606 0580                     l1392 060C                     l1384 05D4  
                   l1376 0818                     l1560 03A8                     l1552 0306  
                   l1544 020E                     l1536 0144                     l1528 0106  
                   l1368 08A4                     l1464 06D4                     l1456 06AA  
                   l1448 066E                     l1480 07C8                     l1472 0784  
                   l1608 058E                     l1394 062A                     l1386 05DC  
                   l1378 0822                     l1562 03BC                     l1554 031A  
                   l1546 02BC                     l1538 014A                     l1490 0920  
                   l1466 06DA                     l1458 06B0                     l1482 07CE  
                   l1474 0790                     l1570 0728                     l1396 063A  
                   l1388 05EC                     l1556 033C                     l1548 02F0  
                   l1492 0922                     l1484 0914                     l1476 07A6  
                   l1468 076A                     l1572 0744                     l1564 06EE  
                   l1580 04F2                     l1398 0640                     l1558 0350  
                   l1494 0926                     l1486 091C                     l1478 07BC  
                   l1574 074A                     l1566 06F6                     l1590 0536  
                   l1582 0526                     l1496 08C8                     l1488 091E  
                   l1576 075C                     l1568 06FE                     l1592 053A  
                   l1584 052A                     l1498 08CC                     l1578 0768  
                   l1594 053E                     l1586 052E                     l1596 0540  
                   l1588 0532                     l1598 054A                     _IPEN 007E87  
            main@counter 0063                     _TMR1 000FCE                     _TXIE 007CEC  
                   _TXIF 007CF4                     _TXIP 007CFC            __CFG_FCMEN$ON 000000  
                   _main 04F2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     btemp 005B                     _volt 0011  
          __CFG_BOREN$ON 000000                     prodl 000FF3                     start 00E6  
          __CFG_MCLRE$ON 000000             ___param_bank 000000          __end_of___aldiv 04F2  
                  ?_main 002F          __end_of___lldiv 0666                    _T1CON 000FCD  
                  _T2CON 000FCA                    _LATA0 007C48                    _LATA1 007C49  
                  _LATC2 007C5A                    _T5CON 000FB7          __end_of___lwdiv 06EE  
                  _GPREG 0027          __end_of___lwmod 07E2                    i2l143 0032  
                  i2l144 0060                    i2l145 00DA                    i2l146 0098  
                  i2l147 00B6                    i2l148 00D6                    i2l149 00DA  
                  _RCSTA 000FAB                    _SPBRG 000FAF                    _VELRH 000F69  
                  _VELRL 000F68                    _TXREG 000FAD                    _TXSTA 000FAC  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
    ___lmul@multiplicand 0037            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
       __end_of_ISR_high 00E6            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _error 0021  
                  _input 0023                    tablat 000FF5                    ttemp5 005C  
                  ttemp6 005F                    ttemp7 0063                    status 000FD8  
                  wtemp8 005C            int2char@digit 003E          __initialization 0854  
         __CFG_HPOL$HIGH 000000             __end_of_main 05AE             _string_input 0019  
         __CFG_LPOL$HIGH 000000                   ??_main 0059            __activetblptr 000000  
                 _CCPR1L 000FBE                   _ANSEL0 000FB8                   _ANSEL1 000FB9  
  __size_of_calculatePWM 02D4                   i2l1100 0060                   i2l1110 00B6  
                 i2l1102 006E                   i2l1112 00B8                   i2l1104 007C  
                 i2l1114 00CC                   i2l1106 0090                   i2l1116 00CE  
                 i2l1108 0098                   i2l1090 0020                   i2l1092 002E  
                 i2l1094 0040                   i2l1096 004E                   i2l1088 0012  
                 i2l1098 0054           __CFG_WDTEN$OFF 000000                   _QEICON 000FB6  
                 _OSCCON 000FD3                   _TMR1IE 007CE8                   _TMR1IF 007CF0  
         __CFG_WINEN$OFF 000000                   _TMR1IP 007CF8                   _TMR5IE 007D18  
                 _TMR5IF 007D20                   _TMR1ON 007E68                   _TMR5IP 007D28  
                 _TMR5ON 007DB8                   _TRISA0 007C90                   _TRISA1 007C91  
                 _TRISA4 007C94                   _TRISA5 007C95                   _TRISC2 007CA2  
                 _TRISC6 007CA6           __CFG_SSPMX$RC7 000000         __end_of_int2char 076A  
                 ___lmul 07E2                ??___aldiv 0047           __CFG_STVREN$ON 000000  
              ??___lldiv 003B                ??___lwdiv 0037                ??___lwmod 0037  
       __end_of_init_QEI 08C8         __end_of_init_ISR 08FE         __end_of_init_PWM 08E6  
                 _cursor 0025                   clear_0 0872             __pdataCOMRAM 0059  
           _calculatePWM 00EA                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0878  
        __CFG_FLTAMX$RC1 000000            ___rparam_used 000001          __CFG_T1OSCMX$ON 000000  
         __pcstackCOMRAM 002F                ?_ISR_high 002F           int2char@number 003A  
         int2char@string 0028       __size_of_init_UART 0016       __size_of_init_TMR1 000E  
                ?___lmul 0033               ??_ISR_high 002F          __CFG_WDPS$32768 000000  
                _CAP1REN 007B1E                  _CCP1CON 000FBD                  _BAUDCON 000FAA  
         ___lmul@product 003B          __CFG_PWM4MX$RB5 000000                  i2u22_40 0020  
                i2u22_41 001C                  i2u23_40 002E                  i2u23_41 002A  
                i2u24_40 0040                  i2u24_41 003C                  i2u25_40 004E  
                i2u25_41 004A                  i2u26_40 006E                  i2u26_41 006A  
                i2u27_40 007C                  i2u27_41 0078                  i2u28_40 0090  
                i2u28_41 008C                  i2u29_40 00CC                  i2u29_41 00C8  
              ?_int2char 003A          __CFG_PWMPIN$OFF 000000                ?_init_QEI 002F  
              ?_init_ISR 002F                ?_init_PWM 002F       __size_of_write_PWM 0028  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
             _init_VNHIO 0914                  ___aldiv 03BE          __size_of___lmul 0072  
                ___lldiv 05AE                  ___lwdiv 0666                  ___lwmod 076A  
                __pcinit 0854                  __ramtop 0300                  __ptext0 04F2  
                __ptext1 06EE                  __ptext2 076A                  __ptext3 0666  
                __ptext4 0914                  __ptext5 08FE                  __ptext6 0926  
                __ptext7 08AA                  __ptext8 08C8                  __ptext9 0882  
      __end_of_init_UART 0914        __end_of_init_TMR1 0934                  _ref_vel 0059  
       ___aldiv@dividend 003F                  _vel_ant 001D                  _vel_rpm 0026  
             ??_int2char 003C     end_of_initialization 0878               ??_init_QEI 0033  
             ??_init_ISR 0033               ??_init_PWM 0059          ___lldiv@divisor 0037  
        ___lldiv@counter 003F         ___aldiv@quotient 0049                  postinc0 000FEE  
      __end_of_write_PWM 08AA               _suma_error 0015              _CCP1CONbits 000FBD  
            ?_init_VNHIO 002F               _string_vel 001B         __CFG_EXCLKMX$RC3 000000  
         __end_of___lmul 0854            __pidataCOMRAM 0934        __size_of_ISR_high 00DE  
    start_initialization 0854              _aceleracion 000D                 ??___lmul 003B  
     write_PWM@dutyCycle 0060              __pbssCOMRAM 0001            __pcstackBANK0 0060  
    __size_of_init_VNHIO 0012        __size_of_int2char 007C        __size_of_init_QEI 001E  
      __size_of_init_ISR 0018        __size_of_init_PWM 001E         ___lwdiv@dividend 0033  
              __pintcode 0008                 ?___aldiv 003F                 ?___lldiv 0033  
               ?___lwdiv 0033                 ?___lwmod 0033                 _CAP1BUFH 000F69  
               _CAP1BUFL 000F68                _init_UART 08FE                _init_TMR1 0926  
       ___lwdiv@quotient 0038                _error_ant 001F          ___aldiv@divisor 0043  
        ___aldiv@counter 0047                 _ISR_high 0008            ?_calculatePWM 004D  
             ?_init_UART 002F               ?_init_TMR1 002F                _write_PWM 0882  
      ___lmul@multiplier 0033                 __Hrparam 0000             ??_init_VNHIO 0033  
               __Lrparam 0000         __size_of___aldiv 0134         __size_of___lldiv 00B8  
       __size_of___lwdiv 0088         __size_of___lwmod 0078           ??_calculatePWM 0051  
        ___lwdiv@divisor 0035          ___lwdiv@counter 0037                 __ptext10 08E6  
               __ptext11 00EA                 __ptext12 07E2                 __ptext13 05AE  
               __ptext14 03BE               ?_write_PWM 0060       __end_of_init_VNHIO 0926  
               _int2char 06EE                 _init_QEI 08AA                 _init_ISR 08E6  
               _init_PWM 08C8            __size_of_main 00BC                 int$flags 005B  
            ??_init_UART 0033              ??_init_TMR1 0033     calculatePWM@setpoint 002F  
               intlevel2 0000         ___lwmod@dividend 0033         ___lldiv@dividend 0033  
       ___lldiv@quotient 003B          ___lwmod@divisor 0035          ___lwmod@counter 0037  
           ___aldiv@sign 0048              ??_write_PWM 0062     __end_of_calculatePWM 03BE  
